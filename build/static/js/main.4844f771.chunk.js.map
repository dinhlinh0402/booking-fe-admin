{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","assets/images/bookingcare-2020.svg","assets/images/logo.png","components/sidebar/Sidebar.jsx","redux/actions/ThemeAction.js","components/thememenu/ThemeMenu.jsx","assets/images/tuat.png","utils/url.js","components/topnav/TopNav.jsx","pages/TestRouter.jsx","components/status-card/StatusCard.jsx","apis/RequestClient/index.js","apis/Customer/index.js","pages/Customers/components/AddEditUser.jsx","components/Icon/CareStaff/Stoke.jsx","apis/User/index.js","pages/Customers/index.jsx","router/AuthRouter.js","utils/regex.jsx","components/Filter/FilterObjDropDown.jsx","components/Icon/Doctor/FilterIcon.jsx","apis/Clinic/index.js","apis/Specialty/index.js","apis/Doctor/index.js","pages/Doctor/components/CreateDoctor.jsx","pages/Doctor/index.jsx","apis/CareStaff/index.js","pages/CareStaff/components/CreateStaff.jsx","pages/CareStaff/index.jsx","pages/Clinic/components/CreateClinic.jsx","pages/Clinic/index.jsx","pages/Specialty/components/CreateEdit.jsx","pages/Specialty/index.jsx","apis/Schedules/index.js","pages/Schedules/components/CreateSchedule.jsx","pages/Schedules/index.jsx","apis/Bookings/index.js","components/Icon/Common/BackIcon.jsx","pages/Customers/components/Detail/index.jsx","common/constants/gender.js","common/constants/doctor.js","pages/Doctor/components/DetailDoctor/index.jsx","pages/Clinic/components/DetailClinic/TableDoctor/index.jsx","pages/Clinic/components/DetailClinic/TabClinicInformation/index.jsx","pages/Clinic/components/DetailClinic/TabClinicIntroduce/index.jsx","pages/Clinic/components/DetailClinic/index.jsx","apis/Auth/index.js","pages/PersonalInformation/components/InformationAdmin.jsx","pages/PersonalInformation/components/TabInformation.jsx","pages/PersonalInformation/components/TabIntroduce.jsx","pages/PersonalInformation/components/InformationDoctor.jsx","pages/PersonalInformation/index.jsx","pages/NotFound/index.jsx","pages/Auth/ChangePassword/index.jsx","pages/WatchSchedule/Admin/index.jsx","pages/Dashboard/Admin/index.jsx","components/Routes.jsx","pages/Auth/Login/index.jsx","pages/ AppointmentSchedule/compoments/DetailPatient.jsx","apis/Historyy/index.js","pages/ AppointmentSchedule/compoments/ExaminationDone/index.jsx","pages/ AppointmentSchedule/index.jsx","pages/WatchSchedule/ManageClinic/index.jsx","pages/ManagerClinic/Doctor/components/CreateDoctor.jsx","pages/ManagerClinic/Doctor/index.jsx","pages/ManagerClinic/Clinic/index.jsx","pages/ManagerClinic/Doctor/components/DetailDoctor/index.jsx","pages/ManagerClinic/NewPatient/components/DetailPatientBooking/DetailPatient.jsx","pages/ManagerClinic/NewPatient/components/TableCancel.jsx","pages/ManagerClinic/NewPatient/components/TableConfirmed.jsx","pages/ManagerClinic/NewPatient/components/TableDone.jsx","pages/ManagerClinic/NewPatient/components/TableNewPatient.jsx","pages/ManagerClinic/NewPatient/indedx.jsx","pages/Dashboard/ManagerClinic/index.jsx","pages/Dashboard/Doctor/index.jsx","components/RoutesDoctor.jsx","pages/Auth/ForgotPassword/index.jsx","components/layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","SidebarItem","props","active","className","icon","title","Sidebar","useState","sidebarItems","setSidebarItems","user","JSON","parse","localStorage","getItem","useEffect","role","sidebar_items_admin","sidebar_items_doctor","index","findIndex","item","display_name","splice","console","log","sidebar_items_manage_clinic","activeItem","route","split","join","location","pathname","slice","src","logo2","alt","length","map","to","exportDefault","setColor","setMode","getTheme","mode_settings","id","name","background","class","color_settings","ThemeMenu","content_ref","toggle_ref","menu_ref","useRef","menu_toggle_ref","document","addEventListener","e","current","contains","target","classList","toggle","remove","currMode","setcurrMode","currColor","setcurrColor","dispatch","useDispatch","themeClass","find","colorClass","undefined","ref","onClick","add","setItem","ThemeAction","baseURL","Topnav","userData","useLocation","history","useHistory","setName","Object","keys","nameUser","firstName","middleName","lastName","trim","items","key","label","pathName","push","UserOutlined","style","fontSize","margin","KeyOutlined","removeItem","LogoutOutlined","menu","cursor","avatar","backgroundColor","TestRouter","StatusCard","count","requestClient","axios","create","headers","Authorization","CustomerApis","getCustomer","params","get","createCustomer","data","post","updateCustomer","userId","urlParam","put","Option","Select","listGender","value","AddEditUser","isShowModal","handleCancelModal","dataCustomer","loading","setLoading","Form","useForm","form","setFieldsValue","birthday","moment","handleAddEditCustomer","addNewCustomer","status","toast","success","response","error","open","onCancel","width","footer","spinning","onFinish","values","autoComplete","layout","gutter","span","Item","rules","required","message","size","placeholder","max","validator","_","RegExp","test","Promise","resolve","reject","email","gender","phoneNumber","picker","showNow","format","disabledDate","address","textAlign","danger","htmlType","Stroke","height","viewBox","fill","xmlns","fillRule","clipRule","d","UserApis","getListUser","deleteUser","delete","changeStatus","getUserById","changeAvatar","updateUser","Customer","Typography","Text","selectedRowKeys","setSelectedRowKeys","listUser","setListUser","dataRes","setDataRes","isLoading","page","pageSize","pagination","setPagination","search","setSearch","typingSearch","isModalAdd","setModalAdd","isShowModalDelete","setShowModalDelete","take","q","identityCardNumber","columns","dataIndex","render","record","ellipsis","handleDeleteCustomer","userIds","suffix","SearchOutlined","onChange","clearTimeout","setTimeout","handleSearch","FilterOutlined","PlusCircleOutlined","rowKey","dataSource","rowSelection","newSelectedRowKeys","meta","total","itemCount","defaultPageSize","showSizeChanger","pageSizeOptions","locale","items_per_page","scroll","x","visible","onOk","cancelText","okText","fontWeight","accessToken","AuthContext","React","createContext","RequireAuth","children","useContext","change_alias","alias","str","toLowerCase","replace","FilterObjDropDown","checkAll","isSearch","plainOptions","checkedList","keyFilter","displayName","handleCheckAll","handleCheck","listOptions","setListOptions","indeterminate","setIndeterminate","searchLike","filter","i","onCheckAllChange","checked","list","overlay","allowClear","prefix","Group","image","Empty","PRESENTED_IMAGE_SIMPLE","marginBottom","trigger","getPopupContainer","parentElement","DownOutlined","FilterIcon","stroke","strokeLinecap","strokeLinejoin","ClinicApis","getClinics","deleteClinic","changeActive","createClinic","getClinicById","clinicId","updateClinic","createClinicIntroduct","updateClinicIntroduct","clinicInforId","SpecialtyApis","getSpecialtyByClinic","getListSpecialty","createSpecialty","deleteSpecialty","updateSpecialty","specialtyId","DoctorApis","getListDoctor","createDoctor","getDoctorInfoExtra","doctorInforId","createDoctorInfor","updateDoctor","doctorId","updateDoctorInfoExtra","getDoctorById","listRole","CreateDoctor","optionsClinic","setOptionsClinic","optionsSpecialty","setOptionsSpecialty","getListClinic","pages","listOptionsClinic","handleAddNewDoctor","handleChangSelectClinic","dataSpecialty","listSpecialty","showSearch","filterOption","input","option","includes","HEAD_OF_DOCTOR","DOCTOR","MANAGER_CLINIC","listStatus","Doctor","isModalCreate","setModalCreate","showFilter","setShowFilter","listClinic","setListClinic","setListSpecialty","clinic","specialty","setCheckedList","listDoctor","setListDoctor","dataResponse","setDataResponse","showBtn","setShowBtn","clinicIds","specialtyIds","checkShow","forEach","elm","btnArray","some","LockOutlined","transform","handleChangeStatus","UnlockOutlined","align","fixed","handleDeleteDoctor","marginTop","placeholderSearch","CareStaffApis","getCareStaff","createCareStaff","updateCareStaff","CreateStaff","detailStaff","handleSubmitStaff","CareStaff","listCareStaff","setListStaff","typeModal","setTypeModal","setDetailStaff","getListCareStaff","listStaff","CreateClinic","handleAddNewClinic","specialties","stringify","emai","phone","province","showArrow","Clinic","handleChangeActive","createdDate","handleDeleteClinic","modulesQill","toolbar","clipboard","matchVisual","delay","maxStack","userOnly","formats","CreateEditSpecialty","dataUpdate","fileListImage","setFileListImage","description","uid","url","handleSubmitSpecialty","fileSize","fileList","isLt2M","formData","FormData","append","originFileObj","newData","res","resetFields","overflowY","overflowX","listType","beforeUpload","newFileList","maxCount","PlusOutlined","theme","modules","Specialty","setShowModal","setDataUpdate","listSpecialtyData","lastModifiedDate","handleDeleteSpecialty","ScheduleApis","getListSchedule","createSchdules","deleteManySchedule","dateNow","Date","listTime","CreateSchedule","doctor","selectDate","setSelectDate","date","handleAddNewSchedule","times","time","timeStart","timeEnd","minHeight","maxHeight","showToday","stringDate","min","defaultValue","List","fields","restField","Fragment","DeleteOutlined","block","Schedules","listSchedule","setListSchedule","listScheduleDisable","isShowChangeSchedule","setShowChangeSchedule","setUser","userLocal","getSchedules","listScheduleMap","parseInt","booked","timeStartDayClone","scheduleIds","dataDelete","warning","text","showTime","borderRadius","direction","padding","WarningFilled","BookingApis","getBookings","updateBooking","bookingId","getBookingByClinic","BackIcon","fillOpacity","RangePicker","DatePicker","DetailCustomer","examinationDay","setExaminationDay","isModalUpdate","setModalUpdate","dataCustomerModal","setDataCustomerModal","dataInfoCustomer","setDataInfoCustomer","listHistory","setListHistory","date1","diff","customerId","useParams","getInfoCustomer","getHistory","patientId","dataHistory","mapData","idx","stt","schedule","prescription","bookingRelatives","reason","doctorNote","download","href","window","back","EditOutlined","ranges","Now","startOf","endOf","overlayStyle","listPositon","listPayment","TextArea","Input","DetailDoctor","dataDoctor","setDataDoctor","setDataDoctorRes","formIntroduce","editInformation","setEditInformation","editIntroduce","setEditIntroduce","fileListAvatar","setFileListAvatar","setDoctorInforId","dataDoctorInfo","getInfoDoctor","religion","nation","doctorInfor","position","price","payment","introduct","note","handleUpdateDoctor","resData","handleUpdateDoctorIntroduce","dataSaveDoctorInfo","defaultActiveKey","TabPane","tab","disabled","formatter","parser","rows","readOnly","TableDoctor","TabClinicInformation","dataClinic","handleUpdateClinic","TabClinicIntroduce","dataClinicIntroduce","strengths","equipment","procedure","handleClinicIntroduce","clinicInforRes","DetailClinic","setDataClinic","getClinic","dataResClinic","clinicInfor","AuthApis","login","authMe","resetPassViaEmail","changePassword","Title","InformationAdmin","dataUser","handleReset","loadingAvatar","setLoadingAvatar","loadingUpdate","setLoadingUpdate","handleUploadAvatar","file","offset","noStyle","shouldUpdate","prev","cur","toUpperCase","marginLeft","level","showUploadList","multiple","TabInformation","TabIntroduce","handleUpdateIntroduce","InformationDoctor","PersonalInformation","reset","setReset","infoUser","setInfoUser","getInfoUser","NotFoundPage","subTitle","extra","ArrowLeftOutlined","ChangePassword","handleSubmit","dataChange","Password","WatchScheduleForAdmin","optionsDoctor","setOptionsDoctor","selectedClinic","setSelectedClinic","selectedDoctor","setSelectedDoctor","handleGetListSchedule","dataSchedule","DashboardAdmin","countCustomer","setCountCustomer","countClinic","setCountClinic","countDoctor","setCountDoctor","countAppointentDone","setCountAppointentDone","countAppointentToday","setCountAppointentToday","getDataCustomer","getDataClinic","getDataDoctor","getDataBookingDone","getDataBookingToday","dataBooking","useSelector","RoutesAdmin","checkToken","dataCheckToken","path","exact","component","Login","loginRes","token","initialValues","remember","onFinishFailed","errorInfo","DetailPatient","detailPatient","showModal","disabledBtnSave","dataHistoryPatient","setDataHistoryPatient","userNote","getHistoryPatient","nameDoctor","HistoryApis","createHistoryBooking","ExaminationDone","namePatient","idBooking","dataCreate","UploadOutlined","AppointmentSchedule","dataPatient","setDataPatient","setDoctor","setDetailPatient","showModalDetail","setModalDetail","modalExamination","setModalExamination","getBooking","mapDataPatient","patient","bookingDate","FormOutlined","minWidth","isSame","MailOutlined","WatchScheduleForManagerClinic","DoctorForManagerClinic","setUserLocal","userLocalStorage","ClinicForManagerClinic","setClinicId","getClinicId","dataClinicId","DetailDoctorForManagerClinic","loadingData","setLoadingData","TableCancel","dataCancel","listBooking","TableConfirmed","dataConfirmed","showModalChangeStatus","setShowModalChangeStatus","setDataChange","TableDone","dataDone","TableNewPatient","dataNewPatient","dataWaiting","handleChangeStatusConfirm","NewPatient","setNewPatient","setDataConfirmed","setDataCancel","setDataDone","tabPane","setTabPane","getListBooking","waiting","confirmed","cancel","done","totalWaiting","totalConfirmed","totalCancel","totalDone","DashboardManager","countAppointentNotConf","setCountAppointentNotConf","getDataBooking","DashboardDoctor","dataBookingDone","dataBookingToday","RoutesDoctor","ForgotPassword","resetPassRes","Layout","themeReducer","from","Routes","store","createStore","ReactDOM","StrictMode","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","getElementById"],"mappings":"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","file":"static/js/main.4844f771.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ThemeReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_MODE':\n            return {\n                ...state,\n                mode: action.payload\n            }\n        case 'SET_COLOR':\n            return {\n                ...state,\n                color: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\nimport { combineReducers } from \"redux\"\n\nconst rootReducer = combineReducers({ThemeReducer})\n\nexport default rootReducer","export default __webpack_public_path__ + \"static/media/bookingcare-2020.2e2d78c9.svg\";","export default __webpack_public_path__ + \"static/media/logo.ef7bfcda.png\";","import React, { useEffect } from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport logo from '../../assets/images/logo.png'\nimport logo2 from '../../assets/images/bookingcare-2020.svg'\n\nimport sidebar_items_admin from '../../assets/JsonData/sidebar_routes.json';\nimport sidebar_items_doctor from '../../assets/JsonData/sidebar_routes_doctor.json';\nimport sidebar_items_manage_clinic from '../../assets/JsonData/sidebar_routers_manage_clinic.json';\nimport { useState } from 'react'\n\nconst SidebarItem = props => {\n\n    const active = props.active ? 'active' : ''\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = props => {\n    const [sidebarItems, setSidebarItems] = useState([]);\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    useEffect(() => {\n        if (user) {\n            if (user?.role === 'ADMIN')\n                setSidebarItems(sidebar_items_admin);\n            else if (user.role === 'HEAD_OF_DOCTOR') {\n                // const index = sidebar_items_doctor.findIndex(item => )\n                setSidebarItems(sidebar_items_doctor);\n            } else if (user.role === 'DOCTOR') {\n                const index = sidebar_items_doctor.findIndex(item => item.display_name === 'Duyệt lịch khám');\n                if (index > 0) {\n                    sidebar_items_doctor.splice(index, 1)\n                }\n                console.log('index: ', index);\n                setSidebarItems(sidebar_items_doctor);\n            } else if (user.role === 'MANAGER_CLINIC') setSidebarItems(sidebar_items_manage_clinic);\n        } else {\n            setSidebarItems([]);\n        }\n        // console.log('role: ', props?.user?.role);\n        // if (props?.user?.role === 'ADMIN')\n        //     setSidebarItems(sidebar_items_admin);\n        // else if (props && props.user && props.user.role === 'DOCTOR') {\n        //     setSidebarItems(sidebar_items_doctor);\n        // } else if (props && props.user && props.user.role === 'MANAGER_CLINIC')\n        //     setSidebarItems(sidebar_items_manage_clinic);\n    }, [user])\n\n    // const activeItem = sidebarItems?.findIndex(item => item.route === props.location.pathname)\n    // console.log('props: ', props);\n    // console.log('sidebarItems: ', sidebarItems);\n\n    const activeItem = sidebarItems?.findIndex(item => {\n        // console.log('item.route: ', item.route);\n        // console.log('props.location.pathname: ', props.location.pathname);\n        const router = item.route.split('/').join('-');\n        const pathName = props.location.pathname.split('/').slice(0, 3).join('-');\n        // console.log('router: ', router);\n        // console.log('pathName: ', pathName);\n        return router === pathName;\n    })\n\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                <img src={logo2} alt=\"company logo\" />\n            </div>\n            {sidebarItems && sidebarItems.length && sidebarItems.map((item, index) => (\n                <Link to={item.route} key={index}>\n                    <SidebarItem\n                        title={item.display_name}\n                        icon={item.icon}\n                        active={index === activeItem}\n                    />\n                </Link>\n            ))\n            }\n        </div>\n    )\n}\n\nexport default Sidebar\n","const setMode = mode => {\n    return {\n        type: 'SET_MODE',\n        payload: mode\n    }\n}\n\nconst setColor = color => {\n    return {\n        type: 'SET_COLOR',\n        payload: color\n    }\n}\n\nconst getTheme = () => {\n    return {\n        type: 'GET_THEME'\n    }\n}\n\nconst exportDefault = {\n    setColor,\n    setMode,\n    getTheme\n}\n\nexport default exportDefault","import React, {useRef, useState, useEffect} from 'react'\n\nimport './thememenu.css'\n\nimport { useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst mode_settings = [\n    {\n        id: 'light',\n        name: 'Light',\n        background: 'light-background',\n        class: 'theme-mode-light'\n    },\n    {\n        id: 'dark',\n        name: 'Dark',\n        background: 'dark-background',\n        class: 'theme-mode-dark'\n    }\n]\n\nconst color_settings = [\n    {\n        id: 'blue',\n        name: 'Blue',\n        background: 'blue-color',\n        class: 'theme-color-blue'\n    },\n    {\n        id: 'red',\n        name: 'Red',\n        background: 'red-color',\n        class: 'theme-color-red'\n    },\n    {\n        id: 'cyan',\n        name: 'Cyan',\n        background: 'cyan-color',\n        class: 'theme-color-cyan'\n    },\n    {\n        id: 'green',\n        name: 'Green',\n        background: 'green-color',\n        class: 'theme-color-green'\n    },\n    {\n        id: 'orange',\n        name: 'Orange',\n        background: 'orange-color',\n        class: 'theme-color-orange'\n    },\n]\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst ThemeMenu = () => {\n\n    const menu_ref = useRef(null)\n    const menu_toggle_ref = useRef(null)\n\n    clickOutsideRef(menu_ref, menu_toggle_ref)\n\n    const setActiveMenu = () => menu_ref.current.classList.add('active')\n\n    const closeMenu = () => menu_ref.current.classList.remove('active')\n\n    const [currMode, setcurrMode] = useState('light')\n\n    const [currColor, setcurrColor] = useState('blue')\n\n    const dispatch = useDispatch()\n\n    const setMode = mode => {\n        setcurrMode(mode.id)\n        localStorage.setItem('themeMode', mode.class)\n        dispatch(ThemeAction.setMode(mode.class))\n    }\n\n    const setColor = color => {\n        setcurrColor(color.id)\n        localStorage.setItem('colorMode', color.class)\n        dispatch(ThemeAction.setColor(color.class))\n    }\n\n    useEffect(() => {\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\n\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\n\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\n\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\n\n    }, []);\n\n    return (\n        <div>\n            <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\n                <i className='bx bx-palette'></i>\n            </button>\n            <div ref={menu_ref} className=\"theme-menu\">\n                <h4>Theme settings</h4>\n                <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\n                    <i className='bx bx-x'></i>\n                </button>\n                <div className=\"theme-menu__select\">\n                    <span>Choose mode</span>\n                    <ul className=\"mode-list\">\n                        {\n                            mode_settings.map((item, index) => (\n                                <li key={index} onClick={() => setMode(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\n                                        <i className='bx bx-check'></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                <div className=\"theme-menu__select\">\n                    <span>Choose color</span>\n                    <ul className=\"mode-list\">\n                        {\n                            color_settings.map((item, index) => (\n                                <li key={index} onClick={() => setColor(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\n                                        <i className='bx bx-check'></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ThemeMenu\n","export default __webpack_public_path__ + \"static/media/tuat.7ec76cec.png\";","const baseURL = \"http://14.225.255.59:8000/\";\r\n\r\nexport default baseURL;","import React, { useEffect } from 'react'\n\nimport './topnav.css'\n\nimport { Link, useHistory, useLocation } from 'react-router-dom'\n\n// import Dropdown from '../dropdown/Dropdown'\n\nimport ThemeMenu from '../thememenu/ThemeMenu'\n\nimport notifications from '../../assets/JsonData/notification.json'\n\nimport user_image from '../../assets/images/tuat.png'\n\nimport user_menu from '../../assets/JsonData/user_menus.json'\nimport { Avatar, Dropdown, Space, Table } from 'antd'\nimport { useState } from 'react'\nimport baseURL from '../../utils/url'\nimport { KeyOutlined, LogoutOutlined, UserOutlined } from '@ant-design/icons'\n\nconst curr_user = {\n    display_name: 'Tuat Tran',\n    image: user_image\n}\n\nconst renderNotificationItem = (item, index) => (\n    <div className=\"notification-item\" key={index}>\n        <i className={item.icon}></i>\n        <span>{item.content}</span>\n    </div>\n)\n\nconst renderUserToggle = (user) => (\n    <div className=\"topnav__right-user\">\n        <div className=\"topnav__right-user__image\">\n            {user.image ? (\n                <img src={user.image} alt=\"\" />\n            ) : (\n                <Avatar style={{\n                    color: '#f56a00',\n                    backgroundColor: '#fde3cf'\n                }}>\n                    {user.display_name[0]}\n                    {/* {`abc`.toLocaleUpperCase()} */}\n                </Avatar>\n            )}\n\n\n        </div>\n        <div className=\"topnav__right-user__name\">\n            {user.display_name}\n        </div>\n    </div>\n)\n\nconst renderUserMenu = (item, index) => (\n    <Link to='/' key={index}>\n        <div className=\"notification-item\">\n            <i className={item.icon}></i>\n            <span>{item.content}</span>\n        </div>\n    </Link>\n)\n\nconst Topnav = ({ userData }) => {\n    let location = useLocation();\n    let history = useHistory();\n    // const userDa = JSON.parse(localStorage.getItem('user'));\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        if (userData && Object.keys(userData).length) {\n            const nameUser = `${userData.firstName ? userData.firstName : ''} ${userData.middleName ? userData.middleName : ''} ${userData.lastName ? userData.lastName : ''}`.trim();\n            setName(nameUser)\n        }\n    }, [userData])\n\n    const PersonalInformation = () => {\n        const pathName = location.pathname.split('/').slice(0, 2).join('/');\n        history.push(`${pathName}/thong-tin-ca-nhan`);\n    }\n\n    const ChangePassword = () => {\n        const pathName = location.pathname.split('/').slice(0, 2).join('/');\n        history.push(`${pathName}/doi-mat-khau`);\n    }\n\n    const handleLogOut = () => {\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('user');\n        history.push('/login');\n    }\n\n    const items = [\n        {\n            key: 'personal_information',\n            label: (\n                <div\n                    // onClick={() => history.push('admin/thong-tin-ca-nhan')}\n                    onClick={PersonalInformation}\n                >\n                    Thông tin cá nhân</div>\n            ),\n            icon: <UserOutlined style={{ fontSize: '17px', margin: '0 20px 0 10px' }} />,\n        },\n        {\n            key: 'change_password',\n            label: (\n                <div\n                    // onClick={() => history.push('admin/thong-tin-ca-nhan')}\n                    onClick={ChangePassword}\n                >\n                    Đổi mật khẩu</div>\n            ),\n            icon: <KeyOutlined style={{ fontSize: '17px', margin: '0 20px 0 10px' }} />,\n        },\n        {\n            key: 'log_out',\n            label: (\n                <div\n                    onClick={handleLogOut}\n                >\n                    Đăng xuất</div>\n            ),\n            icon: <LogoutOutlined style={{ fontSize: '17px', margin: '0 20px 0 10px' }} />,\n        },\n    ];\n\n    return (\n        <div className='topnav'>\n            <div className=\"topnav__search\">\n                {/* <input type=\"text\" placeholder='Search here...' />\n                <i className='bx bx-search'></i> */}\n            </div>\n            <div className=\"topnav__right\">\n                <div className=\"topnav__right-item\">\n                    {/* dropdown here */}\n                    {/* <Dropdown\n                        customToggle={() => renderUserToggle({\n                            display_name: name,\n                            image: userData.avatar ? `${baseURL}${userData.avatar}` : null,\n                        })}\n                        contentData={user_menu}\n                        renderItems={(item, index) => renderUserMenu(item, index)}\n                    /> */}\n                    <Dropdown menu={{ items }}>\n                        <Space style={{ cursor: 'pointer' }}>\n                            {userData?.avatar ? (\n                                <Avatar src={`${baseURL}${userData?.avatar}`} />\n                            ) : (\n                                <Avatar style={{\n                                    color: '#f56a00',\n                                    backgroundColor: '#fde3cf'\n                                }}>\n                                    {name[0]}\n                                    {/* {`abc`.toLocaleUpperCase()} */}\n                                </Avatar>\n                            )}\n                            <span>{name}</span>\n                        </Space>\n                    </Dropdown>\n                </div>\n                <div className=\"topnav__right-item\">\n                    {/* <Dropdown\n                        icon='bx bx-bell'\n                        badge='12'\n                        contentData={notifications}\n                        renderItems={(item, index) => renderNotificationItem(item, index)}\n                        renderFooter={() => <Link to='/'>View All</Link>}\n                    /> */}\n                    {/* dropdown here */}\n                </div>\n                <div className=\"topnav__right-item\">\n                    <ThemeMenu />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Topnav\n","const TestRouter = () => {\n  console.log('test router');\n  return (\n    <div>\n      Test router 3\n    </div>\n  )\n}\n\nexport default TestRouter;","import React from 'react'\n\nimport './statuscard.css'\n\nconst StatusCard = props => {\n    return (\n        <div className='status-card'>\n            <div className=\"status-card__icon\">\n                <i className={props.icon}></i>\n            </div>\n            <div className=\"status-card__info\">\n                <h4>{props.count}</h4>\n                <span>{props.title}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default StatusCard\n","import axios from \"axios\";\r\n\r\nconst token = localStorage.getItem(\"accessToken\");\r\n// const requestClient = axios.create({\r\n//   baseURL: \"http://14.225.255.59:8000/\",\r\n//   // baseURL: \"http://localhost:8000/\",\r\n//   headers: {\r\n//     \"Content-Type\": \"application/json\",\r\n//     Authorization: `Bearer ${token}`,\r\n//   },\r\n// });\r\n\r\nconst requestClient = () => axios.create({\r\n  baseURL: \"http://14.225.255.59:8000/\",\r\n  // baseURL: \"http://localhost:8000/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\r\n  },\r\n});\r\nexport default requestClient;","import requestClient from \"../RequestClient\";\r\n\r\nconst CustomerApis = {\r\n  getCustomer(params) {\r\n    const urlParam = 'user';\r\n\r\n    return requestClient().get(urlParam, { params });\r\n  },\r\n\r\n  createCustomer(data) {\r\n    const urlParam = 'user';\r\n    return requestClient().post(urlParam, data)\r\n  },\r\n\r\n  updateCustomer(userId, data) {\r\n    const urlParam = `user/${userId}`;\r\n    return requestClient().put(urlParam, data);\r\n  },\r\n};\r\n\r\n\r\nexport default CustomerApis;\r\n","import { Button, Col, DatePicker, Form, Input, Modal, Spin, Row, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './AddEditUser.scss';\r\nimport CustomerApis from '../../../apis/Customer';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst { Option } = Select;\r\nconst listGender = [\r\n  {\r\n    key: 'MALE',\r\n    value: 'Nam'\r\n  },\r\n  {\r\n    key: 'FEMALE',\r\n    value: 'Nữ'\r\n  },\r\n  {\r\n    key: 'OTHER',\r\n    value: 'Khác'\r\n  }\r\n]\r\nconst AddEditUser = ({\r\n  isShowModal,\r\n  type,\r\n  handleCancelModal, // function cancel\r\n  dataCustomer, // data update from dertail customer\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (type === 'update' && dataCustomer) {\r\n      form.setFieldsValue({\r\n        ...dataCustomer,\r\n        birthday: dataCustomer.birthday ? moment(dataCustomer.birthday) : null,\r\n\r\n      })\r\n    }\r\n  }, [dataCustomer])\r\n\r\n  const handleAddEditCustomer = async (value) => {\r\n    if (type === 'create') {\r\n      await addNewCustomer(value);\r\n    } else if (type === 'update' && dataCustomer) {\r\n      await updateCustomer(value);\r\n    }\r\n  }\r\n\r\n  const addNewCustomer = async (value) => {\r\n    try {\r\n      setLoading(true)\r\n      const dataRes = await CustomerApis.createCustomer({\r\n        ...value,\r\n        role: 'USER',\r\n      })\r\n      if (dataRes.status === 200) {\r\n        setLoading(false);\r\n        toast.success('Thêm khách hàng thành công');\r\n        handleCancelModal();\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n      if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\r\n        toast.error('Khách hàng đã tồn tại!');\r\n      }\r\n      toast.error('Thêm khách hàng không thành công!');\r\n    }\r\n  }\r\n\r\n  const updateCustomer = async (value) => {\r\n    try {\r\n      setLoading(true)\r\n      const dataRes = await CustomerApis.updateCustomer(dataCustomer.id, { ...value });\r\n      if (dataRes.status === 200) {\r\n        setLoading(false);\r\n        toast.success('Sửa thông tin khách hàng thành công');\r\n        handleCancelModal();\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n      if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\r\n        toast.error('Khách hàng đã tồn tại!');\r\n        return;\r\n      }\r\n      toast.error('Sửa thông tin khách hàng không thành công');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className='create_modal'\r\n      title={\r\n        <>\r\n          {type == 'create' ? (\r\n            <div>Thêm khách hàng</div>\r\n          ) : (\r\n            <div>Sửa thông tin khách hàng</div>\r\n          )}\r\n        </>\r\n      }\r\n      open={isShowModal}\r\n      onCancel={() => {\r\n        !loading && handleCancelModal()\r\n      }}\r\n      width={700}\r\n      footer={false}\r\n    >\r\n      <Spin spinning={loading}>\r\n        <Form\r\n          name='user'\r\n          onFinish={(values) => handleAddEditCustomer(values)}\r\n          autoComplete='off'\r\n          layout='vertical'\r\n          form={form}\r\n        >\r\n          <Row gutter={24}>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'firstName'}\r\n                label={<span className='txt_label'>Họ</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Họ không được để trống',\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={dataCustomer?.firstName ? 'Họ' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'middleName'}\r\n                label={<span className='txt_label'>Tên đệm</span>}\r\n              // rules={[\r\n              //   {\r\n              //     required,\r\n              //     message: 'Họ không được để trống',\r\n              //   }\r\n              // ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={dataCustomer?.middleName ? 'Tên đệm' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'lastName'}\r\n                label={<span className='txt_label'>Tên</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Tên không được để trống',\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={dataCustomer?.lastName ? 'Tên' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'email'}\r\n                label={<span className='txt_label'>Email</span>}\r\n                rules={[\r\n                  { max: 255, message: 'Email tối đa 255 ký tự!' },\r\n                  {\r\n                    required: true,\r\n                    message: 'Email không được để trống',\r\n                  },\r\n                  {\r\n                    validator: (_, value) => {\r\n                      const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\r\n                      if ((regex.test(value) && value)) {\r\n                        return Promise.resolve();\r\n                      } else {\r\n                        return Promise.reject('Email không đúng định dạng');\r\n                      }\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={dataCustomer?.email ? 'Email' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'gender'}\r\n                label={<span className='txt_label'>Giới tính</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Giới tính không được để trống',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  style={{ width: '100%' }}\r\n                  size='middle'\r\n                  placeholder={dataCustomer?.gender ? 'Chọn giới tính' : 'Không có thông tin'}\r\n                  className='txt_input'\r\n                >\r\n                  {listGender.map((item, index) => (\r\n                    <Option key={index} value={item.key}>\r\n                      {item.value}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'phoneNumber'}\r\n                label={<span className='txt_label'>Số điện thoại</span>}\r\n                rules={[\r\n                  {\r\n                    max: 20,\r\n                    message: 'Số điện thoại tối đa 20 ký tự',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  className='txt_input'\r\n                  size='middle'\r\n                  placeholder={dataCustomer?.phoneNumber ? 'Số điện thoại' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={'birthday'} label={<span className='txt__label'>Ngày sinh</span>}>\r\n                <DatePicker\r\n                  picker='date'\r\n                  showNow={false}\r\n                  // showTime\r\n                  placeholder={dataCustomer?.birthday ? 'Chọn ngày' : 'Không có thông tin'}\r\n                  size={'middle'}\r\n                  format={'DD/MM/YYYY'}\r\n                  style={{\r\n                    width: '100%',\r\n                    cursor: 'pointer',\r\n                    fontSize: '14px',\r\n                  }}\r\n                  className='txt_input'\r\n                  disabledDate={(current) => moment() <= current}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name={'address'}\r\n                label={<span className='txt_label'>Địa chỉ</span>}\r\n                rules={[\r\n                  {\r\n                    max: 255,\r\n                    message: 'Địa chỉ tối đa 255 ký tự',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  className='txt_input'\r\n                  size='middle'\r\n                  placeholder={dataCustomer?.address ? 'Địa chỉ' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Col span={24} style={{ textAlign: 'center' }}>\r\n            <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\r\n              Hủy\r\n            </Button>\r\n            {type === 'create' ? (\r\n              <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                Thêm khách hàng\r\n              </Button>\r\n            ) : (\r\n              <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                Lưu thay đổi\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddEditUser;","import * as React from 'react';\r\n\r\nexport default function Stroke(props) {\r\n  return (\r\n    <svg\r\n      width=\"14\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 14 16\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M6.33333 1.16675C5.8731 1.16675 5.5 1.53984 5.5 2.00008V2.83341H8.5V2.00008C8.5 1.53984 8.1269 1.16675 7.66667 1.16675H6.33333ZM9.5 2.83341V2.00008C9.5 0.987559 8.67919 0.166748 7.66667 0.166748H6.33333C5.32081 0.166748 4.5 0.987559 4.5 2.00008V2.83341H1C0.723858 2.83341 0.5 3.05727 0.5 3.33341C0.5 3.60956 0.723858 3.83341 1 3.83341H1.21915L2.37127 14.2025C2.47443 15.131 3.25922 15.8334 4.19339 15.8334H9.80661C10.7408 15.8334 11.5256 15.131 11.6287 14.2025L12.7809 3.83341H13C13.2761 3.83341 13.5 3.60956 13.5 3.33341C13.5 3.05727 13.2761 2.83341 13 2.83341H9.5ZM11.7747 3.83341H2.2253L3.36515 14.0921C3.41205 14.5141 3.76877 14.8334 4.19339 14.8334H9.80661C10.2312 14.8334 10.588 14.5141 10.6348 14.0921L11.7747 3.83341ZM5.66667 6.16675C5.94281 6.16675 6.16667 6.39061 6.16667 6.66675V12.0001C6.16667 12.2762 5.94281 12.5001 5.66667 12.5001C5.39052 12.5001 5.16667 12.2762 5.16667 12.0001V6.66675C5.16667 6.39061 5.39052 6.16675 5.66667 6.16675ZM8.33333 6.16675C8.60948 6.16675 8.83333 6.39061 8.83333 6.66675V12.0001C8.83333 12.2762 8.60948 12.5001 8.33333 12.5001C8.05719 12.5001 7.83333 12.2762 7.83333 12.0001V6.66675C7.83333 6.39061 8.05719 6.16675 8.33333 6.16675Z\"\r\n        fill=\"#E2181A\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import requestClient from \"../RequestClient\";\r\n\r\nconst UserApis = {\r\n  getListUser(params) {\r\n    const urlParam = 'user';\r\n\r\n    return requestClient().get(urlParam, { params });\r\n  },\r\n\r\n  deleteUser(data) {\r\n    const urlParam = 'user';\r\n    // console.log('data: ', data);\r\n    return requestClient().delete(urlParam, { data: data }); //method delete\r\n  },\r\n\r\n  changeStatus(data) {\r\n    const urlParam = 'user/change-status';\r\n    return requestClient().put(urlParam, data);\r\n  },\r\n\r\n  getUserById(params) {\r\n    const urlParam = `user/${params}`;\r\n    return requestClient().get(urlParam);\r\n  },\r\n\r\n  changeAvatar(data) {\r\n    const urlParam = `user/change-avatar`;\r\n    return requestClient().post(urlParam, data);\r\n  },\r\n\r\n  updateUser(data, userId) {\r\n    const urlParam = `user/${userId}`;\r\n    return requestClient().put(urlParam, data);\r\n  },\r\n};\r\n\r\nexport default UserApis;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { SearchOutlined, PlusCircleOutlined, FilterOutlined, WarningFilled } from '@ant-design/icons';\r\nimport { Alert, Button, Input, Modal, Space, Table, Typography } from 'antd';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './index.scss';\r\nimport CustomerApis from '../../apis/Customer';\r\nimport AddEditUser from './components/AddEditUser';\r\nimport Stroke from '../../components/Icon/CareStaff/Stoke';\r\nimport { toast } from 'react-toastify';\r\nimport UserApis from '../../apis/User';\r\nconst { Text } = Typography;\r\n\r\nconst Customer = () => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [listUser, setListUser] = useState([]);\r\n  const [dataRes, setDataRes] = useState({});\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [search, setSearch] = useState('');\r\n  const typingSearch = useRef(null);\r\n  const [isModalAdd, setModalAdd] = useState(false);\r\n  const [isShowModalDelete, setShowModalDelete] = useState(false);\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    document.title = 'Quản lý khách khàng'\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!isModalAdd || !isShowModalDelete)\r\n      getListUser();\r\n  }, [pagination, search, isModalAdd, isShowModalDelete])\r\n\r\n  const getListUser = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const dataRes = await CustomerApis.getCustomer({\r\n        page: pagination.page,\r\n        take: pagination.pageSize,\r\n        role: 'USER',\r\n        q: search || undefined,\r\n      });\r\n      if (dataRes?.data?.data.length) {\r\n\r\n        const listUser = dataRes?.data?.data.map(item => {\r\n          const name = `${item.firstName ? item.firstName : ''} ${item.middleName ? item.middleName : ''} ${item.lastName ? item.lastName : ''}`;\r\n          return {\r\n            id: item.id || '',\r\n            name: name || '',\r\n            email: item.email || '',\r\n            gender: item.gender === 'FEMALE' ? 'Nữ' : item.gender === 'MALE' ? 'Nam' : 'Khác' || '',\r\n            phoneNumber: item.phoneNumber || '',\r\n            count: 0 || '',\r\n            address: item.address || '',\r\n            identityCardNumber: item.identityCardNumber || '',\r\n          }\r\n        })\r\n        setListUser(listUser || []);\r\n        setDataRes(dataRes?.data ? dataRes?.data : {});\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Họ tên',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      width: '20%',\r\n      render: (_, record) => (\r\n        <div\r\n          style={{\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <Link to={location => `${location.pathname}/chi-tiet/${record.id}`}>{record.name}</Link>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      ellipsis: true,\r\n      width: 120,\r\n      render: (value) => (\r\n        <div className='three_dot'>{value}</div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Số lần khám',\r\n      dataIndex: 'count',\r\n      key: 'count',\r\n      width: '10%'\r\n    },\r\n    {\r\n      title: 'Giới tính',\r\n      dataIndex: 'gender',\r\n      key: 'gender',\r\n      width: '10%'\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phoneNumber',\r\n      key: 'phoneNumber',\r\n      width: '10%'\r\n    },\r\n    {\r\n      title: 'Địa chỉ',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      ellipsis: true,\r\n      width: 120,\r\n      render: (value) => (\r\n        <div className='three_dot'>{value}</div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'CCCD/CMT',\r\n      dataIndex: 'identityCardNumber',\r\n      key: 'identityCardNumber',\r\n      ellipsis: true,\r\n      width: 60,\r\n      render: (value) => (\r\n        <div className='three_dot'>{value}</div>\r\n      ),\r\n    }\r\n  ];\r\n  // console.log('pagination: ', pagination);\r\n  const handleSearch = (e) => {\r\n    if (typingSearch.current) {\r\n      clearTimeout(typingSearch.current);\r\n    }\r\n    typingSearch.current = setTimeout(() => {\r\n      setSearch(e.target.value);\r\n    }, 500)\r\n  }\r\n\r\n  const handleDeleteCustomer = async () => {\r\n    try {\r\n      if (selectedRowKeys.length > 0) {\r\n        const dataRes = await UserApis.deleteUser({\r\n          userIds: selectedRowKeys,\r\n        })\r\n        if (dataRes?.data === true && dataRes?.status === 200) {\r\n          toast.success('Xoá khách hàng thành công!');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Xoá khách hàng không thành công!');\r\n    }\r\n    setShowModalDelete(false);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Danh sách khách hàng</h1>\r\n      {/* <div>Customer</div> */}\r\n      <div className='header-customer'>\r\n        <Input\r\n          className='search-customer'\r\n          size=\"large\"\r\n          placeholder=\"Tìm kiếm\"\r\n          suffix={<SearchOutlined />}\r\n          onChange={(e) => handleSearch(e)}\r\n        />\r\n        <div className='list-button'>\r\n          <Button className='button' size=\"large\" icon={<FilterOutlined />}>Lọc</Button>\r\n          <Button\r\n            className='button'\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => setModalAdd(true)}\r\n          >\r\n            Thêm mới\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedRowKeys.length > 0 && (\r\n        <Alert\r\n          className='fontSizeAlert'\r\n          message={\r\n            <div>\r\n              <Space>\r\n                <span>Đã chọn: {selectedRowKeys.length}</span>\r\n\r\n                <Button\r\n                  className='btn_active'\r\n                  icon={<Stroke className='transformY_2' />}\r\n                  onClick={() => {\r\n                    setShowModalDelete(true);\r\n                  }}\r\n                >\r\n                  <span className='ml_8'>Xóa</span>\r\n                </Button>\r\n              </Space>\r\n            </div>\r\n          }\r\n        />\r\n      )}\r\n\r\n      <Table\r\n        loading={isLoading}\r\n        rowKey={'id'}\r\n        dataSource={listUser}\r\n        columns={columns}\r\n        rowSelection={{\r\n          selectedRowKeys,\r\n          onChange: onSelectChange\r\n        }}\r\n        pagination={{\r\n          current: dataRes?.meta?.page || 1, // so trang\r\n          total: dataRes?.meta?.itemCount, // tong tat ca \r\n          defaultPageSize: dataRes?.meta?.take || 10,\r\n          showSizeChanger: true,\r\n          pageSizeOptions: ['10', '20', '50', '100'],\r\n          locale: { items_per_page: ' kết quả/trang' },\r\n          onChange: (page, pageSize) => {\r\n            setPagination({\r\n              ...pagination,\r\n              page,\r\n              pageSize,\r\n            });\r\n          },\r\n        }}\r\n        scroll={{ x: 'max-content' }}\r\n      />\r\n      {isModalAdd && (\r\n        <AddEditUser\r\n          isShowModal={isModalAdd}\r\n          handleCancelModal={() => setModalAdd(false)}\r\n          type={'create'}\r\n        />\r\n      )}\r\n\r\n      <Modal\r\n        visible={isShowModalDelete}\r\n        onOk={handleDeleteCustomer}\r\n        onCancel={() => setShowModalDelete(false)}\r\n        cancelText={'Hủy'}\r\n        okText={'Xóa'}\r\n        className='confirm_delete_label'\r\n        width={370}\r\n      >\r\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\r\n          Bạn có muốn xóa khách hàng?\r\n        </h2>\r\n        {/* <Space direction='vertical'>\r\n          <Text>\r\n            Sau khi xóa nhãn, hệ thống sẽ tự động gỡ nhãn khỏi các lượt tương tác đã được gắn nhãn\r\n            trước đây.\r\n            <br /> Vui lòng cân nhắc trước khi xóa.\r\n          </Text>\r\n\r\n          <div style={{ background: '#fdefe4', padding: '10px', borderRadius: '3px' }}>\r\n            <Text style={{ fontWeight: 600, color: '#e59935' }}>\r\n              <WarningFilled /> Lưu ý:\r\n              <br />\r\n            </Text>\r\n            <Text>Các nhãn tạo từ Facebook được hệ thống tự động đồng bộ, không thể xóa.</Text>\r\n          </div>\r\n        </Space> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customer;","import { useContext } from \"react\";\r\nimport React from \"react\";\r\nimport { useLocation, Navigate, Redirect } from \"react-router-dom\";\r\n\r\nconst accessToken = localStorage.getItem(\"accessToken\");\r\n\r\nlet AuthContext = React.createContext(accessToken);\r\n\r\nfunction useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nfunction RequireAuth({ children }) {\r\n  let auth = useAuth();\r\n  let location = useLocation();\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  // console.log('auth: ', auth);\r\n  // console.log('useLocation: ', location);\r\n  // if (!auth) {\r\n  if (!accessToken) {\r\n    // return <Navigate to=\"/\" state={{ from: location }} replace />;\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport default RequireAuth;\r\n","export const change_alias = (alias) => {\r\n  let str = alias;\r\n  str = str ? str.toLowerCase() : '';\r\n  str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n  str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n  str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\r\n  str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n  str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n  str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n  str = str.replace(/đ/g, 'd');\r\n  str = str.replace(/ + /g, ' ');\r\n  str = str.trim();\r\n  // str = str.replace(/\\s/g, '_');\r\n  return str;\r\n};\r\n\r\n// export function vn_change(alias) {\r\n//   let str = alias;\r\n//   str = str.toLowerCase();\r\n//   str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n//   str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n//   str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\r\n//   str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n//   str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n//   str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n//   str = str.replace(/đ/g, 'd');\r\n//   str = str.replace(\r\n//     /!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g,\r\n//     ' ',\r\n//   );\r\n//   str = str.replace(/ + /g, ' ');\r\n//   str = str.trim();\r\n//   str = str.replace(/\\s/g, '_');\r\n//   return str;\r\n// }\r\n","import React, { useEffect, useRef, useState, Fragment } from 'react';\r\nimport { Card, Checkbox, Divider, Dropdown, Empty, Input, Space, Typography } from 'antd';\r\nimport { DownOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { change_alias } from '../../utils/regex';\r\nimport './FilterObjDropDown.scss';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst FilterObjDropDown = ({\r\n  checkAll = true,\r\n  isSearch = true,\r\n  plainOptions,\r\n  checkedList,\r\n  keyFilter,\r\n  placeholder,\r\n  displayName,\r\n  handleCheckAll,\r\n  handleCheck,\r\n}) => {\r\n  const [search, setSearch] = useState('');\r\n  const typingSearch = useRef(null);\r\n  const [listOptions, setListOptions] = useState([]);\r\n  const [indeterminate, setIndeterminate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setListOptions(plainOptions);\r\n  }, [plainOptions]);\r\n\r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n    if (typingSearch.current) {\r\n      clearTimeout(typingSearch.current);\r\n    }\r\n\r\n    typingSearch.current = setTimeout(() => {\r\n      const searchLike = new RegExp(change_alias(e.target.value), 'gi');\r\n      const data = plainOptions.filter((i) => searchLike.test(change_alias(i.name)));\r\n      setListOptions(data);\r\n    }, 500);\r\n  };\r\n\r\n  const onCheckAllChange = (e) => {\r\n    handleCheckAll(keyFilter, e.target.checked ? listOptions.map((i) => i.id) : []);\r\n    setIndeterminate(false);\r\n  };\r\n\r\n  const onChange = (list) => {\r\n    handleCheck(keyFilter, list);\r\n    setIndeterminate(!!list.length && list.length < listOptions.length);\r\n  };\r\n\r\n  const menu = () => {\r\n    return (\r\n      <Card size='small' id='card__dropdown'>\r\n        {isSearch && (\r\n          <>\r\n            <Input\r\n              allowClear\r\n              className='input__drop'\r\n              prefix={<SearchOutlined />}\r\n              placeholder={`${placeholder}`}\r\n              value={search}\r\n              onChange={handleSearch}\r\n            />\r\n            <br />\r\n          </>\r\n        )}\r\n        <div id='card__content'>\r\n          {plainOptions.length && listOptions.length ? (\r\n            <>\r\n              {checkAll && (\r\n                <>\r\n                  <Checkbox\r\n                    className='check__all'\r\n                    indeterminate={indeterminate}\r\n                    checked={checkedList.length === listOptions.length}\r\n                    onChange={onCheckAllChange}\r\n                  >\r\n                    Chọn tất cả\r\n                  </Checkbox>\r\n                  <br />\r\n                </>\r\n              )}\r\n              <Checkbox.Group value={checkedList} onChange={onChange}>\r\n                {listOptions.map((i, index) => (\r\n                  <Fragment key={`check_boc_item_${index}`}>\r\n                    <Checkbox\r\n                      className={`${checkAll ? 'check__item' : 'style_check__noAll'}`}\r\n                      value={i.id}\r\n                    >\r\n                      {i.name}\r\n                    </Checkbox>\r\n                    <br />\r\n                  </Fragment>\r\n                ))}\r\n              </Checkbox.Group>\r\n            </>\r\n          ) : (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n        </div>\r\n        <Divider style={{ marginBottom: 8 }} />\r\n        <Text id='txt__count'>Đã chọn: {checkedList.length}</Text>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      className='filter__dropdown'\r\n      overlay={menu} trigger={['click']}\r\n      getPopupContainer={(trigger) => trigger.parentElement}\r\n    >\r\n      <Space\r\n        size={3}\r\n        style={{ color: `${checkedList && checkedList.length > 0 ? 'rgba(17, 17, 17, 0.75)' : ''}` }}\r\n      >\r\n        {displayName} {checkedList && checkedList.length > 0 ? <span>({checkedList.length})</span> : ''}\r\n        <DownOutlined style={{ fontSize: '12px' }} />\r\n        {checkedList && checkedList.length > 0 && <span id='dot__active' />}\r\n      </Space>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default FilterObjDropDown;\r\n","import * as React from 'react';\r\n\r\nfunction FilterIcon(props) {\r\n  return (\r\n    <svg\r\n      width=\"14\"\r\n      height=\"14\"\r\n      viewBox=\"0 0 14 14\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M1.19526 1.19526C1.07024 1.32029 1 1.48986 1 1.66667V3.39067C1.00004 3.56746 1.0703 3.737 1.19533 3.862L5.47133 8.138C5.59637 8.263 5.66663 8.43254 5.66667 8.60933V13L8.33333 10.3333V8.60933C8.33337 8.43254 8.40363 8.263 8.52867 8.138L12.8047 3.862C12.9297 3.737 13 3.56746 13 3.39067V1.66667C13 1.48986 12.9298 1.32029 12.8047 1.19526C12.6797 1.07024 12.5101 1 12.3333 1H1.66667C1.48986 1 1.32029 1.07024 1.19526 1.19526Z\"\r\n        stroke=\"#232325\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FilterIcon;\r\n","import requestClient from \"../RequestClient\";\r\n\r\nconst ClinicApis = {\r\n  getClinics(params) {\r\n    const urlParam = 'clinic';\r\n\r\n    return requestClient().get(urlParam, { params });\r\n  },\r\n\r\n  deleteClinic(data) {\r\n    const urlParam = 'clinic';\r\n    return requestClient().delete(urlParam, { data: data });\r\n  },\r\n\r\n  changeActive(data) {\r\n    const urlParam = 'clinic/change-active';\r\n    return requestClient().put(urlParam, data)\r\n  },\r\n\r\n  createClinic(data) {\r\n    const urlParam = 'clinic';\r\n    return requestClient().post(urlParam, data);\r\n  },\r\n\r\n  getClinicById(clinicId) {\r\n    const urlParam = `clinic/${clinicId}`;\r\n    return requestClient().get(urlParam);\r\n  },\r\n\r\n  updateClinic(data, clinicId) {\r\n    const urlParam = `clinic/${clinicId}`;\r\n    return requestClient().put(urlParam, data);\r\n  },\r\n\r\n  createClinicIntroduct(data) {\r\n    const urlParam = 'clinic-infor';\r\n    return requestClient().post(urlParam, data);\r\n  },\r\n\r\n  updateClinicIntroduct(clinicInforId, data) {\r\n    const urlParam = `clinic-infor/${clinicInforId}`;\r\n    return requestClient().put(urlParam, data);\r\n\r\n  }\r\n};\r\n\r\n\r\nexport default ClinicApis;\r\n","import requestClient from \"../RequestClient\";\r\n\r\nconst SpecialtyApis = {\r\n  getSpecialtyByClinic(clinicId) {\r\n    const urlParam = `specialty/specialty-clinic/${clinicId}`;\r\n\r\n    return requestClient().get(urlParam);\r\n  },\r\n\r\n  getListSpecialty(params) {\r\n    const urlParam = `specialty`;\r\n\r\n    return requestClient().get(urlParam, { params: params });\r\n  },\r\n\r\n  createSpecialty(data) {\r\n    const urlParam = 'specialty';\r\n    return requestClient().post(urlParam, data);\r\n  },\r\n\r\n  deleteSpecialty(data) {\r\n    const urlParam = 'specialty';\r\n    return requestClient().delete(urlParam, { data })\r\n  },\r\n\r\n  updateSpecialty(specialtyId, data) {\r\n    const urlParam = `specialty/${specialtyId}`;\r\n    return requestClient().put(urlParam, data);\r\n  }\r\n};\r\n\r\n\r\nexport default SpecialtyApis;\r\n","import requestClient from \"../RequestClient\";\r\n\r\nconst DoctorApis = {\r\n  getListDoctor(params) {\r\n    const urlParam = 'user';\r\n\r\n    return requestClient().get(urlParam, { params });\r\n  },\r\n\r\n  createDoctor(data) {\r\n    const urlParam = 'user';\r\n    return requestClient().post(urlParam, data)\r\n  },\r\n\r\n  // doctor-infor\r\n  getDoctorInfoExtra(doctorInforId) {\r\n    const urlParam = `doctor-infor/${doctorInforId}`;\r\n    return requestClient().get(urlParam);\r\n  },\r\n\r\n  createDoctorInfor(data) {\r\n    const urlParam = 'doctor-infor';\r\n    return requestClient().post(urlParam, data);\r\n  },\r\n\r\n  updateDoctor(data, doctorId) {\r\n    const urlParam = `user/${doctorId}`;\r\n    return requestClient().put(urlParam, data);\r\n  },\r\n\r\n  updateDoctorInfoExtra(data, doctorInforId) {\r\n    const urlParam = `doctor-infor/${doctorInforId}`;\r\n    return requestClient().put(urlParam, data);\r\n  },\r\n\r\n  getDoctorById(doctorId) {\r\n    const urlParam = `doctor/${doctorId}`;\r\n    return requestClient().get(urlParam);\r\n  }\r\n}\r\n\r\nexport default DoctorApis;","import { Button, Col, DatePicker, Form, Input, Modal, Spin, Row, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './CreateDoctor.scss';\r\nimport { toast } from 'react-toastify';\r\nimport ClinicApis from '../../../apis/Clinic';\r\nimport SpecialtyApis from '../../../apis/Specialty';\r\nimport DoctorApis from '../../../apis/Doctor';\r\n\r\nconst { Option } = Select;\r\nconst listGender = [\r\n  {\r\n    key: 'MALE',\r\n    value: 'Nam'\r\n  },\r\n  {\r\n    key: 'FEMALE',\r\n    value: 'Nữ'\r\n  },\r\n  {\r\n    key: 'OTHER',\r\n    value: 'Khác'\r\n  }\r\n]\r\n\r\nconst listRole = [\r\n  {\r\n    key: 'HEAD_OF_DOCTOR',\r\n    value: 'Trưởng khoa'\r\n  },\r\n  {\r\n    key: 'DOCTOR',\r\n    value: 'Bác sĩ'\r\n  },\r\n  {\r\n    key: 'MANAGER_CLINIC',\r\n    value: 'Quản lý phòng khám'\r\n  }\r\n]\r\n\r\nconst CreateDoctor = ({\r\n  isShowModal,\r\n  handleCancelModal, // function cancel\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [optionsClinic, setOptionsClinic] = useState([]);\r\n  const [optionsSpecialty, setOptionsSpecialty] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    !!isShowModal && getListClinic();\r\n  }, [isShowModal])\r\n\r\n  const getListClinic = async () => {\r\n    try {\r\n      const dataRes = await ClinicApis.getClinics({\r\n        pages: 1,\r\n        take: 100,\r\n        active: true,\r\n      })\r\n      // console.log('dataRes: ', dataRes);\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes?.data;\r\n        const listOptionsClinic = data.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item?.name || '',\r\n          }\r\n        })\r\n        setOptionsClinic(listOptionsClinic || []);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n\r\n    }\r\n  }\r\n  const handleAddNewDoctor = async (value) => {\r\n    console.log('value: ', value);\r\n    try {\r\n      setLoading(true)\r\n      const dataRes = await DoctorApis.createDoctor({\r\n        ...value,\r\n      })\r\n      // \r\n      if (dataRes.status === 200) {\r\n        setLoading(false);\r\n        toast.success('Thêm bác thành công');\r\n        handleCancelModal();\r\n        form.setFieldsValue({\r\n          firstName: '',\r\n          middleName: '',\r\n          lastName: '',\r\n          email: '',\r\n          gender: undefined,\r\n          role: undefined,\r\n          clinicId: undefined,\r\n          specialtyId: undefined\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n      if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\r\n        toast.error('Bác sĩ đã tồn tại!');\r\n      }\r\n      // toast.error('Lỗi');\r\n    }\r\n  }\r\n\r\n  const handleChangSelectClinic = async (value) => {\r\n    try {\r\n      const dataSpecialty = await SpecialtyApis.getSpecialtyByClinic(value);\r\n      if (dataSpecialty?.data?.data?.length > 0) {\r\n        const { data } = dataSpecialty?.data;\r\n        const listSpecialty = data?.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item.name,\r\n          }\r\n        })\r\n\r\n        setOptionsSpecialty(listSpecialty || [])\r\n      } else if (dataSpecialty?.data?.data?.length === 0) {\r\n        setOptionsSpecialty([]);\r\n        form.setFieldsValue({\r\n          specialtyId: undefined\r\n        })\r\n      }\r\n    } catch (error) {\r\n      // console.log('error: ', error);\r\n      setOptionsSpecialty([]);\r\n      form.setFieldsValue({\r\n        specialtyId: undefined\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal\r\n      className='create_modal'\r\n      title={\r\n        <>\r\n          <div>Thêm bác sĩ</div>\r\n        </>\r\n      }\r\n      open={isShowModal}\r\n      onCancel={() => {\r\n        !loading && handleCancelModal()\r\n      }}\r\n      width={700}\r\n      footer={false}\r\n    >\r\n      <Spin spinning={loading}>\r\n        <Form\r\n          name='user'\r\n          onFinish={(values) => handleAddNewDoctor(values)}\r\n          autoComplete='off'\r\n          layout='vertical'\r\n          form={form}\r\n        >\r\n          <Row gutter={24}>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'firstName'}\r\n                label={<span className='txt_label'>Họ</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Họ không được để trống',\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Họ'} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'middleName'}\r\n                label={<span className='txt_label'>Tên đệm</span>}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Tên đệm'} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'lastName'}\r\n                label={<span className='txt_label'>Tên</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Tên không được để trống',\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Tên'} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'email'}\r\n                label={<span className='txt_label'>Email</span>}\r\n                rules={[\r\n                  { max: 255, message: 'Email tối đa 255 ký tự!' },\r\n                  {\r\n                    required: true,\r\n                    message: 'Email không được để trống',\r\n                  },\r\n                  {\r\n                    validator: (_, value) => {\r\n                      const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\r\n                      if ((regex.test(value) && value)) {\r\n                        return Promise.resolve();\r\n                      } else {\r\n                        return Promise.reject('Email không đúng định dạng');\r\n                      }\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Email'} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'gender'}\r\n                label={<span className='txt_label'>Giới tính</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Giới tính không được để trống',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  style={{ width: '100%' }}\r\n                  size='middle'\r\n                  placeholder={true ? 'Chọn giới tính' : 'Không có thông tin'}\r\n                  className='txt_input'\r\n                >\r\n                  {listGender.map((item, index) => (\r\n                    <Option key={index} value={item.key}>\r\n                      {item.value}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'phoneNumber'}\r\n                label={<span className='txt_label'>Số điện thoại</span>}\r\n                rules={[\r\n                  {\r\n                    max: 20,\r\n                    message: 'Số điện thoại tối đa 20 ký tự',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  className='txt_input'\r\n                  size='middle'\r\n                  placeholder={true ? 'Số điện thoại' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={'birthday'} label={<span className='txt__label'>Ngày sinh</span>}>\r\n                <DatePicker\r\n                  picker='date'\r\n                  showNow={false}\r\n                  // showTime\r\n                  placeholder={true ? 'Chọn ngày' : 'Không có thông tin'}\r\n                  size={'middle'}\r\n                  format={'DD/MM/YYYY'}\r\n                  style={{\r\n                    width: '100%',\r\n                    cursor: 'pointer',\r\n                    fontSize: '14px',\r\n                  }}\r\n                  className='txt_input'\r\n                  disabledDate={(current) => moment() <= current}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name={'role'}\r\n                label={<span className='txt_label'>Vai trò</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Vai trò không được để trống',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  style={{ width: '100%' }}\r\n                  size='middle'\r\n                  placeholder={true ? 'Chọn vai trò' : 'Không có thông tin'}\r\n                  className='txt_input'\r\n                >\r\n                  {listRole.map((item, index) => (\r\n                    <Option key={index} value={item.key}>\r\n                      {item.value}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'clinicId'}\r\n                label={<span className='txt_label'>Phòng khám</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Phòng khám không được để trống',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  size='middle'\r\n                  placeholder={true ? 'Chọn phòng khám' : 'Không có thông tin'}\r\n                  className='txt_input'\r\n                  // optionLabelProp='label'\r\n                  // optionFilterProp={'label'}\r\n                  filterOption={(input, option) =>\r\n                    option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\r\n                  }\r\n                  onChange={handleChangSelectClinic}\r\n                >\r\n                  {optionsClinic.length && optionsClinic.map((item) => (\r\n                    <Option\r\n                      key={item.id}\r\n                      value={item.id || ''}\r\n                      label={item.name}\r\n                    >\r\n                      {item.name}\r\n                    </Option>\r\n\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'specialtyId'}\r\n                label={<span className='txt_label'>Chuyên khoa</span>}\r\n              // rules={[\r\n              //   {\r\n              //     required: true,\r\n              //     message: 'Giới tính không được để trống',\r\n              //   },\r\n              // ]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  size='middle'\r\n                  placeholder={true ? 'Chọn chuyên khoa' : 'Không có thông tin'}\r\n                  className='txt_input'\r\n                  filterOption={(input, option) =>\r\n                    option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\r\n                  }\r\n                >\r\n                  {optionsSpecialty.length && optionsSpecialty.map((item) => (\r\n                    <Option key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Col span={24} style={{ textAlign: 'center' }}>\r\n            <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\r\n              Hủy\r\n            </Button>\r\n            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n              Thêm bác sĩ\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal >\r\n  )\r\n}\r\n\r\nexport default CreateDoctor;","import { LockOutlined, PlusCircleOutlined, SearchOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport { Alert, Button, Input, Modal, Space, Switch, Table } from 'antd';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport FilterObjDropDown from '../../components/Filter/FilterObjDropDown';\r\nimport FilterIcon from '../../components/Icon/Doctor/FilterIcon';\r\nimport CreateDoctor from './components/CreateDoctor';\r\nimport './index.scss';\r\nimport { toast } from 'react-toastify';\r\nimport DoctorApis from '../../apis/Doctor';\r\nimport moment from 'moment';\r\nimport Stroke from '../../components/Icon/CareStaff/Stoke';\r\nimport ClinicApis from '../../apis/Clinic';\r\nimport SpecialtyApis from '../../apis/Specialty';\r\nimport UserApis from '../../apis/User';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst listRole = [\r\n  {\r\n    id: 'HEAD_OF_DOCTOR',\r\n    name: 'Trưởng khoa'\r\n  },\r\n  {\r\n    id: 'DOCTOR',\r\n    name: 'Bác sĩ'\r\n  },\r\n  {\r\n    id: 'MANAGER_CLINIC',\r\n    name: 'Quản lý phòng khám'\r\n  }\r\n]\r\n\r\nconst role = {\r\n  HEAD_OF_DOCTOR: 'Trưởng khoa',\r\n  DOCTOR: 'Bác sĩ',\r\n  MANAGER_CLINIC: 'Quản lý phòng khám',\r\n}\r\n\r\nconst listStatus = [\r\n  {\r\n    id: 0,\r\n    name: 'Khoá'\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Kích hoạt'\r\n  },\r\n]\r\n\r\nconst Doctor = () => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const typingSearch = useRef(null);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [isModalCreate, setModalCreate] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [listClinic, setListClinic] = useState([]);\r\n  const [listSpecialty, setListSpecialty] = useState([]);\r\n  const [checkedList, setCheckedList] = useState({\r\n    role: [],\r\n    status: [],\r\n    clinic: [],\r\n    specialty: [],\r\n  })\r\n  const [listDoctor, setListDoctor] = useState([]);\r\n  const [dataResponse, setDataResponse] = useState({});\r\n  const [showBtn, setShowBtn] = useState([]);\r\n  const [isShowModalDelete, setShowModalDelete] = useState(false);\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    document.title = 'Quản lý bác sĩ'\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!isModalCreate && !isShowModalDelete)\r\n      getListDoctor();\r\n  }, [checkedList, pagination, isModalCreate, isShowModalDelete, search])\r\n\r\n\r\n  const getListDoctor = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const dataRes = await DoctorApis.getListDoctor({\r\n        page: pagination.page,\r\n        take: pagination.pageSize,\r\n        status: checkedList.status || undefined,\r\n        role: checkedList.role.length ? checkedList.role : ['DOCTOR', 'MANAGER_CLINIC', 'HEAD_OF_DOCTOR'],\r\n        clinicIds: checkedList.clinic || undefined,\r\n        specialtyIds: checkedList.specialty || undefined,\r\n        q: search || undefined,\r\n      })\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes?.data;\r\n        const listDoctor = data.map(item => {\r\n          const name = `${item.firstName ? item.firstName : ''} ${item.middleName ? item.middleName : ''} ${item.lastName ? item.lastName : ''}`.trim();\r\n          return {\r\n            id: item.id,\r\n            status: item.status,\r\n            name: name,\r\n            email: item.email || '',\r\n            gender: item.gender === 'FEMALE' ? 'Nữ' : item.gender === 'MALE' ? 'Nam' : 'Khác' || '',\r\n            birthday: item.birthday ? moment(item.birthday).format('DD/MM/YYYY') : '',\r\n            phoneNumber: item.phoneNumber || '',\r\n            role: item.role ? role[item.role] : '',\r\n            clinic: item.clinic ? item.clinic.name : '',\r\n            specialty: item.specialty ? item.specialty.name : '',\r\n          }\r\n        })\r\n        setListDoctor(listDoctor || []);\r\n        setDataResponse(dataRes?.data ? dataRes?.data : {});\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('erroe: ', error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getListClinic();\r\n    getListSpecialty();\r\n  }, [])\r\n\r\n  const getListClinic = async () => {\r\n    try {\r\n      const dataRes = await ClinicApis.getClinics({\r\n        pages: 1,\r\n        take: 100,\r\n      })\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes?.data;\r\n        const listOptionsClinic = data.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item?.name || '',\r\n          }\r\n        })\r\n        setListClinic(listOptionsClinic || []);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setListClinic([]);\r\n    }\r\n  }\r\n\r\n  const getListSpecialty = async () => {\r\n    try {\r\n      const dataSpecialty = await SpecialtyApis.getListSpecialty({\r\n        pages: 1,\r\n        take: 100,\r\n      });\r\n      if (dataSpecialty?.data?.data) {\r\n        const { data } = dataSpecialty?.data;\r\n        const listSpecialty = data?.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item?.name,\r\n          }\r\n        })\r\n\r\n        setListSpecialty(listSpecialty || []);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setListSpecialty([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const checkShow = [];\r\n    selectedRowKeys.forEach((item) => {\r\n      const label = listDoctor?.find((elm) => elm.id === item);\r\n      if (label) checkShow.push(label);\r\n    });\r\n    const btnArray = [];\r\n    if (checkShow.some((item) => item.status === true)) {\r\n      btnArray.push(\r\n        <Button\r\n          className='btn_active'\r\n          icon={<LockOutlined style={{ transform: 'translateY(-1px)' }} />}\r\n          onClick={() => {\r\n            handleChangeStatus({\r\n              userIds: selectedRowKeys,\r\n              status: false,\r\n            })\r\n          }}\r\n        >\r\n          <span className='ml_8'>Khoá tất cả</span>\r\n        </Button>,\r\n      );\r\n    }\r\n    if (checkShow.some((item) => item.status === false)) {\r\n      btnArray.push(\r\n        <Button\r\n          className='btn_active'\r\n          icon={<UnlockOutlined style={{ transform: 'translateY(-1px)' }} />}\r\n          onClick={() => {\r\n            handleChangeStatus({\r\n              userIds: selectedRowKeys,\r\n              status: true,\r\n            })\r\n          }}\r\n        >\r\n          <span className='ml_8'>Mở tất cả</span>\r\n        </Button>,\r\n      );\r\n    }\r\n\r\n    setShowBtn([...btnArray]);\r\n  }, [selectedRowKeys]);\r\n\r\n  const handleChangeStatus = async ({ userIds, status }) => {\r\n    try {\r\n      const dataRes = await UserApis.changeStatus({ userIds, status });\r\n      if (dataRes?.data === true && dataRes?.status === 200) {\r\n        toast.success('Thay đổi trạng thái thành công!');\r\n        getListDoctor();\r\n        setSelectedRowKeys([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Thay đổi trạng thái không thành công!');\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 50,\r\n      align: 'center',\r\n      render: (_, record) => (\r\n        <Switch\r\n          checked={record?.status === true}\r\n          onChange={() => handleChangeStatus({\r\n            userIds: [record.id],\r\n            status: record.status === true ? false : true\r\n          })}\r\n        />\r\n      ),\r\n      fixed: true,\r\n    },\r\n    {\r\n      title: 'Họ tên',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      ellipsis: true,\r\n      width: 100,\r\n      fixed: true,\r\n      render: (_, record) => (\r\n        <div\r\n          style={{\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <Link to={location => `${location.pathname}/chi-tiet/${record.id}`}>{record.name}</Link>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Giới tính',\r\n      dataIndex: 'gender',\r\n      key: 'gender',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Ngày sinh',\r\n      dataIndex: 'birthday',\r\n      key: 'birthday',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phoneNumber',\r\n      key: 'phoneNumber',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Vai trò',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Tên phòng khám',\r\n      dataIndex: 'clinic',\r\n      key: 'clinic',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Chuyên khoa',\r\n      dataIndex: 'specialty',\r\n      key: 'specialty',\r\n      ellipsis: true,\r\n      width: 100,\r\n    }\r\n  ]\r\n\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys);\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const handleCheck = (key, value) => {\r\n    setCheckedList({\r\n      ...checkedList,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckAll = (key, value) => {\r\n    setCheckedList({\r\n      ...checkedList,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (typingSearch.current) {\r\n      clearTimeout(typingSearch.current);\r\n    }\r\n    typingSearch.current = setTimeout(() => {\r\n      setSearch(e.target.value);\r\n    }, 500)\r\n  }\r\n\r\n  const handleDeleteDoctor = async () => {\r\n    try {\r\n      if (selectedRowKeys.length > 0) {\r\n        const dataRes = await UserApis.deleteUser({\r\n          userIds: selectedRowKeys,\r\n        })\r\n        if (dataRes?.data === true && dataRes?.status === 200) {\r\n          toast.success('Xoá bác sĩ thành công');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Xoá bác sĩ không thành công!');\r\n    }\r\n    setShowModalDelete(false);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Danh sách bác sĩ</h1>\r\n\r\n      <div className=\"header_doctor\">\r\n        <Space>\r\n          <Button\r\n            id={'btn__filter'}\r\n            icon={\r\n              <FilterIcon\r\n                style={{\r\n                  transform: 'translateY(2px)',\r\n                  fill: `${showFilter ? '#3863EF' : 'none'}`,\r\n                }}\r\n              />\r\n            }\r\n            onClick={() => setShowFilter(!showFilter)}\r\n          />\r\n          <Input\r\n            className='search_doctor'\r\n            size=\"large\"\r\n            placeholder=\"Tìm kiếm\"\r\n            suffix={<SearchOutlined />}\r\n            onChange={(e) => handleSearch(e)}\r\n          />\r\n        </Space>\r\n\r\n        <div className='list_button'>\r\n          <Button\r\n            className='button'\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => setModalCreate(true)}\r\n          >\r\n            Thêm mới\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bộ lọc */}\r\n      {showFilter && (\r\n        <Space\r\n          size={24}\r\n          style={{ marginTop: '10px', marginBottom: '20px', color: 'rgba(17, 17, 17, 0.45)' }}\r\n        >\r\n          <FilterObjDropDown\r\n            displayName={'Trạng thái'}\r\n            placeholder={'Trạng thái'}\r\n            placeholderSearch={false}\r\n            plainOptions={listStatus || []}\r\n            checkedList={checkedList.status}\r\n            keyFilter={'status'}\r\n            handleCheckAll={handleCheckAll}\r\n            handleCheck={handleCheck}\r\n          />\r\n          <FilterObjDropDown\r\n            displayName={'Vai trò'}\r\n            placeholder={'Vai trò'}\r\n            placeholderSearch={false}\r\n            plainOptions={listRole || []}\r\n            checkedList={checkedList.role}\r\n            keyFilter={'role'}\r\n            handleCheckAll={handleCheckAll}\r\n            handleCheck={handleCheck}\r\n          />\r\n\r\n          <FilterObjDropDown\r\n            displayName={'Phòng khám'}\r\n            placeholder={'Phòng khám'}\r\n            placeholderSearch={false}\r\n            plainOptions={listClinic || []}\r\n            checkedList={checkedList.clinic}\r\n            keyFilter={'clinic'}\r\n            handleCheckAll={handleCheckAll}\r\n            handleCheck={handleCheck}\r\n          />\r\n\r\n          <FilterObjDropDown\r\n            displayName={'Chuyên khoa'}\r\n            placeholder={'Chuyên khoa'}\r\n            placeholderSearch={false}\r\n            plainOptions={listSpecialty || []}\r\n            checkedList={checkedList.specialty}\r\n            keyFilter={'specialty'}\r\n            handleCheckAll={handleCheckAll}\r\n            handleCheck={handleCheck}\r\n          />\r\n\r\n        </Space>\r\n      )}\r\n\r\n      {selectedRowKeys.length > 0 && (\r\n        <Alert\r\n          className='fontSizeAlert'\r\n          message={\r\n            <div>\r\n              <Space>\r\n                <span>Đã chọn: {selectedRowKeys.length}</span>\r\n\r\n                {showBtn}\r\n\r\n                <Button\r\n                  className='btn_active'\r\n                  icon={<Stroke className='transformY_2' />}\r\n                  onClick={() => {\r\n                    setShowModalDelete(true);\r\n                  }}\r\n                >\r\n                  <span className='ml_8'>Xóa</span>\r\n                </Button>\r\n              </Space>\r\n            </div>\r\n          }\r\n        />\r\n      )}\r\n\r\n      <Table\r\n        loading={loading}\r\n        rowKey={'id'}\r\n        dataSource={listDoctor}\r\n        columns={columns}\r\n        rowSelection={{\r\n          selectedRowKeys,\r\n          onChange: onSelectChange\r\n        }}\r\n        pagination={{\r\n          current: dataResponse?.meta?.page || 1, // so trang\r\n          total: dataResponse?.meta?.itemCount || 10, // tong tat ca \r\n          defaultPageSize: dataResponse?.meta?.take || 10,\r\n          showSizeChanger: true,\r\n          pageSizeOptions: ['10', '20', '50', '100'],\r\n          locale: { items_per_page: ' kết quả/trang' },\r\n          onChange: (page, pageSize) => {\r\n            setPagination({\r\n              ...pagination,\r\n              page,\r\n              pageSize,\r\n            });\r\n          },\r\n        }}\r\n        scroll={{ x: 'max-content' }}\r\n      />\r\n\r\n      <CreateDoctor\r\n        isShowModal={isModalCreate}\r\n        handleCancelModal={() => setModalCreate(false)}\r\n      />\r\n\r\n      <Modal\r\n        visible={isShowModalDelete}\r\n        onOk={handleDeleteDoctor}\r\n        onCancel={() => setShowModalDelete(false)}\r\n        cancelText={'Hủy'}\r\n        okText={'Xóa'}\r\n        className='confirm_delete_label'\r\n        width={370}\r\n      >\r\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\r\n          Bạn có muốn xóa bác sĩ?\r\n        </h2>\r\n        {/* <Space direction='vertical'>\r\n          <Text>\r\n            Sau khi xóa nhãn, hệ thống sẽ tự động gỡ nhãn khỏi các lượt tương tác đã được gắn nhãn\r\n            trước đây.\r\n            <br /> Vui lòng cân nhắc trước khi xóa.\r\n          </Text>\r\n\r\n          <div style={{ background: '#fdefe4', padding: '10px', borderRadius: '3px' }}>\r\n            <Text style={{ fontWeight: 600, color: '#e59935' }}>\r\n              <WarningFilled /> Lưu ý:\r\n              <br />\r\n            </Text>\r\n            <Text>Các nhãn tạo từ Facebook được hệ thống tự động đồng bộ, không thể xóa.</Text>\r\n          </div>\r\n        </Space> */}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Doctor;","import requestClient from \"../RequestClient\";\r\n\r\nconst CareStaffApis = {\r\n  getCareStaff(params) {\r\n    const urlParam = 'user';\r\n\r\n    return requestClient().get(urlParam, { params });\r\n  },\r\n\r\n  createCareStaff(data) {\r\n    const urlParam = 'user';\r\n    return requestClient().post(urlParam, data)\r\n  },\r\n\r\n  updateCareStaff(data, userId) {\r\n    const urlParam = `user/${userId}`;\r\n    return requestClient().put(urlParam, data);\r\n  }\r\n};\r\n\r\n\r\nexport default CareStaffApis;\r\n","import { Button, Col, DatePicker, Form, Input, Modal, Spin, Row, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './CreateStaff.scss';\r\nimport { toast } from 'react-toastify';\r\nimport CareStaffApis from '../../../apis/CareStaff';\r\n\r\nconst { Option } = Select;\r\nconst listGender = [\r\n  {\r\n    key: 'MALE',\r\n    value: 'Nam'\r\n  },\r\n  {\r\n    key: 'FEMALE',\r\n    value: 'Nữ'\r\n  },\r\n  {\r\n    key: 'ORTHER',\r\n    value: 'Khác'\r\n  }\r\n]\r\nconst CreateStaff = ({\r\n  isShowModal,\r\n  type,\r\n  detailStaff,\r\n  handleCancelModal, // function cancel\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  console.log('detailStaff: ', detailStaff);\r\n\r\n  useEffect(() => {\r\n    if (type === 'update' && !!detailStaff) {\r\n      form.setFieldsValue({\r\n        firstName: detailStaff?.firstName || '',\r\n        middleName: detailStaff?.middleName || '',\r\n        lastName: detailStaff?.lastName || '',\r\n        email: detailStaff?.email || '',\r\n        phoneNumber: detailStaff?.phoneNumber || null,\r\n        gender: detailStaff?.gender || null,\r\n        birthday: detailStaff?.birthday ? moment(detailStaff.birthday) : null,\r\n        address: detailStaff?.address || '',\r\n      })\r\n    }\r\n  }, [detailStaff])\r\n\r\n  const handleSubmitStaff = async (value) => {\r\n    if (type === 'create') {\r\n      try {\r\n        setLoading(true)\r\n        const dataRes = await CareStaffApis.createCareStaff({\r\n          ...value,\r\n          role: 'ADMIN',\r\n        })\r\n        // \r\n        if (dataRes.status === 200) {\r\n          setLoading(false);\r\n          toast.success('Thêm nhân viên thành công');\r\n          handleCancelModal();\r\n          form.setFieldsValue({\r\n            firstName: '',\r\n            middleName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            gender: undefined,\r\n            birthday: undefined,\r\n            address: '',\r\n          })\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\r\n          toast.error('Nhân viên đã tồn tại!');\r\n        }\r\n        toast.error('Lỗi');\r\n      }\r\n    } else if (type === 'update' && !!detailStaff) {\r\n      try {\r\n        setLoading(true);\r\n        const dataRes = await CareStaffApis.updateCareStaff(value, detailStaff.id)\r\n        // \r\n        if (dataRes.status === 200) {\r\n          setLoading(false);\r\n          toast.success('Cập nhật thông tin nhân viên thành công');\r\n          handleCancelModal();\r\n          form.setFieldsValue({\r\n            firstName: '',\r\n            middleName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            gender: undefined,\r\n            birthday: undefined,\r\n            address: '',\r\n          })\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\r\n          toast.error('Nhân viên đã tồn tại!');\r\n          return;\r\n        }\r\n        toast.error('Cập nhật thông tin nhân viên không thành công!');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className='create_modal'\r\n      title={\r\n        <>\r\n          {type == 'create' ? (\r\n            <div>Thêm nhân viên</div>\r\n          ) : (\r\n            <div>Sửa thông tin nhân viên</div>\r\n          )}\r\n        </>\r\n      }\r\n      visible={isShowModal}\r\n      onCancel={() => {\r\n        !loading && handleCancelModal()\r\n      }}\r\n      width={700}\r\n      footer={false}\r\n    >\r\n      <Spin spinning={loading}>\r\n        <Form\r\n          name='user'\r\n          onFinish={(values) => handleSubmitStaff(values)}\r\n          autoComplete='off'\r\n          layout='vertical'\r\n          form={form}\r\n        >\r\n          <Row gutter={24}>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'firstName'}\r\n                label={<span className='txt_label'>Họ</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Họ không được để trống',\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Họ'} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'middleName'}\r\n                label={<span className='txt_label'>Tên đệm</span>}\r\n              // rules={[\r\n              //   {\r\n              //     required,\r\n              //     message: 'Họ không được để trống',\r\n              //   }\r\n              // ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Tên đệm'} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'lastName'}\r\n                label={<span className='txt_label'>Tên</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Tên không được để trống',\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Tên'} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'email'}\r\n                label={<span className='txt_label'>Email</span>}\r\n                rules={[\r\n                  { max: 255, message: 'Email tối đa 255 ký tự!' },\r\n                  {\r\n                    required: true,\r\n                    message: 'Email không được để trống',\r\n                  },\r\n                  {\r\n                    validator: (_, value) => {\r\n                      const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\r\n                      if ((regex.test(value) && value)) {\r\n                        return Promise.resolve();\r\n                      } else {\r\n                        return Promise.reject('Email không đúng định dạng');\r\n                      }\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Email'} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'gender'}\r\n                label={<span className='txt_label'>Giới tính</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Giới tính không được để trống',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  style={{ width: '100%' }}\r\n                  size='middle'\r\n                  placeholder={true ? 'Chọn giới tính' : 'Không có thông tin'}\r\n                  className='txt_input'\r\n                >\r\n                  {listGender.map((item, index) => (\r\n                    <Option key={index} value={item.key}>\r\n                      {item.value}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'phoneNumber'}\r\n                label={<span className='txt_label'>Số điện thoại</span>}\r\n                rules={[\r\n                  {\r\n                    max: 20,\r\n                    message: 'Số điện thoại tối đa 20 ký tự',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  className='txt_input'\r\n                  size='middle'\r\n                  placeholder={true ? 'Số điện thoại' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={'birthday'} label={<span className='txt__label'>Ngày sinh</span>}>\r\n                <DatePicker\r\n                  picker='date'\r\n                  showNow={false}\r\n                  // showTime\r\n                  placeholder={true ? 'Chọn ngày' : 'Không có thông tin'}\r\n                  size={'middle'}\r\n                  format={'DD/MM/YYYY'}\r\n                  style={{\r\n                    width: '100%',\r\n                    cursor: 'pointer',\r\n                    fontSize: '14px',\r\n                  }}\r\n                  className='txt_input'\r\n                  disabledDate={(current) => moment() <= current}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name={'address'}\r\n                label={<span className='txt_label'>Địa chỉ</span>}\r\n                rules={[\r\n                  {\r\n                    max: 255,\r\n                    message: 'Địa chỉ tối đa 255 ký tự',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  className='txt_input'\r\n                  size='middle'\r\n                  placeholder={true ? 'Địa chỉ' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Col span={24} style={{ textAlign: 'center' }}>\r\n            <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\r\n              Hủy\r\n            </Button>\r\n            {type === 'create' ? (\r\n              <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                Thêm nhân viên\r\n              </Button>\r\n            ) : (\r\n              <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                Lưu thay đổi\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CreateStaff;","import { EyeInvisibleOutlined, EyeOutlined, FilterOutlined, LockOutlined, PlusCircleOutlined, PushpinOutlined, ReconciliationFilled, SearchOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport { Alert, Button, Input, Modal, Space, Switch, Table } from 'antd';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport CreateStaff from './components/CreateStaff';\r\nimport './index.scss';\r\nimport { toast } from 'react-toastify';\r\nimport CareStaffApis from '../../apis/CareStaff/index';\r\nimport moment from 'moment';\r\nimport Stroke from '../../components/Icon/CareStaff/Stoke';\r\nimport UserApis from '../../apis/User';\r\n\r\nconst CareStaff = () => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [isModalCreate, setModalCreate] = useState(false);\r\n  const [dataResponse, setDataResponse] = useState({});\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [listCareStaff, setListStaff] = useState([]);\r\n  const [showBtn, setShowBtn] = useState([]);\r\n  const typingSearch = useRef(null);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [isShowModalDelete, setShowModalDelete] = useState(false);\r\n  const [typeModal, setTypeModal] = useState('create');\r\n  const [detailStaff, setDetailStaff] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (!isModalCreate && !isShowModalDelete)\r\n      getListCareStaff()\r\n  }, [pagination, search, isModalCreate, isShowModalDelete])\r\n\r\n  useEffect(() => {\r\n    const checkShow = [];\r\n    selectedRowKeys.forEach((item) => {\r\n      const label = listCareStaff?.find((elm) => elm.id === item);\r\n      if (label) checkShow.push(label);\r\n    });\r\n    const btnArray = [];\r\n    if (checkShow.some((item) => item.status === true)) {\r\n      btnArray.push(\r\n        <Button\r\n          className='btn_active'\r\n          icon={<LockOutlined style={{ transform: 'translateY(-1px)' }} />}\r\n          onClick={() => {\r\n            handleChangeStatus({\r\n              userIds: selectedRowKeys,\r\n              status: false,\r\n            })\r\n          }}\r\n        >\r\n          <span className='ml_8'>Khoá tất cả</span>\r\n        </Button>,\r\n      );\r\n    }\r\n    if (checkShow.some((item) => item.status === false)) {\r\n      btnArray.push(\r\n        <Button\r\n          className='btn_active'\r\n          icon={<UnlockOutlined style={{ transform: 'translateY(-1px)' }} />}\r\n          onClick={() => {\r\n            handleChangeStatus({\r\n              userIds: selectedRowKeys,\r\n              status: true,\r\n            })\r\n          }}\r\n        >\r\n          <span className='ml_8'>Mở tất cả</span>\r\n        </Button>,\r\n      );\r\n    }\r\n\r\n    setShowBtn([...btnArray]);\r\n  }, [selectedRowKeys]);\r\n\r\n  const getListCareStaff = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const dataRes = await CareStaffApis.getCareStaff({\r\n        page: pagination.page,\r\n        take: pagination.pageSize,\r\n        q: search || undefined,\r\n        role: 'ADMIN',\r\n      })\r\n\r\n      console.log('dataRes: ', dataRes);\r\n      if (dataRes && dataRes.status === 200) {\r\n        const { data } = dataRes;\r\n        const listStaff = data?.data?.map(item => {\r\n          const name = `${item.firstName ? item.firstName : ''} ${item.middleName ? item.middleName : ''} ${item.lastName ? item.lastName : ''}`;\r\n          return {\r\n            id: item.id || '',\r\n            firstName: item.firstName || '',\r\n            middleName: item.middleName || '',\r\n            lastName: item.lastName || '',\r\n            status: item.status,\r\n            name: name || '',\r\n            email: item.email || '',\r\n            gender: item.gender || '',\r\n            birthday: item.birthday || null,\r\n            phoneNumber: item.phoneNumber || '',\r\n            address: item.address || '',\r\n            identityCardNumber: item.identityCardNumber || ''\r\n          }\r\n        })\r\n        setListStaff(listStaff || []);\r\n        setDataResponse(data || {});\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false)\r\n      console.log('error:', error);\r\n    }\r\n  }\r\n\r\n  const handleChangeStatus = async ({ userIds, status }) => {\r\n    try {\r\n      const dataRes = await UserApis.changeStatus({ userIds, status });\r\n      console.log('dataRes: ', dataRes);\r\n      if (dataRes?.data === true && dataRes?.status === 200) {\r\n        toast.success('Thay đổi trạng thái thành công!');\r\n        getListCareStaff();\r\n        setSelectedRowKeys([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Thay đổi trạng thái không thành công!');\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 50,\r\n      align: 'center',\r\n      render: (_, record) => (\r\n        <Switch\r\n          checked={record?.status === true}\r\n          onChange={() => handleChangeStatus({\r\n            userIds: [record.id],\r\n            status: record.status === true ? false : true\r\n          })}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Họ tên',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      width: 100,\r\n      ellipsis: true,\r\n      render: (_, record) => (\r\n        <div>\r\n          <span\r\n            className='name_staff'\r\n            onClick={() => {\r\n              setTypeModal('update');\r\n              setDetailStaff(record);\r\n              setModalCreate(true);\r\n            }}\r\n          >{record.name}</span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      ellipsis: true,\r\n      width: 120,\r\n      render: (value) => (\r\n        <div className='three_dot'>{value}</div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Giới tính',\r\n      dataIndex: 'gender',\r\n      key: 'gender',\r\n      width: 40,\r\n      render: (value) => (\r\n        <div>{value === 'FEMALE' ? 'Nữ' : value === 'MALE' ? 'Nam' : 'Khác' || ''}</div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Ngày sinh',\r\n      dataIndex: 'birthday',\r\n      key: 'birthday',\r\n      width: 65,\r\n      render: (value) => (\r\n        <div>{value ? moment(value).format('DD/MM/YYYY') : ''}</div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phoneNumber',\r\n      key: 'phoneNumber',\r\n      width: 75\r\n    },\r\n    {\r\n      title: 'Địa chỉ',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      ellipsis: true,\r\n      width: 100,\r\n      render: (value) => (\r\n        <div className='three_dot'>{value}</div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'CCCD/CMT',\r\n      dataIndex: 'identityCardNumber',\r\n      key: 'identityCardNumber',\r\n      ellipsis: true,\r\n      width: 80,\r\n      render: (value) => (\r\n        <div className='three_dot'>{value}</div>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys);\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (typingSearch.current) {\r\n      clearTimeout(typingSearch.current);\r\n    }\r\n    typingSearch.current = setTimeout(() => {\r\n      setSearch(e.target.value);\r\n    }, 500)\r\n  }\r\n\r\n  const handleDeleteCustomer = async () => {\r\n    try {\r\n      if (selectedRowKeys.length > 0) {\r\n        const dataRes = await UserApis.deleteUser({\r\n          userIds: selectedRowKeys,\r\n        })\r\n        if (dataRes?.data === true && dataRes?.status === 200) {\r\n          toast.success('Xoá khách hàng thành công!');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Xoá khách hàng không thành công!');\r\n    }\r\n    setShowModalDelete(false);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Danh sách nhân viên</h1>\r\n\r\n      <div className=\"header_staff\">\r\n        <Input\r\n          className='search_staff'\r\n          size=\"large\"\r\n          placeholder=\"Tìm kiếm\"\r\n          suffix={<SearchOutlined />}\r\n          onChange={(e) => handleSearch(e)}\r\n        />\r\n        <div className='list_button'>\r\n          <Button className='button' size=\"large\" icon={<FilterOutlined />}>Lọc</Button>\r\n          <Button\r\n            className='button'\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => {\r\n              setTypeModal('create');\r\n              setModalCreate(true);\r\n            }}\r\n          >\r\n            Thêm mới\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedRowKeys.length > 0 && (\r\n        <Alert\r\n          className='fontSizeAlert'\r\n          message={\r\n            <div>\r\n              <Space>\r\n                <span>Đã chọn: {selectedRowKeys.length}</span>\r\n\r\n                {showBtn}\r\n\r\n                <Button\r\n                  className='btn_active'\r\n                  icon={<Stroke className='transformY_2' />}\r\n                  onClick={() => {\r\n                    setShowModalDelete(true);\r\n                  }}\r\n                >\r\n                  <span className='ml_8'>Xóa</span>\r\n                </Button>\r\n              </Space>\r\n            </div>\r\n          }\r\n        />\r\n      )}\r\n\r\n      <Table\r\n        loading={isLoading}\r\n        rowKey={'id'}\r\n        dataSource={listCareStaff}\r\n        columns={columns}\r\n        rowSelection={{\r\n          selectedRowKeys,\r\n          onChange: onSelectChange\r\n        }}\r\n        pagination={{\r\n          current: dataResponse?.meta?.page || 1, // so trang\r\n          total: dataResponse?.meta?.itemCount || 10, // tong tat ca \r\n          defaultPageSize: dataResponse?.meta?.take || 10,\r\n          showSizeChanger: true,\r\n          pageSizeOptions: ['10', '20', '50', '100'],\r\n          locale: { items_per_page: ' kết quả/trang' },\r\n          onChange: (page, pageSize) => {\r\n            setPagination({\r\n              ...pagination,\r\n              page,\r\n              pageSize,\r\n            });\r\n          },\r\n        }}\r\n      // scroll={{ x: 'max-content' }}\r\n      />\r\n\r\n      <CreateStaff\r\n        isShowModal={isModalCreate}\r\n        type={typeModal}\r\n        detailStaff={detailStaff}\r\n        handleCancelModal={() => setModalCreate(false)}\r\n      />\r\n\r\n      <Modal\r\n        open={isShowModalDelete}\r\n        onOk={handleDeleteCustomer}\r\n        onCancel={() => setShowModalDelete(false)}\r\n        cancelText={'Hủy'}\r\n        okText={'Xóa'}\r\n        className='confirm_delete_label'\r\n        width={370}\r\n      >\r\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\r\n          Bạn có muốn xóa khách hàng?\r\n        </h2>\r\n        {/* <Space direction='vertical'>\r\n          <Text>\r\n            Sau khi xóa nhãn, hệ thống sẽ tự động gỡ nhãn khỏi các lượt tương tác đã được gắn nhãn\r\n            trước đây.\r\n            <br /> Vui lòng cân nhắc trước khi xóa.\r\n          </Text>\r\n\r\n          <div style={{ background: '#fdefe4', padding: '10px', borderRadius: '3px' }}>\r\n            <Text style={{ fontWeight: 600, color: '#e59935' }}>\r\n              <WarningFilled /> Lưu ý:\r\n              <br />\r\n            </Text>\r\n            <Text>Các nhãn tạo từ Facebook được hệ thống tự động đồng bộ, không thể xóa.</Text>\r\n          </div>\r\n        </Space> */}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CareStaff;","import { Button, Col, DatePicker, Form, Input, Modal, Spin, Row, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './CreateClinic.scss';\r\nimport { toast } from 'react-toastify';\r\nimport ClinicApis from '../../../apis/Clinic';\r\nimport SpecialtyApis from '../../../apis/Specialty';\r\nimport DoctorApis from '../../../apis/Doctor';\r\n\r\nconst { Option } = Select;\r\n\r\nconst CreateClinic = ({\r\n  isShowModal,\r\n  handleCancelModal, // function cancel\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [optionsSpecialty, setOptionsSpecialty] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n\r\n    !!isShowModal && getListSpecialty();\r\n  }, [isShowModal])\r\n\r\n  const handleAddNewClinic = async (value) => {\r\n    console.log('value: ', value);\r\n    try {\r\n      setLoading(true)\r\n      const dataRes = await ClinicApis.createClinic({\r\n        ...value,\r\n        specialties: JSON.stringify(value.specialties),\r\n      })\r\n      // \r\n      if (dataRes.status === 200) {\r\n        setLoading(false);\r\n        toast.success('Thêm phòng khám thành công');\r\n        handleCancelModal();\r\n        form.setFieldsValue({\r\n          name: '',\r\n          emai: '',\r\n          phone: '',\r\n          email: '',\r\n          address: '',\r\n          province: '',\r\n          specialties: undefined\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n      if (error.response.data.error === 'CLINIC_ALREADY_EXIST' && error.response.data.status === 409) {\r\n        toast.error('Phòng khám đã tồn tại!');\r\n      }\r\n      toast.error('Thêm phòng khám không thành công!');\r\n    }\r\n  }\r\n\r\n  const getListSpecialty = async (value) => {\r\n    try {\r\n      const dataSpecialty = await SpecialtyApis.getListSpecialty({\r\n        page: 1,\r\n        take: 100,\r\n      });\r\n      if (dataSpecialty?.data?.data?.length > 0) {\r\n        const { data } = dataSpecialty?.data;\r\n        const listSpecialty = data?.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item.name,\r\n          }\r\n        })\r\n\r\n        setOptionsSpecialty(listSpecialty || [])\r\n      } else if (dataSpecialty?.data?.data?.length === 0) {\r\n        setOptionsSpecialty([]);\r\n        form.setFieldsValue({\r\n          specialtyId: undefined\r\n        })\r\n      }\r\n    } catch (error) {\r\n      // console.log('error: ', error);\r\n      setOptionsSpecialty([]);\r\n      form.setFieldsValue({\r\n        specialtyId: undefined\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal\r\n      className='create_modal'\r\n      title={\r\n        <>\r\n          <div>Thêm phòng khám</div>\r\n        </>\r\n      }\r\n      visible={isShowModal}\r\n      onCancel={() => {\r\n        !loading && handleCancelModal()\r\n      }}\r\n      width={700}\r\n      footer={false}\r\n    >\r\n      <Spin spinning={loading}>\r\n        <Form\r\n          name='user'\r\n          onFinish={(values) => handleAddNewClinic(values)}\r\n          autoComplete='off'\r\n          layout='vertical'\r\n          form={form}\r\n        >\r\n          <Row gutter={24}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name={'name'}\r\n                label={<span className='txt_label'>Tên phòng khám</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Tên phòng khám không được để trống',\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Tên phòng khám'} />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'email'}\r\n                label={<span className='txt_label'>Email</span>}\r\n                rules={[\r\n                  { max: 255, message: 'Email tối đa 255 ký tự!' },\r\n                  {\r\n                    required: true,\r\n                    message: 'Email không được để trống',\r\n                  },\r\n                  {\r\n                    validator: (_, value) => {\r\n                      const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\r\n                      if ((regex.test(value) && value)) {\r\n                        return Promise.resolve();\r\n                      } else {\r\n                        return Promise.reject('Email không đúng định dạng');\r\n                      }\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  size='middle'\r\n                  className='txt_input'\r\n                  placeholder={'Email'} />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={'phone'}\r\n                label={<span className='txt_label'>Số điện thoại</span>}\r\n                rules={[\r\n                  {\r\n                    max: 20,\r\n                    message: 'Số điện thoại tối đa 20 ký tự',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  className='txt_input'\r\n                  size='middle'\r\n                  placeholder={true ? 'Số điện thoại' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={16}>\r\n              <Form.Item\r\n                name={'address'}\r\n                label={<span className='txt_label'>Địa chỉ</span>}\r\n              // rules={[\r\n              //   {\r\n              //     max: 20,\r\n              //     message: 'Số điện thoại tối đa 20 ký tự',\r\n              //   },\r\n              // ]}\r\n              >\r\n                <Input\r\n                  className='txt_input'\r\n                  size='middle'\r\n                  placeholder={true ? 'Địa chỉ' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name={'province'}\r\n                label={<span className='txt_label'>Tỉnh/Thành phố</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Tỉnh/Thành phố không được để trống',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  className='txt_input'\r\n                  size='middle'\r\n                  placeholder={true ? 'Tỉnh/Thành phố' : 'Không có thông tin'}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name={'specialties'}\r\n                label={<span className='txt_label'>Chuyên khoa</span>}\r\n              // rules={[\r\n              //   {\r\n              //     required: true,\r\n              //     message: 'Giới tính không được để trống',\r\n              //   },\r\n              // ]}\r\n              >\r\n                <Select\r\n                  mode='multiple'\r\n                  allowClear\r\n                  showArrow\r\n                  style={{ width: '100%' }}\r\n                  size='middle'\r\n                  placeholder={true ? 'Chọn chuyên khoa' : 'Không có thông tin'}\r\n                  className='txt_input'\r\n                  // defaultValue={}\r\n                  filterOption={(input, option) =>\r\n                    option?.children !== null && option?.children?.toLowerCase().includes(input.trim().toLowerCase())\r\n                  }\r\n                >\r\n                  {optionsSpecialty.length && optionsSpecialty.map((item) => (\r\n                    <Option key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Col span={24} style={{ textAlign: 'center' }}>\r\n            <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\r\n              Hủy\r\n            </Button>\r\n            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n              Thêm phòng khám\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal >\r\n  )\r\n}\r\n\r\nexport default CreateClinic;","import { LockOutlined, PlusCircleOutlined, SearchOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport { Alert, Button, Input, Modal, Space, Switch, Table } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport ClinicApis from '../../apis/Clinic';\r\nimport FilterObjDropDown from '../../components/Filter/FilterObjDropDown';\r\nimport FilterIcon from '../../components/Icon/Doctor/FilterIcon';\r\nimport Stroke from '../../components/Icon/CareStaff/Stoke';\r\nimport CreateClinic from './components/CreateClinic';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst listStatus = [\r\n  {\r\n    id: 0,\r\n    name: 'Khoá'\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Kích hoạt'\r\n  },\r\n]\r\n\r\nconst Clinic = () => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const typingSearch = useRef(null);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [isModalCreate, setModalCreate] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [listClinic, setListClinic] = useState([]);\r\n  const [showBtn, setShowBtn] = useState([]);\r\n  const [checkedList, setCheckedList] = useState({\r\n    active: [],\r\n  })\r\n  const [dataResponse, setDataResponse] = useState({});\r\n  const [isShowModalDelete, setShowModalDelete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkShow = [];\r\n    selectedRowKeys.forEach((item) => {\r\n      const label = listClinic.find((elm) => elm.id === item);\r\n      if (label) checkShow.push(label);\r\n    });\r\n    const btnArray = [];\r\n    if (checkShow.some((item) => item.active === true)) {\r\n      btnArray.push(\r\n        <Button\r\n          className='btn_active'\r\n          icon={<LockOutlined style={{ transform: 'translateY(-1px)' }} />}\r\n          onClick={() => {\r\n            handleChangeActive({\r\n              clinicIds: selectedRowKeys,\r\n              active: false\r\n            })\r\n          }}\r\n        >\r\n          <span className='ml_8'>Khoá tất cả</span>\r\n        </Button>,\r\n      );\r\n    }\r\n    if (checkShow.some((item) => item.active === false)) {\r\n      btnArray.push(\r\n        <Button\r\n          className='btn_active'\r\n          icon={<UnlockOutlined style={{ transform: 'translateY(-1px)' }} />}\r\n          onClick={() => {\r\n            handleChangeActive({\r\n              clinicIds: selectedRowKeys,\r\n              active: true\r\n            })\r\n          }}\r\n        >\r\n          <span className='ml_8'>Mở tất cả</span>\r\n        </Button>,\r\n      );\r\n    }\r\n\r\n    setShowBtn([...btnArray]);\r\n  }, [selectedRowKeys]);\r\n\r\n  useEffect(() => {\r\n    if (!isShowModalDelete && !isModalCreate)\r\n      getListClinic();\r\n  }, [checkedList, pagination, search, isShowModalDelete, isModalCreate])\r\n\r\n  const getListClinic = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const dataRes = await ClinicApis.getClinics({\r\n        page: pagination.page,\r\n        take: pagination.pageSize,\r\n        active: checkedList.active || undefined,\r\n        q: search || undefined,\r\n      })\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes?.data;\r\n        const listClinic = data.map(item => {\r\n          return {\r\n            id: item.id,\r\n            active: item.active,\r\n            name: item.name || '',\r\n            email: item.email || '',\r\n            phone: item.phone || '',\r\n            address: item.address || '',\r\n            createdDate: item.createdDate ? moment(item.createdDate).format('DD/MM/YYYY') : '',\r\n          }\r\n        })\r\n        setListClinic(listClinic || []);\r\n        setDataResponse(dataRes?.data ? dataRes.data : {});\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleChangeActive = async ({ clinicIds, active }) => {\r\n    try {\r\n      const dataRes = await ClinicApis.changeActive({ clinicIds, active });\r\n      if (dataRes?.status === 200 && dataRes.data === true) {\r\n        toast.success('Thay đổI trạng thái thành công')\r\n        getListClinic();\r\n        setSelectedRowKeys([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Thay đổi trạng thái không thành công!')\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 50,\r\n      align: 'center',\r\n      render: (_, record) => (\r\n        <Switch\r\n          checked={record?.active === true}\r\n          onChange={() =>\r\n            handleChangeActive({\r\n              clinicIds: [record.id],\r\n              active: record.active === true ? false : true,\r\n            })\r\n          }\r\n        />\r\n      ),\r\n      fixed: true,\r\n    },\r\n    {\r\n      title: 'Tên phòng khám',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      ellipsis: true,\r\n      width: 100,\r\n      fixed: true,\r\n      render: (_, record) => (\r\n        <div\r\n          style={{\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <Link to={location => `${location.pathname}/chi-tiet/${record.id}`}>{record.name}</Link>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Địa chỉ',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Ngày tham gia',\r\n      dataIndex: 'createdDate',\r\n      key: 'createdDate',\r\n      ellipsis: true,\r\n      width: 100,\r\n    }\r\n  ]\r\n\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const handleCheck = (key, value) => {\r\n    setCheckedList({\r\n      ...checkedList,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckAll = (key, value) => {\r\n    setCheckedList({\r\n      ...checkedList,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (typingSearch.current) {\r\n      clearTimeout(typingSearch.current);\r\n    }\r\n    typingSearch.current = setTimeout(() => {\r\n      setSearch(e.target.value);\r\n    }, 500)\r\n  }\r\n\r\n  const handleDeleteClinic = async () => {\r\n    try {\r\n      const dataRes = await ClinicApis.deleteClinic({\r\n        clinicIds: selectedRowKeys,\r\n      })\r\n      if (dataRes?.data === true && dataRes.status === 200) {\r\n        toast.success('Xoá phòng khám thành công');\r\n        setShowModalDelete(false);\r\n        setSelectedRowKeys([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Xoá phòng khám không thành công!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Danh sách phòng khám</h1>\r\n\r\n      <div className=\"header_clinic\">\r\n        <Space>\r\n          <Button\r\n            id={'btn__filter'}\r\n            icon={\r\n              <FilterIcon\r\n                style={{\r\n                  transform: 'translateY(2px)',\r\n                  fill: `${showFilter ? '#3863EF' : 'none'}`,\r\n                }}\r\n              />\r\n            }\r\n            onClick={() => setShowFilter(!showFilter)}\r\n          />\r\n          <Input\r\n            className='search_clinic'\r\n            size=\"large\"\r\n            placeholder=\"Tìm kiếm\"\r\n            suffix={<SearchOutlined />}\r\n            onChange={(e) => handleSearch(e)}\r\n          />\r\n        </Space>\r\n\r\n        <div className='list_button'>\r\n          <Button\r\n            className='button'\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => setModalCreate(true)}\r\n          >\r\n            Thêm mới\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bộ lọc */}\r\n      {showFilter && (\r\n        <Space\r\n          size={24}\r\n          style={{ marginTop: '10px', marginBottom: '20px', color: 'rgba(17, 17, 17, 0.45)' }}\r\n        >\r\n          <FilterObjDropDown\r\n            displayName={'Trạng thái'}\r\n            placeholder={'Trạng thái'}\r\n            placeholderSearch={false}\r\n            plainOptions={listStatus || []}\r\n            checkedList={checkedList.active}\r\n            keyFilter={'active'}\r\n            handleCheckAll={handleCheckAll}\r\n            handleCheck={handleCheck}\r\n          />\r\n        </Space>\r\n      )}\r\n\r\n      {selectedRowKeys.length > 0 && (\r\n        <Alert\r\n          className='fontSizeAlert'\r\n          message={\r\n            <div>\r\n              <Space>\r\n                <span>Đã chọn: {selectedRowKeys.length}</span>\r\n\r\n                {showBtn}\r\n\r\n                <Button\r\n                  className='btn_active'\r\n                  icon={<Stroke className='transformY_2' />}\r\n                  onClick={() => setShowModalDelete(true)}\r\n                >\r\n                  <span className='ml_8'>Xóa</span>\r\n                </Button>\r\n              </Space>\r\n            </div>\r\n          }\r\n        />\r\n      )}\r\n\r\n      <Table\r\n        loading={loading}\r\n        rowKey={'id'}\r\n        dataSource={listClinic}\r\n        columns={columns}\r\n        rowSelection={{\r\n          selectedRowKeys,\r\n          onChange: onSelectChange\r\n        }}\r\n        pagination={{\r\n          current: dataResponse?.meta?.page || 1, // so trang\r\n          total: dataResponse?.meta?.itemCount || 10, // tong tat ca \r\n          defaultPageSize: dataResponse?.meta?.take || 10,\r\n          showSizeChanger: true,\r\n          pageSizeOptions: ['10', '20', '50', '100'],\r\n          locale: { items_per_page: ' kết quả/trang' },\r\n          onChange: (page, pageSize) => {\r\n            setPagination({\r\n              ...pagination,\r\n              page,\r\n              pageSize,\r\n            });\r\n          },\r\n        }}\r\n        scroll={{ x: 'max-content' }}\r\n      />\r\n\r\n      <CreateClinic\r\n        isShowModal={isModalCreate}\r\n        handleCancelModal={() => setModalCreate(false)}\r\n      />\r\n\r\n      <Modal\r\n        visible={isShowModalDelete}\r\n        onOk={handleDeleteClinic}\r\n        onCancel={() => setShowModalDelete(false)}\r\n        cancelText={'Hủy'}\r\n        okText={'Xóa'}\r\n        className='confirm_delete_label'\r\n        width={370}\r\n      >\r\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\r\n          Bạn có muốn xóa bác sĩ?\r\n        </h2>\r\n        {/* <Space direction='vertical'>\r\n          <Text>\r\n            Sau khi xóa nhãn, hệ thống sẽ tự động gỡ nhãn khỏi các lượt tương tác đã được gắn nhãn\r\n            trước đây.\r\n            <br /> Vui lòng cân nhắc trước khi xóa.\r\n          </Text>\r\n\r\n          <div style={{ background: '#fdefe4', padding: '10px', borderRadius: '3px' }}>\r\n            <Text style={{ fontWeight: 600, color: '#e59935' }}>\r\n              <WarningFilled /> Lưu ý:\r\n              <br />\r\n            </Text>\r\n            <Text>Các nhãn tạo từ Facebook được hệ thống tự động đồng bộ, không thể xóa.</Text>\r\n          </div>\r\n        </Space> */}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clinic;","import React, { useState } from \"react\";\r\nimport { Button, Col, Form, Input, message, Modal, Row, Spin, Upload } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport './CreateEdit.scss';\r\nimport { toast } from 'react-toastify';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport SpecialtyApis from \"../../../apis/Specialty\";\r\nimport { useEffect } from \"react\";\r\nimport baseURL from \"../../../utils/url\";\r\n\r\nconst modulesQill = {\r\n  toolbar: [\r\n    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n    [{ size: [] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n    { 'indent': '-1' }, { 'indent': '+1' }],\r\n    ['link', 'image', 'video'],\r\n    ['clean']\r\n  ],\r\n  clipboard: {\r\n    matchVisual: false,\r\n  },\r\n  history: {\r\n    delay: 1000,\r\n    maxStack: 50,\r\n    userOnly: false\r\n  },\r\n  // imageResize: {\r\n  // displayStyles: {\r\n  //   backgroundColor: 'black',\r\n  //   border: 'none',\r\n  //   color: 'white'\r\n  // },\r\n  // modules: ['Resize', 'DisplaySize', 'Toolbar']\r\n  // },\r\n}\r\nconst formats = [\r\n  'header', 'font', 'size',\r\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent',\r\n  'link', 'image', 'video'\r\n]\r\nconst CreateEditSpecialty = ({\r\n  isShowModal,\r\n  handleCancelModal,\r\n  type,\r\n  dataUpdate,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [fileListImage, setFileListImage] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (type === 'update' && Object.keys(dataUpdate).length) {\r\n      form.setFieldsValue({\r\n        name: dataUpdate?.name || null,\r\n        image: dataUpdate?.image || null,\r\n        description: dataUpdate?.description || null,\r\n      });\r\n      setFileListImage(dataUpdate?.image ? [{\r\n        uid: '-1',\r\n        name: 'image.jpg',\r\n        status: 'done',\r\n        url: `${baseURL}${dataUpdate.image}`,\r\n      }] : [])\r\n    }\r\n  }, [type, dataUpdate])\r\n\r\n  const handleSubmitSpecialty = async (value) => {\r\n    console.log('value: ', value);\r\n    setLoading(true);\r\n    if (type === 'create' && Object.keys(dataUpdate).length === 0) {\r\n      const fileSize = value?.image?.fileList[0]?.size;\r\n      const isLt2M = fileSize / 1024 / 1024 < 2;\r\n      console.log('isLt2M: ', isLt2M);\r\n      if (!isLt2M) {\r\n        message.error('Chọn ảnh nhỏ hơn 2MB!');\r\n      }\r\n      try {\r\n        let formData = new FormData();\r\n        formData.append('file', value?.image?.fileList[0]?.originFileObj);\r\n        formData.append('name', value?.name);\r\n        formData.append('description', value?.description);\r\n        const dataRes = await SpecialtyApis.createSpecialty(formData);\r\n        if (dataRes.status === 200) {\r\n          setLoading(false);\r\n          toast.success('Thêm chuyên khoa thành công');\r\n          handleCancelModal();\r\n          form.setFieldsValue({\r\n            name: '',\r\n            image: null,\r\n            description: '',\r\n          })\r\n        }\r\n      } catch (error) {\r\n        console.log('error: ', error);\r\n        setLoading(false);\r\n        toast.error('Thêm chuyên khoa không thành công!');\r\n      }\r\n    } else if (type === 'update' && Object.keys(dataUpdate).length) {\r\n      console.log('update');\r\n      let newData = {};\r\n      if (value.image === dataUpdate.image || (!value.image) || (value.image && value?.image?.fileList?.length === 0)) {\r\n        const { image, ...res } = value;\r\n        newData = res;\r\n      } else if (value?.image?.fileList?.length > 0) {\r\n        const fileSize = value?.image?.fileList[0]?.size;\r\n        const isLt2M = fileSize / 1024 / 1024 < 2;\r\n        // console.log('isLt2M: ', isLt2M);\r\n        if (!isLt2M) {\r\n          message.error('Chọn ảnh nhỏ hơn 2MB!');\r\n          return;\r\n        }\r\n        let formData = new FormData();\r\n        for (const item in value) {\r\n          if (item === 'image') {\r\n            formData.append('file', value[item].fileList[0]?.originFileObj);\r\n          } else {\r\n            formData.append(item, value[item]);\r\n          }\r\n        }\r\n        newData = formData;\r\n      }\r\n      try {\r\n        const updateSpecialty = await SpecialtyApis.updateSpecialty(dataUpdate.id, newData);\r\n        console.log('updateSpecialty: ', updateSpecialty);\r\n        if (updateSpecialty.status === 200) {\r\n          setLoading(false);\r\n          toast.success('Cập nhật thông tin chuyên khoa thành công');\r\n          handleCancelModal();\r\n          form.resetFields();\r\n          setFileListImage([]);\r\n        }\r\n      } catch (error) {\r\n        console.log('error: ', error);\r\n        setLoading(false);\r\n        toast.error('Cập nhật thông tin chuyên khoa không thành công!')\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChangeImage = ({ fileList: newFileList }) => {\r\n    setFileListImage(newFileList);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className='create_modal'\r\n      title={\r\n        <>\r\n          <div>{type === 'create' ? 'Thêm chuyên khoa' : 'Sửa thông tin chuyên khoa'}</div>\r\n        </>\r\n      }\r\n      open={isShowModal}\r\n      onCancel={() => {\r\n        if (!loading) {\r\n          handleCancelModal();\r\n          form.resetFields();\r\n        }\r\n      }}\r\n      height={550}\r\n      width={700}\r\n      footer={false}\r\n    >\r\n      <Spin spinning={loading}>\r\n        <Form\r\n          name='user'\r\n          onFinish={(values) => handleSubmitSpecialty(values)}\r\n          autoComplete='off'\r\n          layout='vertical'\r\n          form={form}\r\n        >\r\n          <div style={{ height: '400px', overflowY: 'auto', overflowX: 'hidden' }}>\r\n            <Row gutter={24}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={'name'}\r\n                  label={<span className='txt_label'>Tên chuyên khoa</span>}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Tên chuyên khoa không được để trống',\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size='middle'\r\n                    className='txt_input'\r\n                    placeholder={'Tên Chuyên khoa'} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={'image'}\r\n                  label={<span className='txt_label'>Ảnh chuyên khoa</span>}\r\n                  rules={[\r\n                    {\r\n                      required: (type === 'update' && Object.keys(dataUpdate).length) ? false : true,\r\n                      message: 'Ảnh chuyên khoa không được để trống',\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Upload\r\n                    listType=\"picture-card\"\r\n                    beforeUpload={() => false}\r\n                    fileList={fileListImage}\r\n                    onChange={onChangeImage}\r\n                    maxCount={1}\r\n                  >\r\n                    <div>\r\n                      <PlusOutlined />\r\n                      <div style={{ marginTop: 8 }}>Upload</div>\r\n                    </div>\r\n                  </Upload>\r\n                </Form.Item>\r\n                <Col span={24}>\r\n                  <Form.Item\r\n                    name={'description'}\r\n                    label={<span className='txt_label'>Mô tả chuyên khoa</span>}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Mô tả chuyên khoa không được để trống',\r\n                      }\r\n                    ]}\r\n                  >\r\n                    <ReactQuill\r\n                      theme=\"snow\"\r\n                      placeholder=\"Mô tả\"\r\n                      modules={modulesQill}\r\n                      formats={formats}\r\n                      // bounds={'#root'}\r\n                      style={{ height: \"300px\" }}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Col span={24} style={{ textAlign: 'center' }}>\r\n            <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\r\n              Hủy\r\n            </Button>\r\n            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n              {type === 'create' ? 'Thêm chuyên khoa' : 'Cập nhật'}\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal >\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default CreateEditSpecialty;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { PlusCircleOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { Alert, Button, Input, Modal, Space, Table } from 'antd';\r\nimport SpecialtyApis from '../../apis/Specialty';\r\nimport './index.scss';\r\nimport Stroke from '../../components/Icon/CareStaff/Stoke';\r\nimport moment from 'moment';\r\nimport CreateEditSpecialty from './components/CreateEdit';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Specialty = () => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const typingSearch = useRef(null);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [listSpecialty, setListSpecialty] = useState([]);\r\n  const [dataResponse, setDataResponse] = useState({});\r\n  const [isShowModal, setShowModal] = useState(false);\r\n  const [isShowModalDelete, setShowModalDelete] = useState(false);\r\n  const [typeModal, setTypeModal] = useState(false);\r\n  const [dataUpdate, setDataUpdate] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (!isShowModal && !isShowModalDelete)\r\n      getListSpecialty();\r\n  }, [pagination, search, isShowModal, isShowModalDelete])\r\n\r\n  const getListSpecialty = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const dataRes = await SpecialtyApis.getListSpecialty({\r\n        page: pagination.page,\r\n        take: pagination.pageSize,\r\n        q: search || undefined,\r\n      })\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes.data;\r\n        const listSpecialtyData = data?.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item.name || '',\r\n            description: item.description || '',\r\n            createdDate: item.createdDate ? moment(item.createdDate).format('DD/MM/YYYY') : '',\r\n            lastModifiedDate: item.lastModifiedDate ? moment(item.lastModifiedDate).format('DD/MM/YYYY') : '',\r\n            image: item.image || '',\r\n          }\r\n        })\r\n        setListSpecialty(listSpecialtyData || []);\r\n        setDataResponse(dataRes?.data ? dataRes.data || {} : {});\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    if (typingSearch.current) {\r\n      clearTimeout(typingSearch.current);\r\n    }\r\n    typingSearch.current = setTimeout(() => {\r\n      setSearch(e.target.value);\r\n    }, 500)\r\n  }\r\n\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys);\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Tên chuyên khoa',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      ellipsis: true,\r\n      width: '20%',\r\n      fixed: true,\r\n      render: (_, record) => (\r\n        <div\r\n          className='name_specialty'\r\n          onClick={() => {\r\n            setTypeModal('update');\r\n            setShowModal(true);\r\n            setDataUpdate(record);\r\n          }}\r\n        >\r\n          {record.name}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Mô tả',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      ellipsis: true,\r\n      width: '50%',\r\n      // render: (value) => (\r\n      //   <div>{value}</div>\r\n      // ),\r\n    },\r\n    {\r\n      title: 'Ngày tạo',\r\n      dataIndex: 'createdDate',\r\n      key: 'createdDate',\r\n      ellipsis: true,\r\n      width: '15%',\r\n    },\r\n    {\r\n      title: 'Ngày sửa',\r\n      dataIndex: 'lastModifiedDate',\r\n      key: 'lastModifiedDate',\r\n      ellipsis: true,\r\n      width: '15%',\r\n    }\r\n  ]\r\n\r\n  const handleDeleteSpecialty = async () => {\r\n    try {\r\n      const dataRes = await SpecialtyApis.deleteSpecialty({\r\n        specialtyIds: selectedRowKeys,\r\n      })\r\n      if (dataRes?.data === true && dataRes.status === 200) {\r\n        toast.success('Xoá chuyên khoa thành công!');\r\n        setShowModalDelete(false);\r\n        setSelectedRowKeys([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Xoá chuyên khoa không thành công!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Danh sách chuyên khoa</h1>\r\n\r\n      <div className=\"header_specialty\">\r\n        <Space>\r\n          {/* <Button\r\n            id={'btn__filter'}\r\n            icon={\r\n              <FilterIcon\r\n                style={{\r\n                  transform: 'translateY(2px)',\r\n                  fill: `${showFilter ? '#3863EF' : 'none'}`,\r\n                }}\r\n              />\r\n            }\r\n            onClick={() => setShowFilter(!showFilter)}\r\n          /> */}\r\n          <Input\r\n            className='search_specialty'\r\n            size=\"large\"\r\n            placeholder=\"Tìm kiếm\"\r\n            suffix={<SearchOutlined />}\r\n            onChange={(e) => handleSearch(e)}\r\n          />\r\n        </Space>\r\n\r\n        <div className='list_button'>\r\n          <Button\r\n            className='button'\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => {\r\n              setTypeModal('create');\r\n              setShowModal(true);\r\n            }}\r\n          >\r\n            Thêm mới\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedRowKeys.length > 0 && (\r\n        <Alert\r\n          className='fontSizeAlert'\r\n          message={\r\n            <div>\r\n              <Space>\r\n                <span>Đã chọn: {selectedRowKeys.length}</span>\r\n                <Button\r\n                  className='btn_active'\r\n                  icon={<Stroke className='transformY_2' />}\r\n                  onClick={() => setShowModalDelete(true)}\r\n                >\r\n                  <span className='ml_8'>Xóa</span>\r\n                </Button>\r\n              </Space>\r\n            </div>\r\n          }\r\n        />\r\n      )}\r\n\r\n      <Table\r\n        loading={loading}\r\n        rowKey={'id'}\r\n        dataSource={listSpecialty}\r\n        columns={columns}\r\n        rowSelection={{\r\n          selectedRowKeys,\r\n          onChange: onSelectChange\r\n        }}\r\n        pagination={{\r\n          current: dataResponse?.meta?.page || 2, // so trang\r\n          total: dataResponse?.meta?.itemCount || 10, // tong tat ca \r\n          defaultPageSize: dataResponse?.meta?.take || 10,\r\n          showSizeChanger: true,\r\n          pageSizeOptions: ['10', '20', '50', '100'],\r\n          locale: { items_per_page: ' kết quả/trang' },\r\n          onChange: (page, pageSize) => {\r\n            setPagination({\r\n              ...pagination,\r\n              page,\r\n              pageSize,\r\n            });\r\n          },\r\n        }}\r\n      // scroll={{ x: 'max-content' }}\r\n      />\r\n\r\n      {isShowModal && (\r\n        <CreateEditSpecialty\r\n          isShowModal={isShowModal}\r\n          handleCancelModal={() => {\r\n            setShowModal(false);\r\n            setDataUpdate({});\r\n          }}\r\n          type={typeModal}\r\n          dataUpdate={dataUpdate}\r\n        />\r\n      )}\r\n\r\n      <Modal\r\n        open={isShowModalDelete}\r\n        onOk={handleDeleteSpecialty}\r\n        onCancel={() => setShowModalDelete(false)}\r\n        cancelText={'Hủy'}\r\n        okText={'Xóa'}\r\n        className='confirm_delete_label'\r\n        width={370}\r\n      >\r\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\r\n          Bạn có muốn xóa chuyên khoa?\r\n        </h2>\r\n        {/* <Space direction='vertical'>\r\n          <Text>\r\n            Sau khi xóa nhãn, hệ thống sẽ tự động gỡ nhãn khỏi các lượt tương tác đã được gắn nhãn\r\n            trước đây.\r\n            <br /> Vui lòng cân nhắc trước khi xóa.\r\n          </Text>\r\n\r\n          <div style={{ background: '#fdefe4', padding: '10px', borderRadius: '3px' }}>\r\n            <Text style={{ fontWeight: 600, color: '#e59935' }}>\r\n              <WarningFilled /> Lưu ý:\r\n              <br />\r\n            </Text>\r\n            <Text>Các nhãn tạo từ Facebook được hệ thống tự động đồng bộ, không thể xóa.</Text>\r\n          </div>\r\n        </Space> */}\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Specialty;","import requestClient from \"../RequestClient\";\n\nconst ScheduleApis = {\n  getListSchedule(params) {\n    const urlParam = 'schedules';\n\n    return requestClient().get(urlParam, { params });\n  },\n\n  createSchdules(data) {\n    const urlParam = 'schedules';\n    return requestClient().post(urlParam, data)\n  },\n\n  deleteManySchedule(data) {\n    const urlParam = 'schedules/many-schedule';\n    return requestClient().delete(urlParam, { data: data });\n  },\n};\n\n\nexport default ScheduleApis;","import { Button, Col, DatePicker, Form, Input, Modal, Spin, Row, Select, InputNumber } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './CreateSchedule.scss';\r\nimport { toast } from 'react-toastify';\r\nimport { DeleteOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport ScheduleApis from '../../../apis/Schedules';\r\n\r\nconst { Option } = Select;\r\nconst dateNow = new Date();\r\n\r\nconst listTime = [\r\n  '07:00',\r\n  '07:30',\r\n  '08:00',\r\n  '08:30',\r\n  '09:00',\r\n  '09:30',\r\n  '10:00',\r\n  '10:30',\r\n  '11:00',\r\n  '11:30',\r\n  '12:00',\r\n  '12:30',\r\n  '13:00',\r\n  '13:30',\r\n  '14:00',\r\n  '14:30',\r\n  '15:00',\r\n  '15:30',\r\n  '16:00',\r\n  '16:30',\r\n  '17:00',\r\n  '17:30',\r\n  '18:00',\r\n  '18:30',\r\n  '19:00',\r\n  '19:30',\r\n  '20:00',\r\n  '20:30',\r\n  '21:00',\r\n  '21:30',\r\n  '22:00',\r\n]\r\n\r\nconst CreateSchedule = ({\r\n  isShowModal,\r\n  doctor,\r\n  handleCancelModal, // function cancel\r\n}) => {\r\n  const [selectDate, setSelectDate] = useState(moment(dateNow).add(1, 'day').format('YYYY-MM-DDT08:00:00'));\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      date: moment(selectDate)\r\n    })\r\n  }, [])\r\n\r\n  const onChange = (date, stringDate) => {\r\n    // console.log('date: ', date);\r\n    // console.log('stringDate: ', stringDate);\r\n    setSelectDate(moment(date).format('YYYY-MM-DDTHH:mm:ss'));\r\n  };\r\n\r\n  const handleAddNewSchedule = async (values) => {\r\n    console.log('value: ', values);\r\n    setLoading(true);\r\n    try {\r\n      let times = values.times && values.times.length > 0 ? [values.time, ...values.times] : [values.time];\r\n      times = times.map(item => {\r\n        return {\r\n          ...item,\r\n          timeStart: moment(selectDate).format(`YYYY-MM-DDT${item.timeStart}:00`),\r\n          timeEnd: moment(selectDate).format(`YYYY-MM-DDT${item.timeEnd}:00`),\r\n        }\r\n      })\r\n      console.log('times: ', times);\r\n      const newData = {\r\n        date: moment(values.date).format('YYYY-MM-DDTHH:mm:ss'),\r\n        maxCount: 2,\r\n        doctorId: doctor.id,\r\n        times: times,\r\n      }\r\n\r\n      const dataRes = await ScheduleApis.createSchdules(newData);\r\n      console.log('dataRes: ', dataRes);\r\n      if (dataRes?.status === 200) {\r\n        toast.success('Tạo kế hoạch khám thành công');\r\n        handleCancelModal();\r\n        setLoading(false);\r\n        // form.setFieldsValue({\r\n        //   date: moment(selectDate),\r\n        //   time: {\r\n        //     maxCount: 1,\r\n\r\n        //   }\r\n\r\n        // })\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n      if (error?.response?.data?.error === 'TIME_END_MUST_BE_GREATER_THAN_TIME_START') {\r\n        toast.error('Thời gian bắt đầu phải nhỏ hơn thời gian kết thúc!');\r\n        return;\r\n      } else if (error?.response?.data?.status === 400 && error?.response?.data?.error === 'INVALID DATE') {\r\n        toast.error('Thời gian đã tồn tại hoặc trùng với thời gian khác. Thử lại');\r\n        return;\r\n      }\r\n      toast.error('Tạo kế hoạch khám không thành công!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className='create_modal'\r\n      title={\r\n        <>\r\n          <div>Thêm kế hoạch khám bệnh</div>\r\n        </>\r\n      }\r\n      visible={isShowModal}\r\n      onCancel={() => {\r\n        !loading && handleCancelModal()\r\n      }}\r\n      width={600}\r\n      footer={false}\r\n    >\r\n      <Spin spinning={loading}>\r\n        <Form\r\n          name='user'\r\n          onFinish={(values) => handleAddNewSchedule(values)}\r\n          autoComplete='off'\r\n          layout='vertical'\r\n          form={form}\r\n        >\r\n          <div style={{ minHeight: '250px', maxHeight: '400px', overflowY: 'auto', overflowX: 'hidden' }}>\r\n            <Row gutter={24}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={'date'}\r\n                  label={<span className='txt__label'>Ngày khám</span>}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Ngày khám không được để trống',\r\n                    }\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    picker='date'\r\n                    showNow={false}\r\n                    placeholder={true ? 'Chọn ngày khám' : 'Không có thông tin'}\r\n                    size={'middle'}\r\n                    // defaultValue={moment(selectDate, 'YYYY-MM-DD')}\r\n                    format={'DD/MM/YYYY'}\r\n                    style={{\r\n                      width: '100%',\r\n                      cursor: 'pointer',\r\n                      fontSize: '14px',\r\n                    }}\r\n                    className='txt_input'\r\n                    showToday={false}\r\n                    disabledDate={(current) => moment() >= current}\r\n                    onChange={onChange}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={6}>\r\n                <Form.Item\r\n                  name={['time', 'maxCount']}\r\n                  label={<span className='txt__label'>Số bệnh nhân</span>}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Số lượng bệnh nhân không được để trống',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    // style={{ width: '100%' }}\r\n                    min={1} max={10} defaultValue={1} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={9}>\r\n                <Form.Item\r\n                  name={['time', 'timeStart']}\r\n                  label={<span className='txt_label'>Bắt đầu</span>}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Giờ bắt đầu không được để trống',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{ width: '100%' }}\r\n                    size='middle'\r\n                    placeholder={true ? 'Chọn giờ bắt đầu' : 'Không có thông tin'}\r\n                    className='txt_input'\r\n                  // defaultValue={listTime[0]}\r\n                  >\r\n                    {listTime.map((item, index) => (\r\n                      <Option key={index} value={item}>\r\n                        {item}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={9}>\r\n                <Form.Item\r\n                  name={['time', 'timeEnd']}\r\n                  label={<span className='txt_label'>Kết thúc</span>}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Giờ kết thúc không được để trống',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{ width: '100%' }}\r\n                    size='middle'\r\n                    placeholder={true ? 'Chọn giờ kết thúc' : 'Không có thông tin'}\r\n                    className='txt_input'\r\n                  // defaultValue={listTime[1]}\r\n                  >\r\n                    {listTime.map((item, index) => (\r\n                      <Option key={index} value={item}>\r\n                        {item}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Form.List name=\"times\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <React.Fragment key={key}>\r\n                        <Col span={6}>\r\n                          <Form.Item\r\n                            {...restField}\r\n                            name={[name, 'maxCount']}\r\n                            label={<span className='txt__label'>Số bệnh nhân</span>}\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Số lượng bệnh nhân không được để trống',\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <InputNumber\r\n                              // style={{ width: '100%' }}\r\n                              min={1} max={10} defaultValue={1} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <Form.Item\r\n                            {...restField}\r\n                            name={[name, 'timeStart']}\r\n                            label={<span className='txt_label'>Bắt đầu</span>}\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Giờ bắt đầu không được để trống',\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Select\r\n                              style={{ width: '100%' }}\r\n                              size='middle'\r\n                              placeholder={true ? 'Chọn giờ bắt đầu' : 'Không có thông tin'}\r\n                              className='txt_input'\r\n                            // defaultValue={listTime[0]}\r\n                            >\r\n                              {listTime.map((item, index) => (\r\n                                <Option key={index} value={item}>\r\n                                  {item}\r\n                                </Option>\r\n                              ))}\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <Form.Item\r\n                            {...restField}\r\n                            name={[name, 'timeEnd']}\r\n                            label={<span className='txt_label'>Kết thúc</span>}\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Giờ kết thúc không được để trống',\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Select\r\n                              style={{ width: '100%' }}\r\n                              size='middle'\r\n                              placeholder={true ? 'Chọn giờ kết thúc' : 'Không có thông tin'}\r\n                              className='txt_input'\r\n                            // defaultValue={listTime[1]}\r\n                            >\r\n                              {listTime.map((item, index) => (\r\n                                <Option key={index} value={item}>\r\n                                  {item}\r\n                                </Option>\r\n                              ))}\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n                        {/* <MinusCircleOutlined */}\r\n                        <DeleteOutlined\r\n                          style={{\r\n                            fontSize: '16px',\r\n                            transform: 'translateY(37px)',\r\n                            color: 'red'\r\n                          }}\r\n                          onClick={() => remove(name)} />\r\n                      </React.Fragment>\r\n                    ))}\r\n                    <Col span={24}>\r\n                      <Form.Item>\r\n                        <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                          Thêm giờ khám\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n\r\n\r\n            </Row>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\r\n                Hủy\r\n              </Button>\r\n              <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                Thêm kế hoạch\r\n              </Button>\r\n            </Col>\r\n          </div>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CreateSchedule;","import { Alert, Button, DatePicker, Empty, Modal, Space, Table, Tag, Typography } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { PlusCircleOutlined, WarningFilled } from '@ant-design/icons';\r\nimport ScheduleApis from '../../apis/Schedules';\r\nimport './index.scss';\r\nimport CreateSchedule from './components/CreateSchedule';\r\nimport { toast } from 'react-toastify';\r\nimport Stroke from '../../components/Icon/CareStaff/Stoke';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst timeStartDay = '2022-12-14T08:00:00';\r\nconst timeEndDay = '2022-12-14T18:00:00';\r\nconst dateNow = new Date();\r\n\r\nconst Schedules = () => {\r\n  const [selectDate, setSelectDate] = useState(moment(dateNow).add(1, 'day').format('YYYY-MM-DDT08:00:00'));\r\n  const [listSchedule, setListSchedule] = useState([]);\r\n  const [isModalCreate, setModalCreate] = useState(false);\r\n  const [listScheduleDisable, setListScheduleDisable] = useState([]);\r\n  const [isShowChangeSchedule, setShowChangeSchedule] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataResponse, setDataResponse] = useState({});\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const userLocal = JSON.parse(localStorage.getItem('user'));\r\n    if (userLocal)\r\n      setUser(userLocal)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!isModalCreate && user)\r\n      getSchedules();\r\n  }, [selectDate, isModalCreate, user]);\r\n\r\n  const getSchedules = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const dataRes = await ScheduleApis.getListSchedule({\r\n        page: 1,\r\n        take: 100,\r\n        doctorId: user.id,\r\n        date: selectDate,\r\n      })\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes?.data;\r\n        const listScheduleMap = data.map(item => {\r\n          return {\r\n            id: item.id,\r\n            timeStart: item.timeStart ? moment(item?.timeStart).format('YYYY-MM-DDTHH:mm:ss') : '',\r\n            timeEnd: item.timeEnd ? moment(item?.timeEnd).format('YYYY-MM-DDTHH:mm:ss') : '',\r\n            checked: true,\r\n            status: item.status,\r\n            date: moment(new Date(parseInt(item.date))).format('DD/MM/YYYY'),\r\n            maxCount: item?.maxCount || 0,\r\n            booked: item?.booked || 0,\r\n          }\r\n        })\r\n        setListSchedule(listScheduleMap || []);\r\n        setDataResponse(dataRes?.data || null);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log('error: ', error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(timeStartDay > timeEndDay);\r\n    const listTime = [];\r\n    let timeStartDayClone = timeStartDay\r\n    while (timeStartDayClone < timeEndDay) {\r\n      // console.log('timeStartDayClone: ', timeStartDayClone);\r\n      const time = {\r\n        timeStart: timeStartDayClone,\r\n        timeEnd: moment(timeStartDayClone).add(30, 'minutes').format('YYYY-MM-DDTHH:mm:ss'),\r\n      }\r\n      timeStartDayClone = moment(timeStartDayClone).add(30, 'minutes').format('YYYY-MM-DDTHH:mm:ss');\r\n      listTime.push(time);\r\n    }\r\n    // setListSchedule(listTime);\r\n  }, [])\r\n\r\n  const onChange = (date, stringDate) => {\r\n    // console.log('date: ', date);\r\n    // console.log('stringDate: ', stringDate);\r\n    setSelectDate(moment(date).format('YYYY-MM-DDTHH:mm:ss'));\r\n  };\r\n\r\n  const handleCheckedSchedule = (schedule) => {\r\n    // const {timeStart, timeEnd, checked} = schedule;\r\n    const listScheduleClone = listSchedule;\r\n    const listScheduleDisableNew = new Set([...listScheduleDisable]);\r\n    const listScheduleNew = listScheduleClone.map(item => {\r\n      if (item.id === schedule.id && schedule.checked === item.checked) {\r\n        if (schedule.checked === true && item.checked === true) {\r\n          listScheduleDisableNew.add(schedule.id);\r\n        } else {\r\n          listScheduleDisableNew.delete(schedule.id);\r\n        }\r\n        return {\r\n          ...item,\r\n          checked: !schedule.checked,\r\n        }\r\n      }\r\n      return item;\r\n    })\r\n    setListSchedule(listScheduleNew);\r\n    setListScheduleDisable([...listScheduleDisableNew]);\r\n  }\r\n\r\n  const handleDeleteDoctor = async () => {\r\n    if (isShowChangeSchedule && (listScheduleDisable.length || selectedRowKeys.length)) {\r\n      try {\r\n        const dataDelete = await ScheduleApis.deleteManySchedule({\r\n          scheduleIds: listScheduleDisable.length ? listScheduleDisable : selectedRowKeys,\r\n        });\r\n        if (dataDelete.status === 200 && dataDelete.data === true) {\r\n          getSchedules();\r\n          toast.success('Thay đổi kế hoạch khám thành công');\r\n          setShowChangeSchedule(false);\r\n          setSelectedRowKeys([]);\r\n        }\r\n      } catch (error) {\r\n        console.log('error: ', error);\r\n        if (error?.response?.data?.error === 'APPOINTMENT_HAS_BEEN_BOOKED') {\r\n          toast.warning('Lịch hẹn đã có người đặt, không thể thay đổi!')\r\n          return;\r\n        }\r\n        toast.error('Thay đổi kế hoạch khám không thành công!')\r\n      }\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Thời gian',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      width: 100,\r\n      render: (_, record) => (\r\n        <span>{`${moment(record.timeStart).format('HH:mm')} - ${moment(record.timeEnd).format('HH:mm')}`}</span>\r\n      )\r\n    },\r\n    {\r\n      title: 'Ngày khám',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Số lượng bệnh nhân',\r\n      dataIndex: 'maxCount',\r\n      key: 'maxCount',\r\n      width: 50,\r\n    },\r\n    {\r\n      title: 'Đã đặt',\r\n      dataIndex: 'booked',\r\n      key: 'booked',\r\n      width: 50,\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 50,\r\n      align: 'center',\r\n      render: (_, record) => {\r\n        let color = '', text = '';\r\n        if (record.status === 'ACTIVE') {\r\n          color = 'green';\r\n          text = 'Hoạt động';\r\n        }\r\n        else if (record.status === 'CANCLE') {\r\n          color = 'red';\r\n          text = 'Đã huỷ';\r\n        }\r\n        else if (record.status === 'WAITING') {\r\n          color = 'orange';\r\n          text = 'Đang chờ';\r\n        }\r\n        else {\r\n          color = 'red';\r\n          text = 'Lỗi';\r\n        }\r\n\r\n        return (\r\n          <>\r\n            <Tag color={color} key={record.status}>\r\n              {text}\r\n            </Tag>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Quản lý lịch khám</h1>\r\n\r\n      <div className='header_schedule'>\r\n        <DatePicker\r\n          className='date_picker'\r\n          picker=\"date\"\r\n          defaultValue={moment(selectDate, 'YYYY-MM-DD')}\r\n          format={'DD/MM/YYYY'}\r\n          showNow={true}\r\n          showTime={false}\r\n          style={{\r\n            borderRadius: '0px',\r\n            cursor: 'pointer',\r\n            fontSize: '14px',\r\n          }}\r\n          showToday={false}\r\n          disabledDate={(current) => moment() >= current}\r\n          onChange={onChange}\r\n        />\r\n\r\n        <div className='list_button'>\r\n          <Button\r\n            className='button'\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => setModalCreate(true)}\r\n          >\r\n            Thêm kế hoạch khám\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='list_schedule'>\r\n        <div className=\"title_list_schedule\">\r\n          Danh sách giờ khám\r\n        </div>\r\n        {/* <div className=\"description_list_schedule\">Bấm vào từng khung giờ để có thể cập nhật lại kế hoạch khám.</div>\r\n        {listSchedule && listSchedule.length ? (\r\n          <Space wrap>\r\n            {listSchedule.map((item, idx) => (\r\n              <Button\r\n                key={`button-${idx}`}\r\n                type={item.checked ? 'primary' : ''}\r\n                className={item.checked ? '' : 'button_origin'}\r\n                onClick={() => handleCheckedSchedule(item)}\r\n              >\r\n                {moment(item.timeStart).format('HH:mm')} - {moment(item.timeEnd).format('HH:mm')}\r\n              </Button>\r\n            ))}\r\n          </Space>\r\n        ) : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={<div>Không có giờ khám</div>} />} */}\r\n      </div>\r\n\r\n      {listScheduleDisable && listScheduleDisable.length > 0 && (\r\n        <div className=\"button_update_schedules\">\r\n          <Button\r\n            type='primary'\r\n            onClick={() => setShowChangeSchedule(true)}\r\n          >\r\n            Cập nhật kế hoạch khám\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {/* <CreateSchedule\r\n        isShowModal={isModalCreate}\r\n        handleCancelModal={() => setModalCreate(false)}\r\n      /> */}\r\n\r\n      <div className=\"table_list_schdule\">\r\n\r\n        {selectedRowKeys.length > 0 && (\r\n          <Alert\r\n            className='fontSizeAlert'\r\n            message={\r\n              <div>\r\n                <Space>\r\n                  <span>Đã chọn: {selectedRowKeys.length}</span>\r\n\r\n                  <Button\r\n                    className='btn_active'\r\n                    icon={<Stroke className='transformY_2' />}\r\n                    onClick={() => {\r\n                      setShowChangeSchedule(true);\r\n                    }}\r\n                  >\r\n                    <span className='ml_8'>Xóa</span>\r\n                  </Button>\r\n                </Space>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n        <Table\r\n          loading={loading}\r\n          rowKey={'id'}\r\n          dataSource={listSchedule}\r\n          columns={columns}\r\n          rowSelection={{\r\n            selectedRowKeys,\r\n            onChange: onSelectChange\r\n          }}\r\n          pagination={{\r\n            current: dataResponse?.meta?.page || 1, // so trang\r\n            total: dataResponse?.meta?.itemCount || 10, // tong tat ca \r\n            defaultPageSize: dataResponse?.meta?.take || 10,\r\n            showSizeChanger: true,\r\n            pageSizeOptions: ['10', '20', '50', '100'],\r\n            locale: { items_per_page: ' kết quả/trang' },\r\n            // onChange: (page, pageSize) => {\r\n            //   setPagination({\r\n            //     ...pagination,\r\n            //     page,\r\n            //     pageSize,\r\n            //   });\r\n            // },\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <CreateSchedule\r\n        isShowModal={isModalCreate}\r\n        doctor={user}\r\n        handleCancelModal={() => setModalCreate(false)}\r\n      />\r\n\r\n      <Modal\r\n        open={isShowChangeSchedule}\r\n        onOk={handleDeleteDoctor}\r\n        onCancel={() => setShowChangeSchedule(false)}\r\n        cancelText={'Hủy'}\r\n        okText={'Cập nhật'}\r\n        className='confirm_delete_label'\r\n        width={400}\r\n      >\r\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\r\n          Bạn có muốn thay đổi kế hoạch khám không?\r\n        </h2>\r\n        <Space direction='vertical'>\r\n          <Text>\r\n\r\n\r\n          </Text>\r\n\r\n          <div style={{ background: '#fdefe4', padding: '10px', borderRadius: '3px' }}>\r\n            <Text style={{ fontWeight: 600, color: '#e59935' }}>\r\n              <WarningFilled /> Lưu ý:\r\n              <br />\r\n            </Text>\r\n            <Text> Sau khi thay đổi, hệ thống sẽ tự động gỡ giờ khám đã đươc bỏ chọn trong danh sách.\r\n              <br /> Vui lòng cân nhắc trước khi cập nhật.\r\n            </Text>\r\n          </div>\r\n        </Space>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Schedules;","import requestClient from \"../RequestClient\";\r\n\r\nconst BookingApis = {\r\n  getBookings(params) {\r\n    const urlParam = 'bookings';\r\n\r\n    return requestClient().get(urlParam, { params });\r\n  },\r\n\r\n  updateBooking(data, bookingId) {\r\n    const urlParam = `bookings/${bookingId}`;\r\n\r\n    return requestClient().put(urlParam, data);\r\n  },\r\n\r\n  getBookingByClinic(params) {\r\n    const urlParam = `bookings/clinic`;\r\n    return requestClient().get(urlParam, { params: params });\r\n  }\r\n};\r\n\r\nexport default BookingApis;","import * as React from 'react';\r\n\r\nexport default function BackIcon(props) {\r\n  return (\r\n    <svg\r\n      width='8'\r\n      height='14'\r\n      viewBox='0 0 8 14'\r\n      fill='none'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      {...props}\r\n    >\r\n      <path\r\n        d='M0.500195 7.80005L6.2002 13.4C6.6002 13.8 7.2002 13.8 7.6002 13.4C8.0002 13 8.0002 12.4 7.6002 12L2.7002 7.00005L7.6002 2.00005C8.0002 1.60005 8.0002 1.00005 7.6002 0.600049C7.4002 0.400049 7.2002 0.300049 6.9002 0.300049C6.60019 0.300049 6.4002 0.400049 6.2002 0.600049L0.500195 6.20005C0.100195 6.70005 0.100195 7.30005 0.500195 7.80005C0.500195 7.70005 0.500195 7.70005 0.500195 7.80005Z'\r\n        fill='#111111'\r\n        fillOpacity='0.85'\r\n      />\r\n    </svg>\r\n  );\r\n}","import { DownOutlined, EditOutlined, FormOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { Button, Card, DatePicker, Dropdown, Input, Space, Spin, Table, Tag } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useRef, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useLocation, useParams, useHistory } from \"react-router-dom\";\r\nimport BookingApis from '../../../../apis/Bookings';\r\nimport UserApis from '../../../../apis/User';\r\nimport BackIcon from '../../../../components/Icon/Common/BackIcon';\r\nimport FilterIcon from '../../../../components/Icon/Doctor/FilterIcon';\r\nimport baseURL from '../../../../utils/url';\r\nimport AddEditUser from '../AddEditUser';\r\nimport './index.scss';\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\nconst DetailCustomer = () => {\r\n  const [search, setSearch] = useState('');\r\n  const typingSearch = useRef(null);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [examinationDay, setExaminationDay] = useState([]);\r\n  const [isModalUpdate, setModalUpdate] = useState(false);\r\n  const [dataCustomerModal, setDataCustomerModal] = useState({});\r\n  const [dataInfoCustomer, setDataInfoCustomer] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [listHistory, setListHistory] = useState([]);\r\n\r\n  let date1 = moment('2023-01-08T10:29:23');\r\n  let date2 = moment('2023-01-09T12:06:55');\r\n  let diff = date2.diff(date1, 'hours');\r\n  console.log('diff: ', diff);\r\n  let { customerId } = useParams();\r\n\r\n  useEffect(() => {\r\n    document.title = 'Thông tin khách khàng'\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (customerId && !isModalUpdate) {\r\n      getInfoCustomer(customerId);\r\n      getHistory();\r\n    }\r\n  }, [customerId, isModalUpdate])\r\n\r\n  const getInfoCustomer = async (customerId) => {\r\n    try {\r\n      setLoading(true);\r\n      const dataRes = await UserApis.getUserById(customerId);\r\n      if (dataRes.status === 200) {\r\n        const { data } = dataRes\r\n        setDataCustomerModal({\r\n          id: data.id,\r\n          firstName: data?.firstName || '',\r\n          middleName: data?.middleName || '',\r\n          lastName: data?.lastName || '',\r\n          email: data?.email || '',\r\n          gender: data?.gender || null,\r\n          phoneNumber: data?.phoneNumber || '',\r\n          birthday: data?.birthday || '',\r\n          address: data?.address || '',\r\n        })\r\n        setDataInfoCustomer(data);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const getHistory = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const dataHistory = await BookingApis.getBookings({\r\n        page: 1,\r\n        take: 100,\r\n        patientId: customerId,\r\n      });\r\n      console.log('dataHistory: ', dataHistory);\r\n      if (dataHistory?.data?.data.length) {\r\n        const { data } = dataHistory?.data;\r\n        const mapData = data?.map((item, idx) => {\r\n\r\n          const doctor = `${item?.doctor.firstName ? item?.doctor.firstName : ''} ${item?.doctor?.middleName ? item?.doctor?.middleName : ''} ${item?.doctor?.lastName ? item?.doctor?.lastName : ''}`.trim();\r\n          return {\r\n            id: item.id,\r\n            stt: idx + 1,\r\n            date: `${moment(item?.schedule?.timeStart).format('HH:mm')} - ${moment(item?.schedule?.timeEnd).format('HH:mm')} ${moment(item?.schedule?.timeEnd).format('DD/MM/YYYY')}`,\r\n            doctor: doctor,\r\n            clinic: item?.doctor?.clinic?.name || '',\r\n            prescription: 'Chua lay dc',\r\n            status: item.status,\r\n            type: item.type === 'FOR_MYSELF' ? 'Đặt cho bản thân' : `Đặt hộ: ${item.bookingRelatives.name}`,\r\n            reason: item?.reason || '',\r\n            prescription: item?.history?.prescription ? `${baseURL}${item?.history?.prescription}` : '',\r\n            doctorNote: item?.history?.doctorNote || '',\r\n          }\r\n        })\r\n        setListHistory(mapData || [])\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleBack = () => {\r\n    // const partName = location.pathname.split('/').slice(0, 3).join('/');\r\n    // console.log('partName: ', partName);\r\n    // history.push(partName);\r\n    window.history.back();\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    if (typingSearch.current) {\r\n      clearTimeout(typingSearch.current);\r\n    }\r\n    typingSearch.current = setTimeout(() => {\r\n      setSearch(e.target.value);\r\n    }, 500)\r\n  }\r\n\r\n  const handleChangePickerExaminationDay = (value) => {\r\n    if (!value) {\r\n      setExaminationDay([]);\r\n      setPagination({\r\n        ...pagination,\r\n        page: 1,\r\n      });\r\n    } else if (value && value[0] && value[1]) {\r\n      setExaminationDay([moment(value[0]).startOf('day').format('YYYY-MM-DDTHH:mm:ss'), moment(value[1]).endOf('day').format('YYYY-MM-DDTHH:mm:ss')]);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: 'stt',\r\n      key: 'stt',\r\n      width: 20,\r\n    },\r\n    {\r\n      title: 'Ngày khám',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n      width: 50,\r\n    },\r\n    {\r\n      title: 'Loại',\r\n      dataIndex: 'type',\r\n      key: 'type',\r\n      width: 50,\r\n    },\r\n    {\r\n      title: 'Lý do',\r\n      dataIndex: 'reason',\r\n      key: 'reason',\r\n      ellipsis: true,\r\n      width: 50,\r\n    },\r\n    {\r\n      title: 'Tên bác sĩ',\r\n      dataIndex: 'doctor',\r\n      key: 'doctor',\r\n      ellipsis: true,\r\n      width: 55\r\n    },\r\n    {\r\n      title: 'Tên phòng khám',\r\n      dataIndex: 'clinic',\r\n      key: 'clinic',\r\n      ellipsis: true,\r\n      width: 55\r\n    },\r\n    {\r\n      title: 'Đơn thuốc',\r\n      dataIndex: 'prescription',\r\n      key: 'prescription',\r\n      ellipsis: true,\r\n      width: 55,\r\n      render: (value) => (\r\n        <>\r\n          {value ? (\r\n            <a download href={value}>\r\n              <div style={{\r\n                color: '#1890ff'\r\n              }}>Xem đơn thuốc</div>\r\n            </a>\r\n          ) : ''}\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 50,\r\n      align: 'center',\r\n      render: (_, record) => {\r\n        let color = '';\r\n        let text = '';\r\n        if (record.status === 'WAITING') {\r\n          color = 'warning';\r\n          text = 'Chưa xác nhận';\r\n        }\r\n        else if (record.status === 'CANCEL') {\r\n          color = 'error';\r\n          text = 'Đã hủy';\r\n        }\r\n        else if (record.status === 'DONE') {\r\n          color = 'success';\r\n          text = 'Đã hoàn thành';\r\n        }\r\n        else if (record.status === 'CONFIRMED') {\r\n          color = 'processing';\r\n          text = 'Đã xác nhận';\r\n        }\r\n        else color = 'red';\r\n\r\n        return (\r\n          <>\r\n            <Tag color={color} key={record.status}>\r\n              {text}\r\n            </Tag>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"spin\">\r\n          <Spin />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='header_detail_customer'>\r\n            <Space>\r\n              <BackIcon\r\n                onClick={handleBack}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  height: '100%'\r\n                }}\r\n              />\r\n              <span className='name_customer'>\r\n                {`${dataInfoCustomer.firstName || ''} ${dataInfoCustomer.middleName || ''} ${dataInfoCustomer.lastName || ''}`.trim()}\r\n              </span>\r\n            </Space>\r\n          </div>\r\n\r\n          <div className=\"detail_customer_container\">\r\n            <div className=\"detail_customer_function\">\r\n              <Space>\r\n                <Button\r\n                  id={'btn__filter'}\r\n                  icon={\r\n                    <FilterIcon\r\n                      style={{\r\n                        transform: 'translateY(2px)',\r\n                        fill: `${showFilter ? '#3863EF' : 'none'}`,\r\n                      }}\r\n                    />\r\n                  }\r\n                  onClick={() => setShowFilter(!showFilter)}\r\n                />\r\n                <Input\r\n                  className='search_doctor'\r\n                  size=\"large\"\r\n                  placeholder=\"Tìm kiếm\"\r\n                  suffix={<SearchOutlined />}\r\n                  onChange={(e) => handleSearch(e)}\r\n                />\r\n              </Space>\r\n\r\n              <div className='list_button'>\r\n                <Button\r\n                  className='button'\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  icon={<EditOutlined />}\r\n                  onClick={() => setModalUpdate(true)}\r\n                >\r\n                  Sửa thông tin\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            {showFilter && (\r\n              <Space\r\n                size={24}\r\n                style={{ marginTop: '10px', marginBottom: '20px', color: 'rgba(17, 17, 17, 0.45)' }}\r\n              >\r\n                <Dropdown\r\n                  overlay={\r\n                    <Card className='cardBody'>\r\n                      <span>Thời gian tạo</span>\r\n                      <br />\r\n                      <RangePicker\r\n                        ranges={{\r\n                          Now: [moment(), moment()],\r\n                        }}\r\n                        placeholder={['Ngày bắt đầu', 'Ngày kết thúc']}\r\n                        // showTime={{ format: 'HH:mm' }}\r\n                        format='DD-MM-YYYY'\r\n                        disabledDate={(current) => moment() <= current}\r\n                        // onOk={onOkCreatedAt}\r\n                        onChange={handleChangePickerExaminationDay}\r\n                      />\r\n                    </Card>\r\n                  }\r\n                  className='filter__dropdown'\r\n                  overlayStyle={{ width: '300px' }}\r\n                  trigger={['click']}\r\n                >\r\n                  <a>\r\n                    <Space\r\n                      style={{\r\n                        color: `${(examinationDay || []).length > 0 ? 'rgba(17, 17, 17, 0.75)' : ''\r\n                          }`,\r\n                      }}\r\n                    >\r\n                      Thời gian tạo\r\n                      <DownOutlined />\r\n                      {(examinationDay || []).length > 0 && <span id='dot__active' />}\r\n                    </Space>\r\n                  </a>\r\n                </Dropdown>\r\n              </Space>\r\n            )}\r\n\r\n            {/* TABLE */}\r\n            <Table\r\n              loading={loading}\r\n              rowKey={'id'}\r\n              dataSource={listHistory}\r\n              columns={columns}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {isModalUpdate && (\r\n        <AddEditUser\r\n          isShowModal={isModalUpdate}\r\n          handleCancelModal={() => setModalUpdate(false)}\r\n          type={'update'}\r\n          dataCustomer={dataCustomerModal}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DetailCustomer;","export const listGender = [\r\n  {\r\n    key: 'MALE',\r\n    value: 'Nam'\r\n  },\r\n  {\r\n    key: 'FEMALE',\r\n    value: 'Nữ'\r\n  },\r\n  {\r\n    key: 'OTHER',\r\n    value: 'Khác'\r\n  }\r\n];","export const listRole = [\r\n  {\r\n    key: 'HEAD_OF_DOCTOR',\r\n    value: 'Trưởng khoa'\r\n  },\r\n  {\r\n    key: 'DOCTOR',\r\n    value: 'Bác sĩ'\r\n  },\r\n  {\r\n    key: 'MANAGER_CLINIC',\r\n    value: 'Quản lý phòng khám'\r\n  }\r\n];\r\n\r\nexport const listPositon = [\r\n  {\r\n    key: 'NONE',\r\n    value: 'Bác sĩ',\r\n  },\r\n  {\r\n    key: 'MASTER',\r\n    value: 'Thạc sĩ'\r\n  },\r\n  {\r\n    key: 'DOCTOR',\r\n    value: 'Tiến sĩ'\r\n  },\r\n  {\r\n    key: 'ASSOCIATE_PROFESSOR',\r\n    value: 'Phó giáo sư'\r\n  },\r\n  {\r\n    key: 'PROFESSOR',\r\n    value: 'Giáo sư'\r\n  }\r\n];\r\n\r\nexport const listPayment = [\r\n  {\r\n    key: 'CASH',\r\n    value: 'Tiền mặt'\r\n  },\r\n  {\r\n    key: 'CREDIT_CARD',\r\n    value: 'Thanh toán bằng thẻ'\r\n  },\r\n  {\r\n    key: 'ALL_PAYMENT_METHOD',\r\n    value: 'Tất cả phương thức thanh toán'\r\n  }\r\n]","import { PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Col, DatePicker, Form, Input, InputNumber, message, Row, Select, Space, Spin, Tabs, Upload } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReactQuill from 'react-quill';\r\nimport ClinicApis from '../../../../apis/Clinic';\r\nimport SpecialtyApis from '../../../../apis/Specialty';\r\nimport UserApis from '../../../../apis/User';\r\nimport BackIcon from '../../../../components/Icon/Common/BackIcon';\r\nimport './index.scss';\r\nimport DoctorApis from '../../../../apis/Doctor';\r\nimport { toast } from 'react-toastify';\r\nimport { listGender } from '../../../../common/constants/gender';\r\nimport { listRole, listPositon, listPayment } from '../../../../common/constants/doctor';\r\nimport baseURL from '../../../../utils/url';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst modulesQill = {\r\n  toolbar: [\r\n    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n    [{ size: [] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n    { 'indent': '-1' }, { 'indent': '+1' }],\r\n    ['link', 'image', 'video'],\r\n    ['clean']\r\n  ],\r\n  clipboard: {\r\n    matchVisual: false,\r\n  },\r\n  history: {\r\n    delay: 1000,\r\n    maxStack: 50,\r\n    userOnly: false\r\n  },\r\n  // imageResize: {\r\n  // displayStyles: {\r\n  //   backgroundColor: 'black',\r\n  //   border: 'none',\r\n  //   color: 'white'\r\n  // },\r\n  // modules: ['Resize', 'DisplaySize', 'Toolbar']\r\n  // },\r\n}\r\nconst formats = [\r\n  'header', 'font', 'size',\r\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent',\r\n  'link', 'image', 'video'\r\n]\r\n\r\nconst DetailDoctor = () => {\r\n  const [dataDoctor, setDataDoctor] = useState({});\r\n  const [dataDoctorRes, setDataDoctorRes] = useState({});\r\n  const [form] = Form.useForm();\r\n  const [formIntroduce] = Form.useForm();\r\n  const [optionsClinic, setOptionsClinic] = useState([]);\r\n  const [optionsSpecialty, setOptionsSpecialty] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editInformation, setEditInformation] = useState(false);\r\n  const [editIntroduce, setEditIntroduce] = useState(false);\r\n  const [fileListAvatar, setFileListAvatar] = useState([]);\r\n  const [doctorInforId, setDoctorInforId] = useState('');\r\n  const [dataDoctorInfo, setDataDoctorInfo] = useState({})\r\n\r\n  let { doctorId } = useParams();\r\n\r\n  useEffect(() => {\r\n    document.title = 'Thông tin bác sĩ';\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (doctorId) {\r\n      getInfoDoctor(doctorId);\r\n    }\r\n    getListClinic();\r\n    getListSpecialty();\r\n  }, [doctorId]);\r\n\r\n  const getInfoDoctor = async (doctorId) => {\r\n    setLoading(true);\r\n    try {\r\n      const dataRes = await UserApis.getUserById(doctorId);\r\n      if (dataRes.status === 200) {\r\n        const { data } = dataRes\r\n        setDataDoctor({\r\n          id: data.id,\r\n          firstName: data?.firstName || '',\r\n          middleName: data?.middleName || '',\r\n          lastName: data?.lastName || '',\r\n          email: data?.email || '',\r\n          gender: data?.gender || null,\r\n          phoneNumber: data?.phoneNumber || null,\r\n          birthday: data?.birthday || '',\r\n          address: data?.address || '',\r\n          role: data.role || '',\r\n          clinic: data.clinic ? data.clinic.id : '',\r\n          specialty: data.specialty ? data.specialty.name : '',\r\n          avatar: data.avatar || '',\r\n          religion: data?.religion || '',\r\n          nation: data?.nation || '',\r\n          identityCardNumber: data?.identityCardNumber || '',\r\n          // avatar: data?.avatar ? [{\r\n          //   uid: '-1',\r\n          //   name: 'image.jpg',\r\n          //   status: 'done',\r\n          //   url: `http://14.225.255.59:8000/${data.avatar}`\r\n          // }] : [],\r\n        });\r\n        setFileListAvatar(data?.avatar ? [{\r\n          uid: '-1',\r\n          name: 'image.jpg',\r\n          status: 'done',\r\n          url: `${baseURL}${data.avatar}`\r\n        }] : []);\r\n\r\n        form.setFieldsValue({\r\n          firstName: data?.firstName || '',\r\n          middleName: data?.middleName || '',\r\n          lastName: data?.lastName || '',\r\n          email: data?.email || '',\r\n          gender: data?.gender || null,\r\n          phoneNumber: data?.phoneNumber || null,\r\n          birthday: data?.birthday ? moment(data?.birthday) : null,\r\n          address: data?.address || '',\r\n          role: data.role || '',\r\n          clinicId: data?.clinic ? data.clinic?.id : null,\r\n          specialtyId: data?.specialty ? data.specialty?.id : null,\r\n          avatar: data?.avatar || null,\r\n          religion: data?.religion || '',\r\n          nation: data?.nation || '',\r\n          identityCardNumber: data?.identityCardNumber || '',\r\n        })\r\n        setDataDoctorRes(data);\r\n        if (data?.doctorInfor) {\r\n          const { doctorInfor } = data;\r\n          setDoctorInforId(data?.doctorInfor?.id || '');\r\n          // await getInfoDoctorExtra(data?.doctorInfor || {});\r\n          formIntroduce.setFieldsValue({\r\n            position: doctorInfor?.position || null,\r\n            price: doctorInfor?.price || 0,\r\n            payment: doctorInfor?.payment || null,\r\n            introduct: doctorInfor?.introduct || null,\r\n            note: doctorInfor?.note || null,\r\n            description: doctorInfor?.description || null,\r\n          })\r\n        }\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const getListClinic = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const dataRes = await ClinicApis.getClinics({\r\n        pages: 1,\r\n        take: 100,\r\n        active: true,\r\n      })\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes?.data;\r\n        const listOptionsClinic = data.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item?.name || '',\r\n          }\r\n        })\r\n        setOptionsClinic(listOptionsClinic || []);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n    }\r\n\r\n  }\r\n  const getListSpecialty = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const dataRes = await SpecialtyApis.getListSpecialty({\r\n        pages: 1,\r\n        take: 100,\r\n      })\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes?.data;\r\n        const listSpecialty = data?.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item.name,\r\n          }\r\n        })\r\n        setOptionsSpecialty(listSpecialty || [])\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n      setOptionsSpecialty([]);\r\n    }\r\n  }\r\n\r\n  const handleBack = () => {\r\n    // const partName = location.pathname.split('/').slice(0, 3).join('/');\r\n    // console.log('partName: ', partName);\r\n    // history.push(partName);\r\n    window.history.back();\r\n  }\r\n\r\n  const handleChangSelectClinic = async (value) => {\r\n    try {\r\n      const dataSpecialty = await SpecialtyApis.getSpecialtyByClinic(value);\r\n      if (dataSpecialty?.data?.data?.length > 0) {\r\n        const { data } = dataSpecialty?.data;\r\n        const listSpecialty = data?.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item.name,\r\n          }\r\n        })\r\n\r\n        setOptionsSpecialty(listSpecialty || [])\r\n      } else if (dataSpecialty?.data?.data?.length === 0) {\r\n        setOptionsSpecialty([]);\r\n        form.setFieldsValue({\r\n          specialtyId: undefined\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setOptionsSpecialty([]);\r\n      form.setFieldsValue({\r\n        specialtyId: undefined\r\n      })\r\n    }\r\n  }\r\n\r\n  const onChangeAvatar = ({ fileList: newFileList }) => {\r\n    setFileListAvatar(newFileList);\r\n  };\r\n\r\n  const handleUpdateDoctor = async (value) => {\r\n    setLoading(true);\r\n    let newData = [];\r\n    if (value.avatar === dataDoctor.avatar || (!value.avatar) || (value.avatar && value?.avatar?.fileList?.length === 0)) {\r\n      const { avatar, ...resData } = value;\r\n      newData = resData\r\n    } else if (value?.avatar?.fileList?.length > 0) {\r\n      const fileSize = value?.avatar?.fileList[0]?.size;\r\n      const isLt2M = fileSize / 1024 / 1024 < 2;\r\n      // console.log('isLt2M: ', isLt2M);\r\n      if (!isLt2M) {\r\n        message.error('Chọn ảnh nhỏ hơn 2MB!');\r\n      }\r\n      let formData = new FormData();\r\n      const { avatar, ...resData } = value;\r\n      for (const item in value) {\r\n        if (item === 'avatar') {\r\n          formData.append('file', value[item].fileList[0]?.originFileObj);\r\n        }\r\n        if (!value[item]) break;\r\n        formData.append(item, value[item]);\r\n      }\r\n      // formData.append('file', avatar?.fileList[0]?.originFileObj);\r\n      newData = formData;\r\n    }\r\n\r\n    try {\r\n      const dataRes = await DoctorApis.updateDoctor(newData, doctorId);\r\n      if (dataRes.status === 200) {\r\n        setLoading(false);\r\n        setEditInformation(false);\r\n        toast.success('Cập nhật thông tin bác sĩ thành công');\r\n        setEditInformation(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n      if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\r\n        toast.error('Bác sĩ đã tồn tại!');\r\n        return;\r\n      }\r\n      toast.error('Cập nhật thông tin bác sĩ không thành công!');\r\n    }\r\n  }\r\n\r\n  const handleUpdateDoctorIntroduce = async (values) => {\r\n    setLoading(true);\r\n    if (!doctorInforId && Object.keys(dataDoctorInfo).length === 0) {\r\n      try {\r\n        const dataSaveDoctorInfo = await DoctorApis.createDoctorInfor({\r\n          ...values,\r\n          doctorId: doctorId,\r\n        })\r\n        if (dataSaveDoctorInfo?.status === 200) {\r\n          toast.success('Thêm giới thiệu bác sĩ thành công');\r\n          setLoading(false);\r\n          setEditIntroduce(false);\r\n        }\r\n      } catch (error) {\r\n        console.log('error: ', error);\r\n        toast.error('Thêm giới thiệu bác sĩ không thành công!');\r\n        setLoading(false);\r\n      }\r\n\r\n    } else {\r\n      // cCập nhật thông tin giới thiệu\r\n      try {\r\n        const dataSaveDoctorInfo = await DoctorApis.updateDoctorInfoExtra(values, doctorInforId);\r\n        if (dataSaveDoctorInfo?.status === 200) {\r\n          toast.success('Thay đổi thông tin giới thiệu bác sĩ thành công');\r\n          setLoading(false);\r\n          setEditIntroduce(false);\r\n        }\r\n      } catch (error) {\r\n        console.log('error: ', error);\r\n        toast.error('Thay đổi thông tin giới thiệu bác sĩ không thành công!');\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"spin\">\r\n          <Spin />\r\n        </div>\r\n\r\n      ) : (\r\n        <>\r\n          <div className='header_detail_doctor'>\r\n            <Space>\r\n              <BackIcon\r\n                onClick={handleBack}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  height: '100%'\r\n                }}\r\n              />\r\n              <span className='name_doctor'>\r\n                {`${dataDoctor.firstName || ''} ${dataDoctor.middleName || ''} ${dataDoctor.lastName || ''}`.trim()}\r\n              </span>\r\n            </Space>\r\n          </div>\r\n          <Tabs defaultActiveKey=\"doctor_information\">\r\n            <Tabs.TabPane tab=\"Thông tin bác sĩ\" key=\"doctor_information\">\r\n              <div className=\"doctor_information\">\r\n                <div className=\"header_doctor_information\">\r\n                  <div style={{ fontSize: '17px' }}>Thông tin bác sĩ</div>\r\n                  <div className='button_edit'>\r\n                    {!editInformation && (\r\n                      <Button\r\n                        type='primary'\r\n                        onClick={() => setEditInformation(true)}\r\n                      >\r\n                        Chỉnh sửa thông tin bác sĩ\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form_doctor_information\">\r\n                  <Form\r\n                    name='doctor'\r\n                    onFinish={(values) => handleUpdateDoctor(values)}\r\n                    autoComplete='off'\r\n                    layout='vertical'\r\n                    form={form}\r\n                  >\r\n                    <Row gutter={24}>\r\n                      <Col span={6}>\r\n                        <Form.Item\r\n                          name={'firstName'}\r\n                          label={<span className='txt_label'>Họ</span>}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Họ không được để trống',\r\n                            }\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            disabled={!editInformation}\r\n                            size='middle'\r\n                            className='txt_input'\r\n                            placeholder={dataDoctor?.firstName ? 'Họ' : 'Không có thông tin'} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={6}>\r\n                        <Form.Item\r\n                          name={'middleName'}\r\n                          label={<span className='txt_label'>Tên đệm</span>}\r\n                        >\r\n                          <Input\r\n                            disabled={!editInformation}\r\n                            size='middle'\r\n                            className='txt_input'\r\n                            placeholder={dataDoctor?.middleName ? 'Tên đệm' : 'Không có thông tin'} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={6}>\r\n                        <Form.Item\r\n                          name={'lastName'}\r\n                          label={<span className='txt_label'>Tên</span>}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Tên không được để trống',\r\n                            }\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            disabled={!editInformation}\r\n                            size='middle'\r\n                            className='txt_input'\r\n                            placeholder={dataDoctor?.lastName ? 'Tên' : 'Không có thông tin'} />\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={6}>\r\n                        <Form.Item\r\n                          name={'avatar'}\r\n                          label={<span className='txt_label'>Ảnh</span>}\r\n                        // rules={[\r\n                        //   {\r\n                        //     required: true,\r\n                        //     message: 'Tên chuyên khoa không được để trống',\r\n                        //   }\r\n                        // ]}\r\n                        >\r\n                          <Upload\r\n                            disabled={!editInformation}\r\n                            listType=\"picture-card\"\r\n                            fileList={fileListAvatar}\r\n                            beforeUpload={() => false}\r\n                            onChange={onChangeAvatar}\r\n                            maxCount={1}\r\n                          >\r\n                            <div>\r\n                              <PlusOutlined />\r\n                              <div style={{ marginTop: 8 }}>Upload</div>\r\n                            </div>\r\n                          </Upload>\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={6}>\r\n                        <Form.Item\r\n                          name={'email'}\r\n                          label={<span className='txt_label'>Email</span>}\r\n                          rules={[\r\n                            { max: 255, message: 'Email tối đa 255 ký tự!' },\r\n                            {\r\n                              required: true,\r\n                              message: 'Email không được để trống',\r\n                            },\r\n                            {\r\n                              validator: (_, value) => {\r\n                                const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\r\n                                if ((regex.test(value) && value)) {\r\n                                  return Promise.resolve();\r\n                                } else {\r\n                                  return Promise.reject('Email không đúng định dạng');\r\n                                }\r\n                              },\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            disabled={!editInformation}\r\n                            size='middle'\r\n                            className='txt_input'\r\n                            placeholder={dataDoctor?.email ? 'Email' : 'Không có thông tin'} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={6}>\r\n                        <Form.Item\r\n                          name={'gender'}\r\n                          label={<span className='txt_label'>Giới tính</span>}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Giới tính không được để trống',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            disabled={!editInformation}\r\n                            style={{ width: '100%' }}\r\n                            size='middle'\r\n                            placeholder={dataDoctor?.gender ? 'Chọn giới tính' : 'Không có thông tin'}\r\n                            className='txt_input'\r\n                          >\r\n                            {listGender.map((item, index) => (\r\n                              <Option key={index} value={item.key}>\r\n                                {item.value}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={6}>\r\n                        <Form.Item\r\n                          name={'phoneNumber'}\r\n                          label={<span className='txt_label'>Số điện thoại</span>}\r\n                          rules={[\r\n                            {\r\n                              max: 20,\r\n                              message: 'Số điện thoại tối đa 20 ký tự',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            disabled={!editInformation}\r\n                            className='txt_input'\r\n                            size='middle'\r\n                            placeholder={dataDoctor?.phoneNumber ? 'Số điện thoại' : 'Không có thông tin'}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={6}>\r\n                        <Form.Item name={'birthday'} label={<span className='txt__label'>Ngày sinh</span>}>\r\n                          <DatePicker\r\n                            disabled={!editInformation}\r\n                            picker='date'\r\n                            showNow={false}\r\n                            // showTime\r\n                            placeholder={dataDoctor?.birthday ? 'Chọn ngày' : 'Không có thông tin'}\r\n                            size={'middle'}\r\n                            format={'DD/MM/YYYY'}\r\n                            style={{\r\n                              width: '100%',\r\n                              cursor: 'pointer',\r\n                              fontSize: '14px',\r\n                            }}\r\n                            className='txt_input'\r\n                            disabledDate={(current) => moment() <= current}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={8}>\r\n                        <Form.Item\r\n                          name={'nation'}\r\n                          label={<span className='txt_label'>Quốc gia</span>}\r\n                        >\r\n                          <Input\r\n                            disabled={!editInformation}\r\n                            className='txt_input'\r\n                            size='middle'\r\n                            placeholder={dataDoctor?.nation ? 'Quốc gia' : 'Không có thông tin'}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Form.Item\r\n                          name={'religion'}\r\n                          label={<span className='txt_label'>Tôn giáo</span>}\r\n                        >\r\n                          <Input\r\n                            disabled={!editInformation}\r\n                            className='txt_input'\r\n                            size='middle'\r\n                            placeholder={dataDoctor?.religion ? 'Tôn giáo' : 'Không có thông tin'}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Form.Item\r\n                          name={'identityCardNumber'}\r\n                          label={<span className='txt_label'>CCCD/CTM</span>}\r\n                        >\r\n                          <Input\r\n                            disabled={!editInformation}\r\n                            className='txt_input'\r\n                            size='middle'\r\n                            placeholder={dataDoctor?.identityCardNumber ? 'CCCD/CMT' : 'Không có thông tin'}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={4}>\r\n                        <Form.Item\r\n                          name={'role'}\r\n                          label={<span className='txt_label'>Vai trò</span>}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Vai trò không được để trống',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            disabled={!editInformation}\r\n                            style={{ width: '100%' }}\r\n                            size='middle'\r\n                            placeholder={dataDoctor?.role ? 'Chọn vai trò' : 'Không có thông tin'}\r\n                            className='txt_input'\r\n                          >\r\n                            {listRole.map((item, index) => (\r\n                              <Option key={index} value={item.key}>\r\n                                {item.value}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={10}>\r\n                        <Form.Item\r\n                          name={'clinicId'}\r\n                          label={<span className='txt_label'>Phòng khám</span>}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Phòng khám không được để trống',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            disabled={!editInformation}\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            size='middle'\r\n                            placeholder={dataDoctor?.clinicId ? 'Chọn phòng khám' : 'Không có thông tin'}\r\n                            className='txt_input'\r\n                            // optionLabelProp='label'\r\n                            // optionFilterProp={'label'}\r\n                            filterOption={(input, option) =>\r\n                              option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\r\n                            }\r\n                            onChange={handleChangSelectClinic}\r\n                          >\r\n                            {optionsClinic.length && optionsClinic.map((item) => (\r\n                              <Option\r\n                                key={item.id}\r\n                                value={item.id || ''}\r\n                                label={item.name}\r\n                              >\r\n                                {item.name}\r\n                              </Option>\r\n\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={10}>\r\n                        <Form.Item\r\n                          name={'specialtyId'}\r\n                          label={<span className='txt_label'>Chuyên khoa</span>}\r\n                        // rules={[\r\n                        //   {\r\n                        //     required: true,\r\n                        //     message: 'Giới tính không được để trống',\r\n                        //   },\r\n                        // ]}\r\n                        >\r\n                          <Select\r\n                            disabled={!editInformation}\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            size='middle'\r\n                            placeholder={dataDoctor?.specialtyId ? 'Chọn chuyên khoa' : 'Không có thông tin'}\r\n                            className='txt_input'\r\n                            filterOption={(input, option) =>\r\n                              option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\r\n                            }\r\n                          >\r\n                            {optionsSpecialty.length && optionsSpecialty.map((item) => (\r\n                              <Option key={item.id} value={item.id}>\r\n                                {item.name}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                    {editInformation && (\r\n                      <Col span={24} style={{ textAlign: 'center' }}>\r\n                        <Button className='btn_cancel' danger size='middle' onClick={() => setEditInformation(false)}>\r\n                          Hủy chỉnh sửa\r\n                        </Button>\r\n                        <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                          Cập nhật\r\n                        </Button>\r\n                      </Col>\r\n                    )}\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane tab=\"Giới thiệu về bác sĩ\" key=\"doctor_introduce\" disabled={dataDoctor && dataDoctor.role === 'MANAGER_CLINIC'}>\r\n              <div className=\"doctor_introduce\">\r\n                <div className=\"header_doctor_introduce\">\r\n                  <div style={{ fontSize: '17px' }}>Giới thiệu chi tiết bác sĩ</div>\r\n                  <div className='button_edit'>\r\n                    {!editIntroduce && (\r\n                      <Button\r\n                        type='primary'\r\n                        onClick={() => setEditIntroduce(true)}\r\n                      >\r\n                        {!doctorInforId ? 'Thêm giới thiệu bác sĩ' : 'Chỉnh sửa thông tin'}\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form_doctor_introduce\">\r\n                  <Form\r\n                    name='doctor_introduce'\r\n                    onFinish={(values) => handleUpdateDoctorIntroduce(values)}\r\n                    autoComplete='off'\r\n                    layout='vertical'\r\n                    form={formIntroduce}\r\n                  >\r\n                    <Row gutter={24}>\r\n                      <Col span={8}>\r\n                        <Form.Item\r\n                          name={'position'}\r\n                          label={<span className='txt_label'>Chức danh</span>}\r\n                        >\r\n                          <Select\r\n                            disabled={!editIntroduce}\r\n                            style={{ width: '100%' }}\r\n                            size='middle'\r\n                            placeholder={true ? 'Chọn chức danh' : 'Không có thông tin'}\r\n                            className='txt_input'\r\n                          >\r\n                            {listPositon.map((item, index) => (\r\n                              <Option key={index} value={item.key}>\r\n                                {item.value}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Form.Item\r\n                          name={'price'}\r\n                          label={<span className='txt_label'>Giá khám</span>}\r\n                        >\r\n                          <InputNumber\r\n                            defaultValue={0}\r\n                            style={{ width: '100%' }}\r\n                            formatter={(value) => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\").replace(/\\.(?=\\d{0,2}$)/g, \",\")}\r\n                            parser={(value) => value.replace(/\\$\\s?|(\\.*)/g, \"\").replace(/(\\,{1})/g, \".\")}\r\n                            placeholder={true ? 'Giá khám' : 'Không có thông tin'}\r\n                            disabled={!editIntroduce}\r\n                            className='txt_input'\r\n                            size='middle'\r\n                          />\r\n\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Form.Item\r\n                          name={'payment'}\r\n                          label={<span className='txt_label'>Phương thức thanh toán</span>}\r\n                        >\r\n                          <Select\r\n                            disabled={!editIntroduce}\r\n                            style={{ width: '100%' }}\r\n                            size='middle'\r\n                            placeholder={true ? 'Chọn phương thức thanh toán' : 'Không có thông tin'}\r\n                            className='txt_input'\r\n                          >\r\n                            {listPayment.map((item, index) => (\r\n                              <Option key={index} value={item.key}>\r\n                                {item.value}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Form.Item\r\n                          name={'introduct'}\r\n                          label={<span className='txt_label'>Giới thiệu</span>}\r\n                        >\r\n                          <TextArea\r\n                            disabled={!editIntroduce}\r\n                            rows={4}\r\n                            placeholder='Giới thiệu bác sĩ'\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Form.Item\r\n                          name={'note'}\r\n                          label={<span className='txt_label'>Ghi chú</span>}\r\n                        >\r\n                          <TextArea\r\n                            disabled={!editIntroduce}\r\n                            rows={4}\r\n                            placeholder='Ghi chú'\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={24}>\r\n                        <Form.Item\r\n                          name={'description'}\r\n                          label={<span className='txt_label'>Mô tả bác sĩ</span>}\r\n                        >\r\n                          <ReactQuill\r\n                            readOnly={!editIntroduce}\r\n                            className={!editIntroduce ? 'react_quill_disable' : ''}\r\n                            theme=\"snow\"\r\n                            placeholder=\"Mô tả\"\r\n                            modules={modulesQill}\r\n                            formats={formats}\r\n                            // bounds={'#root'}\r\n                            style={{ height: \"500px\" }}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      {editIntroduce && doctorInforId && (\r\n                        <div style={{ textAlign: 'center', marginTop: '30px', width: '100%' }}>\r\n                          <Col span={24} style={{ textAlign: 'center', marginTop: '20px !important' }}>\r\n                            <Button className='btn_cancel' danger size='middle' onClick={() => setEditIntroduce(false)}>\r\n                              Hủy chỉnh sửa\r\n                            </Button>\r\n                            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                              Cập nhật\r\n                            </Button>\r\n                          </Col>\r\n                        </div>\r\n                      )}\r\n\r\n                      {editIntroduce && !doctorInforId && (\r\n                        <div style={{ textAlign: 'center', marginTop: '30px', width: '100%' }}>\r\n                          <Col span={24} >\r\n                            <Button className='btn_cancel' danger size='middle' onClick={() => setEditIntroduce(false)}>\r\n                              Hủy\r\n                            </Button>\r\n                            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                              Thêm\r\n                            </Button>\r\n                          </Col>\r\n                        </div>\r\n                      )}\r\n\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Tabs.TabPane>\r\n          </Tabs>\r\n\r\n        </>\r\n      )}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DetailDoctor;","import { LockOutlined, PlusCircleOutlined, SearchOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport { Alert, Button, Input, Modal, Space, Switch, Table } from 'antd';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './index.scss';\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport DoctorApis from '../../../../../apis/Doctor';\r\nimport SpecialtyApis from '../../../../../apis/Specialty';\r\nimport UserApis from '../../../../../apis/User';\r\nimport FilterObjDropDown from '../../../../../components/Filter/FilterObjDropDown';\r\nimport Stroke from '../../../../../components/Icon/CareStaff/Stoke';\r\nimport FilterIcon from '../../../../../components/Icon/Doctor/FilterIcon';\r\nimport CreateDoctor from '../../../../Doctor/components/CreateDoctor';\r\n\r\nconst listRole = [\r\n  {\r\n    id: 'HEAD_OF_DOCTOR',\r\n    name: 'Trưởng khoa'\r\n  },\r\n  {\r\n    id: 'DOCTOR',\r\n    name: 'Bác sĩ'\r\n  },\r\n  {\r\n    id: 'MANAGER_CLINIC',\r\n    name: 'Quản lý phòng khám'\r\n  }\r\n]\r\n\r\nconst role = {\r\n  HEAD_OF_DOCTOR: 'Trưởng khoa',\r\n  DOCTOR: 'Bác sĩ',\r\n  MANAGER_CLINIC: 'Quản lý phòng khám',\r\n}\r\n\r\nconst listStatus = [\r\n  {\r\n    id: 0,\r\n    name: 'Khoá'\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Kích hoạt'\r\n  },\r\n]\r\n\r\nconst TableDoctor = ({ clinicId }) => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const typingSearch = useRef(null);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [isModalCreate, setModalCreate] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [listSpecialty, setListSpecialty] = useState([]);\r\n  const [checkedList, setCheckedList] = useState({\r\n    role: [],\r\n    status: [],\r\n    specialty: [],\r\n  })\r\n  const [listDoctor, setListDoctor] = useState([]);\r\n  const [dataResponse, setDataResponse] = useState({});\r\n  const [showBtn, setShowBtn] = useState([]);\r\n  const [isShowModalDelete, setShowModalDelete] = useState(false);\r\n  let location = useLocation();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!isModalCreate && !isShowModalDelete && clinicId)\r\n      getListDoctor();\r\n  }, [checkedList, pagination, isModalCreate, isShowModalDelete, search])\r\n\r\n\r\n  const getListDoctor = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const dataRes = await DoctorApis.getListDoctor({\r\n        page: pagination.page,\r\n        take: pagination.pageSize,\r\n        status: checkedList.status || undefined,\r\n        role: checkedList.role.length ? checkedList.role : ['DOCTOR', 'MANAGER_CLINIC', 'HEAD_OF_DOCTOR'],\r\n        clinicId: clinicId,\r\n        specialtyIds: checkedList.specialty || undefined,\r\n        q: search || undefined,\r\n      })\r\n      if (dataRes?.data?.data) {\r\n        const { data } = dataRes?.data;\r\n        const listDoctor = data.map(item => {\r\n          const name = `${item.firstName ? item.firstName : ''} ${item.middleName ? item.middleName : ''} ${item.lastName ? item.lastName : ''}`;\r\n          return {\r\n            id: item.id,\r\n            status: item.status,\r\n            name: name,\r\n            email: item.email || '',\r\n            gender: item.gender === 'FEMALE' ? 'Nữ' : item.gender === 'MALE' ? 'Nam' : 'Khác' || '',\r\n            birthday: item.birthday ? moment(item.birthday).format('DD/MM/YYYY') : '',\r\n            phoneNumber: item.phoneNumber || '',\r\n            role: item.role ? role[item.role] : '',\r\n            clinic: item.clinic ? item.clinic.name : '',\r\n            specialty: item.specialty ? item.specialty.name : '',\r\n          }\r\n        })\r\n        setListDoctor(listDoctor || []);\r\n        setDataResponse(dataRes?.data ? dataRes?.data : {});\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('erroe: ', error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getListSpecialty();\r\n  }, [])\r\n\r\n  const getListSpecialty = async () => {\r\n    try {\r\n      const dataSpecialty = await SpecialtyApis.getListSpecialty({\r\n        pages: 1,\r\n        take: 100,\r\n      });\r\n      if (dataSpecialty?.data?.data) {\r\n        const { data } = dataSpecialty?.data;\r\n        const listSpecialty = data?.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item?.name,\r\n          }\r\n        })\r\n\r\n        setListSpecialty(listSpecialty || []);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setListSpecialty([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const checkShow = [];\r\n    selectedRowKeys.forEach((item) => {\r\n      const label = listDoctor?.find((elm) => elm.id === item);\r\n      if (label) checkShow.push(label);\r\n    });\r\n    const btnArray = [];\r\n    if (checkShow.some((item) => item.status === true)) {\r\n      btnArray.push(\r\n        <Button\r\n          className='btn_active'\r\n          icon={<LockOutlined style={{ transform: 'translateY(-1px)' }} />}\r\n          onClick={() => {\r\n            handleChangeStatus({\r\n              userIds: selectedRowKeys,\r\n              status: false,\r\n            })\r\n          }}\r\n        >\r\n          <span className='ml_8'>Khoá tất cả</span>\r\n        </Button>,\r\n      );\r\n    }\r\n    if (checkShow.some((item) => item.status === false)) {\r\n      btnArray.push(\r\n        <Button\r\n          className='btn_active'\r\n          icon={<UnlockOutlined style={{ transform: 'translateY(-1px)' }} />}\r\n          onClick={() => {\r\n            handleChangeStatus({\r\n              userIds: selectedRowKeys,\r\n              status: true,\r\n            })\r\n          }}\r\n        >\r\n          <span className='ml_8'>Mở tất cả</span>\r\n        </Button>,\r\n      );\r\n    }\r\n\r\n    setShowBtn([...btnArray]);\r\n  }, [selectedRowKeys]);\r\n\r\n  const handleChangeStatus = async ({ userIds, status }) => {\r\n    try {\r\n      const dataRes = await UserApis.changeStatus({ userIds, status });\r\n      if (dataRes?.data === true && dataRes?.status === 200) {\r\n        toast.success('Thay đổi trạng thái thành công!');\r\n        getListDoctor();\r\n        setSelectedRowKeys([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Thay đổi trạng thái không thành công!');\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 50,\r\n      align: 'center',\r\n      render: (_, record) => (\r\n        <Switch\r\n          checked={record?.status === true}\r\n          onChange={() => handleChangeStatus({\r\n            userIds: [record.id],\r\n            status: record.status === true ? false : true\r\n          })}\r\n        />\r\n      ),\r\n      fixed: true,\r\n    },\r\n    {\r\n      title: 'Họ tên',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      ellipsis: true,\r\n      width: 100,\r\n      fixed: true,\r\n      render: (_, record) => (\r\n        <div\r\n          style={{\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => {\r\n            console.log('location', location);\r\n            const pathName = location.pathname.split('/').slice(0, 2).join('/');\r\n            console.log('pathName', pathName);\r\n            history.push(`${pathName}/quan-ly-bac-si/chi-tiet/${record.id}`)\r\n          }}\r\n        >\r\n          {record.name}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Giới tính',\r\n      dataIndex: 'gender',\r\n      key: 'gender',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Ngày sinh',\r\n      dataIndex: 'birthday',\r\n      key: 'birthday',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phoneNumber',\r\n      key: 'phoneNumber',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Vai trò',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Chuyên khoa',\r\n      dataIndex: 'specialty',\r\n      key: 'specialty',\r\n      ellipsis: true,\r\n      width: 100,\r\n    }\r\n  ]\r\n\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const handleCheck = (key, value) => {\r\n    setCheckedList({\r\n      ...checkedList,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckAll = (key, value) => {\r\n    setCheckedList({\r\n      ...checkedList,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (typingSearch.current) {\r\n      clearTimeout(typingSearch.current);\r\n    }\r\n    typingSearch.current = setTimeout(() => {\r\n      setSearch(e.target.value);\r\n    }, 500)\r\n  }\r\n\r\n  const handleDeleteDoctor = async () => {\r\n    try {\r\n      if (selectedRowKeys.length > 0) {\r\n        const dataRes = await UserApis.deleteUser({\r\n          userIds: selectedRowKeys,\r\n        })\r\n        if (dataRes?.data === true && dataRes?.status === 200) {\r\n          toast.success('Xoá bác sĩ thành công');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Xoá bác sĩ không thành công!');\r\n    }\r\n    setShowModalDelete(false);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header_doctor\">\r\n        <Space>\r\n          <Button\r\n            id={'btn__filter'}\r\n            icon={\r\n              <FilterIcon\r\n                style={{\r\n                  transform: 'translateY(2px)',\r\n                  fill: `${showFilter ? '#3863EF' : 'none'}`,\r\n                }}\r\n              />\r\n            }\r\n            onClick={() => setShowFilter(!showFilter)}\r\n          />\r\n          <Input\r\n            className='search_doctor'\r\n            size=\"large\"\r\n            placeholder=\"Tìm kiếm\"\r\n            suffix={<SearchOutlined />}\r\n            onChange={(e) => handleSearch(e)}\r\n          />\r\n        </Space>\r\n\r\n        <div className='list_button'>\r\n          <Button\r\n            className='button'\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => setModalCreate(true)}\r\n          >\r\n            Thêm mới\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bộ lọc */}\r\n      {showFilter && (\r\n        <Space\r\n          size={24}\r\n          style={{ marginTop: '10px', marginBottom: '20px', color: 'rgba(17, 17, 17, 0.45)' }}\r\n        >\r\n          <FilterObjDropDown\r\n            displayName={'Trạng thái'}\r\n            placeholder={'Trạng thái'}\r\n            placeholderSearch={false}\r\n            plainOptions={listStatus || []}\r\n            checkedList={checkedList.status}\r\n            keyFilter={'status'}\r\n            handleCheckAll={handleCheckAll}\r\n            handleCheck={handleCheck}\r\n          />\r\n          <FilterObjDropDown\r\n            displayName={'Vai trò'}\r\n            placeholder={'Vai trò'}\r\n            placeholderSearch={false}\r\n            plainOptions={listRole || []}\r\n            checkedList={checkedList.role}\r\n            keyFilter={'role'}\r\n            handleCheckAll={handleCheckAll}\r\n            handleCheck={handleCheck}\r\n          />\r\n\r\n          <FilterObjDropDown\r\n            displayName={'Chuyên khoa'}\r\n            placeholder={'Chuyên khoa'}\r\n            placeholderSearch={false}\r\n            plainOptions={listSpecialty || []}\r\n            checkedList={checkedList.specialty}\r\n            keyFilter={'specialty'}\r\n            handleCheckAll={handleCheckAll}\r\n            handleCheck={handleCheck}\r\n          />\r\n\r\n        </Space>\r\n      )}\r\n\r\n      {selectedRowKeys.length > 0 && (\r\n        <Alert\r\n          className='fontSizeAlert'\r\n          message={\r\n            <div>\r\n              <Space>\r\n                <span>Đã chọn: {selectedRowKeys.length}</span>\r\n\r\n                {showBtn}\r\n\r\n                <Button\r\n                  className='btn_active'\r\n                  icon={<Stroke className='transformY_2' />}\r\n                  onClick={() => {\r\n                    setShowModalDelete(true);\r\n                  }}\r\n                >\r\n                  <span className='ml_8'>Xóa</span>\r\n                </Button>\r\n              </Space>\r\n            </div>\r\n          }\r\n        />\r\n      )}\r\n\r\n      <Table\r\n        loading={loading}\r\n        rowKey={'id'}\r\n        dataSource={listDoctor}\r\n        columns={columns}\r\n        rowSelection={{\r\n          selectedRowKeys,\r\n          onChange: onSelectChange\r\n        }}\r\n        pagination={{\r\n          current: dataResponse?.meta?.page || 1, // so trang\r\n          total: dataResponse?.meta?.itemCount || 10, // tong tat ca \r\n          defaultPageSize: dataResponse?.meta?.take || 10,\r\n          showSizeChanger: true,\r\n          pageSizeOptions: ['10', '20', '50', '100'],\r\n          locale: { items_per_page: ' kết quả/trang' },\r\n          onChange: (page, pageSize) => {\r\n            setPagination({\r\n              ...pagination,\r\n              page,\r\n              pageSize,\r\n            });\r\n          },\r\n        }}\r\n      // scroll={{ x: 'max-content' }}\r\n      />\r\n\r\n      <CreateDoctor\r\n        isShowModal={isModalCreate}\r\n        handleCancelModal={() => setModalCreate(false)}\r\n      />\r\n\r\n      <Modal\r\n        open={isShowModalDelete}\r\n        onOk={handleDeleteDoctor}\r\n        onCancel={() => setShowModalDelete(false)}\r\n        cancelText={'Hủy'}\r\n        okText={'Xóa'}\r\n        className='confirm_delete_label'\r\n        width={370}\r\n      >\r\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\r\n          Bạn có muốn xóa bác sĩ?\r\n        </h2>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableDoctor;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, Form, Input, message, Row, Select, Spin, Upload } from \"antd\";\r\nimport SpecialtyApis from \"../../../../../apis/Specialty\";\r\nimport './index.scss';\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport baseURL from \"../../../../../utils/url\";\r\nimport { toast } from \"react-toastify\";\r\nimport ClinicApis from \"../../../../../apis/Clinic\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst TabClinicInformation = ({ dataClinic }) => {\r\n  const [loading, setLoading] = useState('false');\r\n  const [editInformation, setEditInformation] = useState(false);\r\n  const [optionsSpecialty, setOptionsSpecialty] = useState([]);\r\n  const [fileListImage, setFileListImage] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getListSpecialty();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataClinic).length) {\r\n      form.setFieldsValue({\r\n        name: dataClinic.name || null,\r\n        email: dataClinic.email || null,\r\n        phone: dataClinic.phone || null,\r\n        address: dataClinic.address || null,\r\n        province: dataClinic.province || null,\r\n        specialties: dataClinic?.specialties\r\n          ? dataClinic?.specialties.map(item => item.id) : [],\r\n      });\r\n      setFileListImage(dataClinic?.image ? [{\r\n        uid: '-1',\r\n        name: 'image.jpg',\r\n        status: 'done',\r\n        url: `${baseURL}${dataClinic.image}`,\r\n      }] : [])\r\n    }\r\n\r\n    return () => {\r\n      form.resetFields();\r\n    };\r\n  }, [dataClinic])\r\n\r\n  const getListSpecialty = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const dataSpecialty = await SpecialtyApis.getListSpecialty({\r\n        pages: 1,\r\n        take: 100,\r\n      });\r\n      if (dataSpecialty?.data?.data) {\r\n        const { data } = dataSpecialty?.data;\r\n        const listSpecialty = data?.map(item => {\r\n          return {\r\n            id: item.id,\r\n            name: item?.name,\r\n          }\r\n        })\r\n\r\n        setOptionsSpecialty(listSpecialty || []);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setOptionsSpecialty([]);\r\n      form.setFieldsValue({\r\n        specialtyId: undefined\r\n      })\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const onChangeImage = ({ fileList: newFileList }) => {\r\n    setFileListImage(newFileList);\r\n  };\r\n\r\n  const handleUpdateClinic = async (values) => {\r\n    setLoading(true);\r\n    let newData = [];\r\n    if (values.image === dataClinic.image || (!values.image) || (values.image && values?.image?.fileList?.length === 0)) {\r\n      const { image, ...resData } = values;\r\n      newData = {\r\n        ...resData,\r\n        specialties: JSON.stringify(resData.specialties),\r\n      }\r\n    } else if (values?.image?.fileList?.length > 0) {\r\n      const fileSize = values?.image?.fileList[0]?.size;\r\n      const isLt2M = fileSize / 1024 / 1024 < 2;\r\n      // console.log('isLt2M: ', isLt2M);\r\n      if (!isLt2M) {\r\n        message.error('Chọn ảnh nhỏ hơn 2MB!');\r\n        return;\r\n      }\r\n      let formData = new FormData();\r\n      for (const item in values) {\r\n        if (item === 'image') {\r\n          formData.append('file', values[item].fileList[0]?.originFileObj);\r\n        } else if (item === 'specialties') {\r\n          formData.append(item, JSON.stringify(values[item]));\r\n        } else if (!values[item]) break;\r\n        else {\r\n          formData.append(item, values[item]);\r\n        }\r\n      }\r\n      // formData.append('file', avatar?.fileList[0]?.originFileObj);\r\n      newData = formData;\r\n    }\r\n\r\n    try {\r\n      const dataUpdateRes = await ClinicApis.updateClinic(newData, dataClinic.id);\r\n      if (dataUpdateRes.status === 200) {\r\n        setLoading(false);\r\n        toast.success('Cập nhật thông tin phòng khám thành công');\r\n        setEditInformation(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n      toast.error('Cập nhật thông tin phòng khám không thành công!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"spin\">\r\n          <Spin />\r\n        </div>\r\n\r\n      ) : (\r\n        <>\r\n          <div className=\"header_clinic_information\">\r\n            <div style={{ fontSize: '17px' }}>Thông tin phòng khám</div>\r\n            <div className=\"button_edit\">\r\n              {!editInformation && (\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => setEditInformation(true)}\r\n                >\r\n                  Chỉnh sửa thông tin phòng khám\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form_clinic_information\">\r\n            <Form\r\n              name='clinic_information'\r\n              onFinish={(values) => handleUpdateClinic(values)}\r\n              autoComplete='off'\r\n              layout='vertical'\r\n              form={form}\r\n            >\r\n              <Row gutter={24}>\r\n                <Col span={18}>\r\n                  <Form.Item\r\n                    name={'name'}\r\n                    label={<span className='txt_label'>Tên phòng khám</span>}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Tên phòng khám không được để trống',\r\n                      }\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      disabled={!editInformation}\r\n                      size='middle'\r\n                      className='txt_input'\r\n                      placeholder={dataClinic?.name ? 'Tên phòng khám' : 'Không có thông tin'} />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                  <Form.Item\r\n                    name={'image'}\r\n                    label={<span className='txt_label'>Ảnh phòng khám</span>}\r\n                  >\r\n                    <Upload\r\n                      disabled={!editInformation}\r\n                      listType=\"picture-card\"\r\n                      fileList={fileListImage}\r\n                      beforeUpload={() => false}\r\n                      onChange={onChangeImage}\r\n                      maxCount={1}\r\n                    >\r\n                      <div>\r\n                        <PlusOutlined />\r\n                        <div style={{ marginTop: 8 }}>Upload</div>\r\n                      </div>\r\n                    </Upload>\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name={'email'}\r\n                    label={<span className='txt_label'>Email</span>}\r\n                    rules={[\r\n                      { max: 255, message: 'Email tối đa 255 ký tự!' },\r\n                      {\r\n                        required: true,\r\n                        message: 'Email không được để trống',\r\n                      },\r\n                      {\r\n                        validator: (_, value) => {\r\n                          const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\r\n                          if ((regex.test(value) && value)) {\r\n                            return Promise.resolve();\r\n                          } else {\r\n                            return Promise.reject('Email không đúng định dạng');\r\n                          }\r\n                        },\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      disabled={!editInformation}\r\n                      size='middle'\r\n                      className='txt_input'\r\n                      placeholder={dataClinic?.email ? 'Email' : 'Không có thông tin'} />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name={'phone'}\r\n                    label={<span className='txt_label'>Số điện thoại</span>}\r\n                    rules={[\r\n                      {\r\n                        max: 20,\r\n                        message: 'Số điện thoại tối đa 20 ký tự',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      disabled={!editInformation}\r\n                      className='txt_input'\r\n                      size='middle'\r\n                      placeholder={dataClinic?.phone ? 'Số điện thoại' : 'Không có thông tin'}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={16}>\r\n                  <Form.Item\r\n                    name={'address'}\r\n                    label={<span className='txt_label'>Địa chỉ</span>}\r\n                  // rules={[\r\n                  //   {\r\n                  //     max: 20,\r\n                  //     message: 'Số điện thoại tối đa 20 ký tự',\r\n                  //   },\r\n                  // ]}\r\n                  >\r\n                    <Input\r\n                      disabled={!editInformation}\r\n                      className='txt_input'\r\n                      size='middle'\r\n                      placeholder={dataClinic?.address ? 'Địa chỉ' : 'Không có thông tin'}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Form.Item\r\n                    name={'province'}\r\n                    label={<span className='txt_label'>Tỉnh/Thành phố</span>}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Tỉnh/Thành phố không được để trống',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      disabled={!editInformation}\r\n                      className='txt_input'\r\n                      size='middle'\r\n                      placeholder={dataClinic?.province ? 'Tỉnh/Thành phố' : 'Không có thông tin'}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n\r\n                <Col span={24}>\r\n                  <Form.Item\r\n                    name={'specialties'}\r\n                    label={<span className='txt_label'>Chuyên khoa</span>}\r\n                  // rules={[\r\n                  //   {\r\n                  //     required: true,\r\n                  //     message: 'Giới tính không được để trống',\r\n                  //   },\r\n                  // ]}\r\n                  >\r\n                    <Select\r\n                      mode='multiple'\r\n                      allowClear\r\n                      disabled={!editInformation}\r\n                      showArrow\r\n                      style={{ width: '100%' }}\r\n                      size='middle'\r\n                      placeholder={dataClinic?.specialties ? 'Chọn chuyên khoa' : 'Không có thông tin'}\r\n                      className='txt_input'\r\n                      // defaultValue={}\r\n                      filterOption={(input, option) =>\r\n                        option?.children !== null && option?.children?.toLowerCase().includes(input.trim().toLowerCase())\r\n                      }\r\n                    >\r\n                      {optionsSpecialty.length && optionsSpecialty.map((item) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              {editInformation && (\r\n                <Col span={24} style={{ textAlign: 'center' }}>\r\n                  <Button className='btn_cancel' danger size='middle' onClick={() => setEditInformation(false)}>\r\n                    Hủy chỉnh sửa\r\n                  </Button>\r\n                  <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                    Cập nhật\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TabClinicInformation;","import { Button, Col, Form, Input, Row, Select, Spin } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { toast } from \"react-toastify\";\r\nimport ClinicApis from \"../../../../../apis/Clinic\";\r\nimport './index.scss';\r\n\r\nconst modulesQill = {\r\n  toolbar: [\r\n    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n    [{ size: [] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n    { 'indent': '-1' }, { 'indent': '+1' }],\r\n    ['link', 'image', 'video'],\r\n    ['clean']\r\n  ],\r\n  clipboard: {\r\n    matchVisual: false,\r\n  },\r\n  history: {\r\n    delay: 1000,\r\n    maxStack: 50,\r\n    userOnly: false\r\n  },\r\n  // imageResize: {\r\n  // displayStyles: {\r\n  //   backgroundColor: 'black',\r\n  //   border: 'none',\r\n  //   color: 'white'\r\n  // },\r\n  // modules: ['Resize', 'DisplaySize', 'Toolbar']\r\n  // },\r\n}\r\nconst formats = [\r\n  'header', 'font', 'size',\r\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent',\r\n  'link', 'image', 'video'\r\n]\r\n\r\n\r\nconst TabClinicIntroduce = ({ dataClinicIntroduce, clinicId }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [editIntroduce, setEditIntroduce] = useState(false)\r\n  const [form] = Form.useForm();\r\n\r\n  console.log('dataClinicIntroduce: ', dataClinicIntroduce);\r\n  useEffect(() => {\r\n    if (Object.keys(dataClinicIntroduce).length) {\r\n      form.setFieldsValue({\r\n        introduct: dataClinicIntroduce?.introduct || null,\r\n        strengths: dataClinicIntroduce?.strengths || null,\r\n        equipment: dataClinicIntroduce?.equipment || null,\r\n        location: dataClinicIntroduce?.location || null,\r\n        procedure: dataClinicIntroduce?.procedure || null,\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      form.resetFields();\r\n    };\r\n  }, [dataClinicIntroduce])\r\n\r\n  const handleClinicIntroduce = async (values) => {\r\n    setLoading(true);\r\n    if (Object.keys(dataClinicIntroduce).length && clinicId) {\r\n      try {\r\n        const clinicInforRes = await ClinicApis.updateClinicIntroduct(dataClinicIntroduce.id, values);\r\n        if (clinicInforRes?.status === 200) {\r\n          toast.success('Thay đổi thông tin giới thiệu phòng khám thành công');\r\n          setLoading(false);\r\n          setEditIntroduce(false);\r\n        }\r\n      } catch (error) {\r\n        console.log('error: ', error);\r\n        toast.error('Thay đổi thông tin giới thiệu phòng khám không thành công!');\r\n        setLoading(false);\r\n      }\r\n    } else if (!Object.keys(dataClinicIntroduce).length && clinicId) {\r\n      try {\r\n        const clinicInforRes = await ClinicApis.createClinicIntroduct({\r\n          ...values,\r\n          clinicId: clinicId,\r\n        });\r\n        if (clinicInforRes?.status === 200) {\r\n          toast.success('Thêm giới thiệu phòng khám thành công');\r\n          setLoading(false);\r\n          setEditIntroduce(false);\r\n        }\r\n      } catch (error) {\r\n        console.log('error: ', error);\r\n        toast.error('Thêm giới thiệu phòng khám không thành công!');\r\n        setLoading(false);\r\n      }\r\n\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"spin\">\r\n          <Spin />\r\n        </div>\r\n\r\n      ) : (\r\n        <>\r\n          <div className=\"header_clinic_introduce\">\r\n            <div style={{ fontSize: '17px' }}>Thông tin phòng khám</div>\r\n            <div className=\"button_edit\">\r\n              {!editIntroduce && (\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => setEditIntroduce(true)}\r\n                >\r\n                  {Object.keys(dataClinicIntroduce).length ? 'Chỉnh sửa thông tin' : 'Thêm giới thiệu phòng khám'}\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form_clinic_introduce\">\r\n            <Form\r\n              name='clinic_information'\r\n              onFinish={(values) => handleClinicIntroduce(values)}\r\n              autoComplete='off'\r\n              layout='vertical'\r\n              form={form}\r\n            >\r\n              <Row gutter={24}>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name={'introduct'}\r\n                    label={<span className='txt_label'>Giới thiệu phòng khám</span>}\r\n                  >\r\n                    <ReactQuill\r\n                      // disabled={!editIntroduce}\r\n                      readOnly={!editIntroduce}\r\n                      className={!editIntroduce ? 'react_quill_disable' : ''}\r\n                      theme=\"snow\"\r\n                      placeholder=\"Giới thiệu phòng khám\"\r\n                      modules={modulesQill}\r\n                      formats={formats}\r\n                      // bounds={'#root'}\r\n                      style={{ height: \"500px\" }}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name={'strengths'}\r\n                    label={<span className='txt_label'>Thế mạnh chuyên môn</span>}\r\n                  >\r\n                    <ReactQuill\r\n                      readOnly={!editIntroduce}\r\n                      className={!editIntroduce ? 'react_quill_disable' : ''}\r\n                      theme=\"snow\"\r\n                      placeholder=\"Thế mạnh chuyên môn\"\r\n                      modules={modulesQill}\r\n                      formats={formats}\r\n                      // bounds={'#root'}\r\n                      style={{ height: \"500px\" }}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name={'equipment'}\r\n                    label={<span className='txt_label'>Trang thiết bị</span>}\r\n                  >\r\n                    <ReactQuill\r\n                      readOnly={!editIntroduce}\r\n                      className={!editIntroduce ? 'react_quill_disable' : ''}\r\n                      theme=\"snow\"\r\n                      placeholder=\"Trang thiết bị\"\r\n                      modules={modulesQill}\r\n                      formats={formats}\r\n                      // bounds={'#root'}\r\n                      style={{ height: \"500px\" }}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name={'location'}\r\n                    label={<span className='txt_label'>Vị trí</span>}\r\n                  >\r\n                    <ReactQuill\r\n                      readOnly={!editIntroduce}\r\n                      className={!editIntroduce ? 'react_quill_disable' : ''}\r\n                      theme=\"snow\"\r\n                      placeholder=\"Vị trí\"\r\n                      modules={modulesQill}\r\n                      formats={formats}\r\n                      // bounds={'#root'}\r\n                      style={{ height: \"500px\" }}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={24}>\r\n                  <Form.Item\r\n                    name={'procedure'}\r\n                    label={<span className='txt_label'>Quy trình khám</span>}\r\n                  >\r\n                    <ReactQuill\r\n                      readOnly={!editIntroduce}\r\n                      className={!editIntroduce ? 'react_quill_disable' : ''}\r\n                      theme=\"snow\"\r\n                      placeholder=\"Quy trình khám\"\r\n                      modules={modulesQill}\r\n                      formats={formats}\r\n                      // bounds={'#root'}\r\n                      style={{ height: \"500px\" }}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              {editIntroduce && (\r\n                <Col span={24} style={{ textAlign: 'center' }}>\r\n                  <Button className='btn_cancel' danger size='middle' onClick={() => setEditIntroduce(false)}>\r\n                    {dataClinicIntroduce && Object.keys(dataClinicIntroduce).length ? 'Hủy chỉnh sửa' : 'Hủy thêm'}\r\n                  </Button>\r\n                  <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                    {dataClinicIntroduce && Object.keys(dataClinicIntroduce).length ? 'Cập nhật' : 'Thêm'}\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TabClinicIntroduce;","import { Space, Spin, Tabs } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ClinicApis from '../../../../apis/Clinic';\r\nimport BackIcon from '../../../../components/Icon/Common/BackIcon';\r\nimport TableDoctor from './TableDoctor';\r\n\r\nimport './index.scss';\r\nimport TabClinicInformation from './TabClinicInformation';\r\nimport TabClinicIntroduce from './TabClinicIntroduce';\r\n\r\n\r\nconst DetailClinic = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataClinic, setDataClinic] = useState({});\r\n\r\n  let { clinicId } = useParams();\r\n\r\n  console.log('clinicId: ', clinicId);\r\n\r\n  useEffect(() => {\r\n    document.title = 'Thông tin phòng khám';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (clinicId)\r\n      getClinic(clinicId);\r\n  }, [clinicId])\r\n\r\n  const getClinic = async (clinicId) => {\r\n    setLoading(true);\r\n    try {\r\n      const dataResClinic = await ClinicApis.getClinicById(clinicId);\r\n      if (dataResClinic?.status === 200) {\r\n        setDataClinic(dataResClinic?.data || {});\r\n        setLoading(false)\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n  }\r\n\r\n  const handleBack = () => {\r\n    // const partName = location.pathname.split('/').slice(0, 3).join('/');\r\n    // console.log('partName: ', partName);\r\n    // history.push(partName);\r\n    window.history.back();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"spin\">\r\n          <Spin />\r\n        </div>\r\n\r\n      ) : (\r\n        <>\r\n          <div className='header_detail_clinic'>\r\n            <Space>\r\n              <BackIcon\r\n                onClick={handleBack}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  height: '100%'\r\n                }}\r\n              />\r\n              <span className='name_clinic'>\r\n                {dataClinic.name || ''}\r\n              </span>\r\n            </Space>\r\n          </div>\r\n\r\n          <Tabs defaultActiveKey='table_doctor'>\r\n            <Tabs.TabPane tab=\"Danh sách bác sĩ\" key=\"table_doctor\">\r\n              <TableDoctor clinicId={clinicId} />\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane tab=\"Thông tin phòng khám\" key=\"clinic_information\">\r\n              <TabClinicInformation dataClinic={dataClinic || {}} />\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane tab=\"Giới thiệu về phòng khám\" key=\"clinic_introduce\">\r\n              <TabClinicIntroduce\r\n                dataClinicIntroduce={dataClinic?.clinicInfor || {}}\r\n                clinicId={clinicId}\r\n              />\r\n            </Tabs.TabPane>\r\n          </Tabs>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DetailClinic;","import axios from \"axios\";\nimport requestClient from \"../RequestClient\";\n\nconst AuthApis = {\n  login(data) {\n    const urlParam = 'auth/login';\n    const instance = axios.create({\n      baseURL: \"http://14.225.255.59:8000/\",\n      // baseURL: \"http://localhost:8000/\",\n    })\n    return instance.post(urlParam, data);\n  },\n\n  authMe() {\n    const urlParam = 'auth/me';\n    // console.log('authme');\n    const instance = axios.create({\n      baseURL: \"http://14.225.255.59:8000/\",\n      // baseURL: \"http://localhost:8000/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n      },\n    })\n    return instance.get(urlParam);\n  },\n\n  resetPassViaEmail(data) {\n    const urlParam = 'auth/reset-password-via-mail';\n    return requestClient.post(urlParam, data);\n  },\n\n  changePassword(data) {\n    const urlParam = 'auth/change-password';\n    return requestClient.post(urlParam, data);\n  }\n};\n\nexport default AuthApis;","import { Avatar, Badge, Button, Col, DatePicker, Form, Input, message, Row, Select, Space, Spin, Typography, Upload } from \"antd\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport UserApis from \"../../../apis/User\";\nimport baseURL from \"../../../utils/url\";\nimport { listGender } from '../../../common/constants/gender';\nimport './InformationAdmin.scss';\nimport { useEffect } from \"react\";\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\n\n\nconst InformationAdmin = ({ dataUser, handleReset }) => {\n  const [loadingAvatar, setLoadingAvatar] = useState(false);\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\n  const [editInformation, setEditInformation] = useState(false);\n\n  const [form] = Form.useForm();\n\n  // const props = {\n  //   beforeUpload: file => {\n  //     console.log('file: ', file);\n  //     const listType = ['image/jpeg', 'image/png', 'image/jpg'];\n  //     const checkType = listType.includes(file.type)\n\n  //     if (!checkType) {\n  //       message.error(`Không đúng định dạng ảnh`);\n  //       return;\n  //     }\n  //     return checkType;\n  //   },\n  //   onChange: info => {\n  //     console.log('onchange: ', info.fileList);\n  //   },\n  // };\n\n  useEffect(() => {\n    if (dataUser) {\n      form.setFieldsValue({\n        firstName: dataUser?.firstName || '',\n        middleName: dataUser?.middleName || '',\n        lastName: dataUser?.lastName || '',\n        email: dataUser?.email || '',\n        gender: dataUser?.gender || null,\n        phoneNumber: dataUser?.phoneNumber || null,\n        birthday: dataUser?.birthday ? moment(dataUser?.birthday) : null,\n        address: dataUser?.address || '',\n        role: dataUser.role || '',\n        religion: dataUser?.religion || '',\n        nation: dataUser?.nation || '',\n        identityCardNumber: dataUser?.identityCardNumber || '',\n      })\n    }\n  }, [dataUser])\n\n  const handleUploadAvatar = async ({ file, fileList }) => {\n    setLoadingAvatar(true);\n    console.log('file: ', file);\n    console.log('fileList: ', fileList);\n    const listType = ['image/jpeg', 'image/png', 'image/jpg'];\n    const checkType = listType.includes(file.type)\n\n    if (!checkType) {\n      message.error(`Không đúng định dạng ảnh`);\n      return;\n    }\n\n    const fileSize = file?.size;\n    const isLt2M = fileSize / 1024 / 1024 < 2;\n    // console.log('isLt2M: ', isLt2M);\n    if (!isLt2M) {\n      message.error('Chọn ảnh nhỏ hơn 2MB!');\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', fileList[0]?.originFileObj);\n\n      const data = await UserApis.changeAvatar(formData);\n      if (data?.status === 200 && data?.data) {\n        toast.success('Thay đổi ảnh đại diện thành công');\n        setLoadingAvatar(false);\n        handleReset();\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      toast.success('Thay đổi ảnh đại diện không thành công');\n      setLoadingAvatar(false);\n    }\n  }\n\n  const handleSubmitStaff = async (values) => {\n    setLoadingUpdate(true)\n    try {\n      const dataUpdate = await UserApis.updateUser(values, dataUser.id);\n      if (dataUpdate.status === 200 && dataUpdate?.data) {\n        setLoadingUpdate(false);\n        toast.success('Cập nhật thông tin nhân viên thành công');\n        setEditInformation(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\n        toast.error('Bác sĩ đã tồn tại!');\n        return;\n      }\n      setLoadingUpdate(false);\n      toast.error('Cập nhật thông tin không thành công!');\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"info_admin_avatar\">\n        <Space align='center'>\n          <Badge\n            offset={[-10, 66]}\n          >\n            {loadingAvatar ? (\n              <Spin className='spin-avatar' />\n            ) : (\n              <Form.Item\n                noStyle\n                shouldUpdate={(prev, cur) => {\n                  return prev.avatar !== cur.avatar;\n                }}\n              >\n                <Avatar\n                  src={`${baseURL}${dataUser.avatar}`}\n                  size={80}\n                  style={{ fontSize: '26px' }}\n                >\n                  {dataUser?.lastName?.[0]?.toUpperCase()}\n                </Avatar>\n\n              </Form.Item>\n            )}\n          </Badge>\n          <Space direction='vertical' size={0} style={{ marginLeft: '10px' }}>\n            <Title level={5} style={{ color: 'rgba(17, 17, 17, 0.75)', fontWeight: 600 }}>\n              Ảnh đại diện\n            </Title>\n            {/* <label htmlFor='upload-input'>\n                  <Text style={{ color: '#3863EF', fontWeight: 500, cursor: 'pointer' }} underline>\n                    Thay ảnh ...\n                  </Text>\n                </label> */}\n            <Upload\n              // {...props}\n              // listType=\"picture-card\"\n              maxCount={1}\n              showUploadList={false}\n              multiple={false}\n              beforeUpload={() => false}\n              onChange={handleUploadAvatar}\n            >\n              <span\n                style={{\n                  color: '#3863EF',\n                  fontWeight: 500,\n                  cursor: 'pointer'\n                }}\n              >Thay ảnh...</span>\n            </Upload>\n          </Space>\n        </Space>\n      </div>\n\n      <div className=\"info_admin_content\">\n        <div className=\"info_admin_content_header\">\n          <div style={{ fontSize: '17px' }}>Thông tin</div>\n          <div className='button_edit'>\n            {!editInformation && (\n              <Button\n                type='primary'\n                onClick={() => setEditInformation(true)}\n              >\n                Chỉnh sửa thông tin\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form_info_admin\">\n          <Spin className=\"spin_form\" spinning={loadingUpdate}>\n            <Form\n              name='user'\n              onFinish={(values) => handleSubmitStaff(values)}\n              autoComplete='off'\n              layout='vertical'\n              form={form}\n            >\n              <Row gutter={24}>\n                <Col span={8}>\n                  <Form.Item\n                    name={'firstName'}\n                    label={<span className='txt_label'>Họ</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Họ không được để trống',\n                      }\n                    ]}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      size='middle'\n                      className='txt_input'\n                      placeholder={'Họ'} />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    name={'middleName'}\n                    label={<span className='txt_label'>Tên đệm</span>}\n                  // rules={[\n                  //   {\n                  //     required,\n                  //     message: 'Họ không được để trống',\n                  //   }\n                  // ]}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      size='middle'\n                      className='txt_input'\n                      placeholder={dataUser?.middleName ? 'Tên đệm' : 'Không có thông tin'} />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    name={'lastName'}\n                    label={<span className='txt_label'>Tên</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Tên không được để trống',\n                      }\n                    ]}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      size='middle'\n                      className='txt_input'\n                      placeholder={'Tên'} />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    name={'email'}\n                    label={<span className='txt_label'>Email</span>}\n                    rules={[\n                      { max: 255, message: 'Email tối đa 255 ký tự!' },\n                      {\n                        required: true,\n                        message: 'Email không được để trống',\n                      },\n                      {\n                        validator: (_, value) => {\n                          const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\n                          if ((regex.test(value) && value)) {\n                            return Promise.resolve();\n                          } else {\n                            return Promise.reject('Email không đúng định dạng');\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      size='middle'\n                      className='txt_input'\n                      placeholder={'Email'} />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    name={'gender'}\n                    label={<span className='txt_label'>Giới tính</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Giới tính không được để trống',\n                      },\n                    ]}\n                  >\n                    <Select\n                      disabled={!editInformation}\n                      style={{ width: '100%' }}\n                      size='middle'\n                      placeholder={dataUser?.gender ? 'Chọn giới tính' : 'Không có thông tin'}\n                      className='txt_input'\n                    >\n                      {listGender.map((item, index) => (\n                        <Option key={index} value={item.key}>\n                          {item.value}\n                        </Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    name={'role'}\n                    label={<span className='txt_label'>Vai trò</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Vai trò không được để trống',\n                      },\n                    ]}\n                  >\n                    <Select\n                      disabled={true}\n                      style={{ width: '100%' }}\n                      size='middle'\n                      placeholder={dataUser?.role ? 'Chọn vai trò' : 'Không có thông tin'}\n                      className='txt_input'\n                    >\n                      {[{ key: 'ADMIN', value: 'Admin' }].map((item, index) => (\n                        <Option key={index} value={item.key}>\n                          {item.value}\n                        </Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span={12}>\n                  <Form.Item\n                    name={'phoneNumber'}\n                    label={<span className='txt_label'>Số điện thoại</span>}\n                    rules={[\n                      {\n                        max: 20,\n                        message: 'Số điện thoại tối đa 20 ký tự',\n                      },\n                    ]}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      className='txt_input'\n                      size='middle'\n                      placeholder={dataUser?.phoneNumber ? 'Số điện thoại' : 'Không có thông tin'}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span={12}>\n                  <Form.Item name={'birthday'} label={<span className='txt__label'>Ngày sinh</span>}>\n                    <DatePicker\n                      picker='date'\n                      showNow={false}\n                      disabled={!editInformation}\n                      // showTime\n                      placeholder={dataUser?.birthday ? 'Chọn ngày' : 'Không có thông tin'}\n                      size={'middle'}\n                      format={'DD/MM/YYYY'}\n                      style={{\n                        width: '100%',\n                        cursor: 'pointer',\n                        fontSize: '14px',\n                      }}\n                      className='txt_input'\n                      disabledDate={(current) => moment() <= current}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    name={'nation'}\n                    label={<span className='txt_label'>Quốc gia</span>}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      className='txt_input'\n                      size='middle'\n                      placeholder={dataUser?.nation ? 'Quốc gia' : 'Không có thông tin'}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    name={'religion'}\n                    label={<span className='txt_label'>Tôn giáo</span>}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      className='txt_input'\n                      size='middle'\n                      placeholder={dataUser?.religion ? 'Tôn giáo' : 'Không có thông tin'}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    name={'identityCardNumber'}\n                    label={<span className='txt_label'>CCCD/CTM</span>}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      className='txt_input'\n                      size='middle'\n                      placeholder={dataUser?.identityCardNumber ? 'CCCD/CMT' : 'Không có thông tin'}\n                    />\n                  </Form.Item>\n                </Col>\n\n                <Col span={24}>\n                  <Form.Item\n                    name={'address'}\n                    label={<span className='txt_label'>Địa chỉ</span>}\n                    rules={[\n                      {\n                        max: 255,\n                        message: 'Địa chỉ tối đa 255 ký tự',\n                      },\n                    ]}\n                  >\n                    <Input\n                      disabled={!editInformation}\n                      className='txt_input'\n                      size='middle'\n                      placeholder={dataUser?.address ? 'Địa chỉ' : 'Không có thông tin'}\n                    />\n                  </Form.Item>\n                </Col>\n              </Row>\n              {editInformation && (\n                <div style={{ textAlign: 'center', marginTop: '30px', width: '100%' }}>\n                  <Col span={24} style={{ textAlign: 'center' }}>\n                    <Button className='btn_cancel' danger size='middle'>\n                      Hủy\n                    </Button>\n\n                    <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n                      Lưu thay đổi\n                    </Button>\n                  </Col>\n                </div>\n              )}\n            </Form>\n          </Spin>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default InformationAdmin;","import { Avatar, Badge, Button, Col, DatePicker, Form, Input, message, Row, Select, Space, Spin, Typography, Upload } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport ClinicApis from \"../../../apis/Clinic\";\nimport DoctorApis from \"../../../apis/Doctor\";\nimport SpecialtyApis from \"../../../apis/Specialty\";\nimport UserApis from \"../../../apis/User\";\nimport { listRole } from \"../../../common/constants/doctor\";\nimport { listGender } from \"../../../common/constants/gender\";\nimport baseURL from \"../../../utils/url\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst TabInformation = ({dataUser, handleReset}) => {\n  // console.log('dataUser: ', handleReset);\n  const [loadingAvatar, setLoadingAvatar] = useState(false);\n  const [editInformation, setEditInformation] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [optionsClinic, setOptionsClinic] = useState([]);\n  const [optionsSpecialty, setOptionsSpecialty] = useState([]);\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if(dataUser?.clinic?.id) {\n      getListSpecialty();\n      getListClinic();\n    }\n  }, [])\n\n  useEffect(() => {\n    if(dataUser?.clinic?.id) {\n      getListSpecialty();\n      getListClinic();\n    }\n\n    if(dataUser) {\n      form.setFieldsValue({\n        firstName: dataUser?.firstName || '',\n        middleName: dataUser?.middleName || '',\n        lastName: dataUser?.lastName || '',\n        email: dataUser?.email || '',\n        gender: dataUser?.gender || null,\n        phoneNumber: dataUser?.phoneNumber || null,\n        birthday: dataUser?.birthday ? moment(dataUser?.birthday) : null,\n        address: dataUser?.address || '',\n        role: dataUser.role || '',\n        clinicId: dataUser?.clinic ? dataUser.clinic?.id : null,\n        specialtyId: dataUser?.specialty ? dataUser.specialty?.id : null,\n        avatar: dataUser?.avatar || null,\n        religion: dataUser?.religion || '',\n        nation: dataUser?.nation || '',\n        identityCardNumber: dataUser?.identityCardNumber || '',\n      })\n    }\n  }, [dataUser])\n\n\n  const getListClinic = async () => {\n    setLoading(true);\n    try {\n      const dataRes = await ClinicApis.getClinics({\n        pages: 1,\n        take: 100,\n        active: true,\n      })\n      if (dataRes?.data?.data) {\n        const { data } = dataRes?.data;\n        const listOptionsClinic = data.map(item => {\n          return {\n            id: item.id,\n            name: item?.name || '',\n          }\n        })\n        setOptionsClinic(listOptionsClinic || []);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getListSpecialty = async () => {\n    setLoading(true);\n    try {\n      console.log(dataUser?.clinic?.id);\n      const dataSpecialty = await SpecialtyApis.getSpecialtyByClinic(\n        dataUser?.clinic?.id || undefined\n      );\n      if (dataSpecialty?.data?.data?.length > 0) {\n        const { data } = dataSpecialty?.data;\n        const listSpecialty = data?.map(item => {\n          return {\n            id: item.id,\n            name: item.name,\n          }\n        })\n\n        setOptionsSpecialty(listSpecialty || []);\n        setLoading(false);\n      } else if (dataSpecialty?.data?.data?.length === 0) {\n        setOptionsSpecialty([]);\n        form.setFieldsValue({\n          specialtyId: undefined\n        })\n        setLoading(true);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setOptionsSpecialty([]);\n      form.setFieldsValue({\n        specialtyId: undefined\n      })\n    setLoading(true);\n\n    }\n  }\n\n  const handleUploadAvatar = async ({ file, fileList }) => {\n    setLoadingAvatar(true);\n    console.log('file: ', file);\n    console.log('fileList: ', fileList);\n    const listType = ['image/jpeg', 'image/png', 'image/jpg'];\n    const checkType = listType.includes(file.type)\n\n    if (!checkType) {\n      message.error(`Không đúng định dạng ảnh`);\n      return;\n    }\n\n    const fileSize = file?.size;\n    const isLt2M = fileSize / 1024 / 1024 < 2;\n    // console.log('isLt2M: ', isLt2M);\n    if (!isLt2M) {\n      message.error('Chọn ảnh nhỏ hơn 2MB!');\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', fileList[0]?.originFileObj);\n      // handleReset();\n      // Do khongo phaan quyeefn get use cho doctor nên ko get dc\n      // fix sau\n      const data = await UserApis.changeAvatar(formData);\n      if (data?.status === 200 && data?.data) {\n        toast.success('Thay đổi ảnh đại diện thành công');\n        setLoadingAvatar(false);\n        handleReset();\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      toast.success('Thay đổi ảnh đại diện không thành công');\n      setLoadingAvatar(false);\n    }\n  }\n\n  const handleUpdateDoctor = async (value) => {\n    setLoading(true);\n    \n    try {\n      const dataRes = await DoctorApis.updateDoctor(value, dataUser.id);\n      if (dataRes.status === 200) {\n        setLoading(false);\n        setEditInformation(false);\n        toast.success('Cập nhật thông tin thành công');\n        setEditInformation(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n      if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\n        toast.error('Người dùng đã tồn tại!');\n        return;\n      }\n      toast.error('Cập nhật thông tin không thành công!');\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"info_admin_avatar\">\n        <Space align='center'>\n          <Badge\n            offset={[-10, 66]}\n          >\n            {loadingAvatar ? (\n              <Spin className='spin-avatar' />\n            ) : (\n              <Form.Item\n                noStyle\n                shouldUpdate={(prev, cur) => {\n                  return prev.avatar !== cur.avatar;\n                }}\n              >\n                <Avatar\n                  src={`${baseURL}${dataUser.avatar}`}\n                  size={80}\n                  style={{ fontSize: '26px' }}\n                >\n                  {dataUser?.lastName?.[0]?.toUpperCase()}\n                </Avatar>\n\n              </Form.Item>\n            )}\n          </Badge>\n          <Space direction='vertical' size={0} style={{ marginLeft: '10px' }}>\n            <Title level={5} style={{ color: 'rgba(17, 17, 17, 0.75)', fontWeight: 600 }}>\n              Ảnh đại diện\n            </Title>\n            {/* <label htmlFor='upload-input'>\n                  <Text style={{ color: '#3863EF', fontWeight: 500, cursor: 'pointer' }} underline>\n                    Thay ảnh ...\n                  </Text>\n                </label> */}\n            <Upload\n              // {...props}\n              // listType=\"picture-card\"\n              maxCount={1}\n              showUploadList={false}\n              multiple={false}\n              beforeUpload={() => false}\n              onChange={handleUploadAvatar}\n            >\n              <span\n                style={{\n                  color: '#3863EF',\n                  fontWeight: 500,\n                  cursor: 'pointer'\n                }}\n              >Thay ảnh...</span>\n            </Upload>\n          </Space>\n        </Space>\n      </div>\n      <div className=\"doctor_information\">\n                <div className=\"header_doctor_information\">\n                  <div style={{ fontSize: '17px' }}>Thông tin</div>\n                  <div className='button_edit'>\n                    {!editInformation && (\n                      <Button\n                        type='primary'\n                        onClick={() => setEditInformation(true)}\n                      >\n                        Chỉnh sửa thông tin\n                      </Button>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"form_doctor_information\">\n                  {loading ? (\n                    <Spin />\n                  ): (\n                    <Form\n                    name='doctor'\n                    onFinish={(values) => handleUpdateDoctor(values)}\n                    autoComplete='off'\n                    layout='vertical'\n                    form={form}\n                  >\n                    <Row gutter={24}>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'firstName'}\n                          label={<span className='txt_label'>Họ</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Họ không được để trống',\n                            }\n                          ]}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            size='middle'\n                            className='txt_input'\n                            placeholder={dataUser?.firstName ? 'Họ' : 'Không có thông tin'} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'middleName'}\n                          label={<span className='txt_label'>Tên đệm</span>}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            size='middle'\n                            className='txt_input'\n                            placeholder={dataUser?.middleName ? 'Tên đệm' : 'Không có thông tin'} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'lastName'}\n                          label={<span className='txt_label'>Tên</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Tên không được để trống',\n                            }\n                          ]}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            size='middle'\n                            className='txt_input'\n                            placeholder={dataUser?.lastName ? 'Tên' : 'Không có thông tin'} />\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={6}>\n                        <Form.Item\n                          name={'email'}\n                          label={<span className='txt_label'>Email</span>}\n                          rules={[\n                            { max: 255, message: 'Email tối đa 255 ký tự!' },\n                            {\n                              required: true,\n                              message: 'Email không được để trống',\n                            },\n                            {\n                              validator: (_, value) => {\n                                const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\n                                if ((regex.test(value) && value)) {\n                                  return Promise.resolve();\n                                } else {\n                                  return Promise.reject('Email không đúng định dạng');\n                                }\n                              },\n                            },\n                          ]}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            size='middle'\n                            className='txt_input'\n                            placeholder={dataUser?.email ? 'Email' : 'Không có thông tin'} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'gender'}\n                          label={<span className='txt_label'>Giới tính</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Giới tính không được để trống',\n                            },\n                          ]}\n                        >\n                          <Select\n                            disabled={!editInformation}\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={dataUser?.gender ? 'Chọn giới tính' : 'Không có thông tin'}\n                            className='txt_input'\n                          >\n                            {listGender.map((item, index) => (\n                              <Option key={index} value={item.key}>\n                                {item.value}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'phoneNumber'}\n                          label={<span className='txt_label'>Số điện thoại</span>}\n                          rules={[\n                            {\n                              max: 20,\n                              message: 'Số điện thoại tối đa 20 ký tự',\n                            },\n                          ]}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            className='txt_input'\n                            size='middle'\n                            placeholder={dataUser?.phoneNumber ? 'Số điện thoại' : 'Không có thông tin'}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item name={'birthday'} label={<span className='txt__label'>Ngày sinh</span>}>\n                          <DatePicker\n                            disabled={!editInformation}\n                            picker='date'\n                            showNow={false}\n                            // showTime\n                            placeholder={dataUser?.birthday ? 'Chọn ngày' : 'Không có thông tin'}\n                            size={'middle'}\n                            format={'DD/MM/YYYY'}\n                            style={{\n                              width: '100%',\n                              cursor: 'pointer',\n                              fontSize: '14px',\n                            }}\n                            className='txt_input'\n                            disabledDate={(current) => moment() <= current}\n                          />\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={8}>\n                        <Form.Item\n                          name={'nation'}\n                          label={<span className='txt_label'>Quốc gia</span>}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            className='txt_input'\n                            size='middle'\n                            placeholder={dataUser?.nation ? 'Quốc gia' : 'Không có thông tin'}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={8}>\n                        <Form.Item\n                          name={'religion'}\n                          label={<span className='txt_label'>Tôn giáo</span>}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            className='txt_input'\n                            size='middle'\n                            placeholder={dataUser?.religion ? 'Tôn giáo' : 'Không có thông tin'}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={8}>\n                        <Form.Item\n                          name={'identityCardNumber'}\n                          label={<span className='txt_label'>CCCD/CTM</span>}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            className='txt_input'\n                            size='middle'\n                            placeholder={dataUser?.identityCardNumber ? 'CCCD/CMT' : 'Không có thông tin'}\n                          />\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={4}>\n                        <Form.Item\n                          name={'role'}\n                          label={<span className='txt_label'>Vai trò</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Vai trò không được để trống',\n                            },\n                          ]}\n                        >\n                          <Select\n                            disabled={true}\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={dataUser?.role ? 'Chọn vai trò' : 'Không có thông tin'}\n                            className='txt_input'\n                          >\n                            {listRole.map((item, index) => (\n                              <Option key={index} value={item.key}>\n                                {item.value}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col span={10}>\n                        <Form.Item\n                          name={'clinicId'}\n                          label={<span className='txt_label'>Phòng khám</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Phòng khám không được để trống',\n                            },\n                          ]}\n                        >\n                          <Select\n                            disabled={true}\n                            showSearch\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={dataUser?.clinic?.id ? 'Chọn phòng khám' : 'Không có thông tin'}\n                            className='txt_input'\n                            // optionLabelProp='label'\n                            // optionFilterProp={'label'}\n                            filterOption={(input, option) =>\n                              option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\n                            }\n                            // onChange={handleChangSelectClinic}\n                          >\n                            {optionsClinic.length && optionsClinic.map((item) => (\n                              <Option\n                                key={item.id}\n                                value={item.id || ''}\n                                label={item.name}\n                              >\n                                {item.name}\n                              </Option>\n\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col span={10}>\n                        <Form.Item\n                          name={'specialtyId'}\n                          label={<span className='txt_label'>Chuyên khoa</span>}\n                        // rules={[\n                        //   {\n                        //     required: true,\n                        //     message: 'Giới tính không được để trống',\n                        //   },\n                        // ]}\n                        >\n                          <Select\n                            disabled={!editInformation}\n                            showSearch\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={dataUser?.specialty ? 'Chọn chuyên khoa' : 'Không có thông tin'}\n                            className='txt_input'\n                            filterOption={(input, option) =>\n                              option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\n                            }\n                          >\n                            {optionsSpecialty.length && optionsSpecialty.map((item) => (\n                              <Option key={item.id} value={item.id} label={item.name}>\n                                {item.name}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                    {editInformation && (\n                      <Col span={24} style={{ textAlign: 'center' }}>\n                        <Button className='btn_cancel' danger size='middle' onClick={() => setEditInformation(false)}>\n                          Hủy chỉnh sửa\n                        </Button>\n                        <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n                          Cập nhật\n                        </Button>\n                      </Col>\n                    )}\n                  </Form>\n                  )}\n                  \n                </div>\n              </div>\n    </div>\n  )\n}\n\nexport default TabInformation;","import { Button, Col, Form, Input, InputNumber, Row, Select } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { toast } from \"react-toastify\";\nimport DoctorApis from \"../../../apis/Doctor\";\nimport { listPayment, listPositon } from \"../../../common/constants/doctor\";\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst modulesQill = {\n  toolbar: [\n    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n    [{ size: [] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{ 'list': 'ordered' }, { 'list': 'bullet' },\n    { 'indent': '-1' }, { 'indent': '+1' }],\n    ['link', 'image', 'video'],\n    ['clean']\n  ],\n  clipboard: {\n    matchVisual: false,\n  },\n  history: {\n    delay: 1000,\n    maxStack: 50,\n    userOnly: false\n  },\n  // imageResize: {\n  // displayStyles: {\n  //   backgroundColor: 'black',\n  //   border: 'none',\n  //   color: 'white'\n  // },\n  // modules: ['Resize', 'DisplaySize', 'Toolbar']\n  // },\n}\nconst formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video'\n]\n\nconst TabIntroduce = ({dataUser}) => {\n  const [editIntroduce, setEditIntroduce] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const [form] = Form.useForm();\n  console.log('dataUser: ', dataUser);\n\n  useEffect(() => {\n    if(dataUser) {\n      const {doctorInfor} = dataUser;\n      console.log('doctorInfor: ', doctorInfor);\n      form.setFieldsValue({\n        position: doctorInfor?.position || null,\n        price: doctorInfor?.price || 0,\n        payment: doctorInfor?.payment || null,\n        introduct: doctorInfor?.introduct || null,\n        note: doctorInfor?.note || null,\n        description: doctorInfor?.description || null,\n      })\n    }\n  }, [dataUser])\n\n  const handleUpdateIntroduce = async (values) => {\n    setLoading(true);\n    if (!dataUser && Object.keys(dataUser).length === 0) {\n      try {\n        const dataSaveDoctorInfo = await DoctorApis.createDoctorInfor({\n          ...values,\n          doctorId: dataUser.id,\n        })\n        if (dataSaveDoctorInfo?.status === 200) {\n          toast.success('Thêm giới thiệu thành công');\n          setLoading(false);\n          setEditIntroduce(false);\n        }\n      } catch (error) {\n        console.log('error: ', error);\n        toast.error('Thêm giới thiệu không thành công!');\n        setLoading(false);\n      }\n\n    } else {\n      // cCập nhật thông tin giới thiệu\n      try {\n        const dataSaveDoctorInfo = await DoctorApis.updateDoctorInfoExtra(values, dataUser.doctorInfor.id);\n        if (dataSaveDoctorInfo?.status === 200) {\n          toast.success('Thay đổi thông tin giới thiệu thành công');\n          setLoading(false);\n          setEditIntroduce(false);\n        }\n      } catch (error) {\n        console.log('error: ', error);\n        toast.error('Thay đổi thông tin giới thiệu không thành công!');\n        setLoading(false);\n      }\n    }\n  }\n\n  return (\n    <div className=\"doctor_introduce\">\n    <div className=\"header_doctor_introduce\">\n      <div style={{ fontSize: '17px' }}>Giới thiệu chi tiết</div>\n      <div className='button_edit'>\n        {!editIntroduce && (\n          <Button\n            type='primary'\n            onClick={() => setEditIntroduce(true)}\n          >\n            {!dataUser ? 'Thêm giới thiệu' : 'Chỉnh sửa thông tin'}\n          </Button>\n        )}\n      </div>\n    </div>\n    <div className=\"form_doctor_introduce\">\n      <Form\n        name='doctor_introduce'\n        onFinish={(values) => handleUpdateIntroduce(values)}\n        autoComplete='off'\n        layout='vertical'\n        form={form}\n      >\n        <Row gutter={24}>\n          <Col span={8}>\n            <Form.Item\n              name={'position'}\n              label={<span className='txt_label'>Chức danh</span>}\n            >\n              <Select\n                disabled={!editIntroduce}\n                style={{ width: '100%' }}\n                size='middle'\n                placeholder={true ? 'Chọn chức danh' : 'Không có thông tin'}\n                className='txt_input'\n              >\n                {listPositon.map((item, index) => (\n                  <Option key={index} value={item.key}>\n                    {item.value}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              name={'price'}\n              label={<span className='txt_label'>Giá khám</span>}\n            >\n              <InputNumber\n                defaultValue={0}\n                style={{ width: '100%' }}\n                formatter={(value) => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\").replace(/\\.(?=\\d{0,2}$)/g, \",\")}\n                parser={(value) => value.replace(/\\$\\s?|(\\.*)/g, \"\").replace(/(\\,{1})/g, \".\")}\n                placeholder={true ? 'Giá khám' : 'Không có thông tin'}\n                disabled={!editIntroduce}\n                className='txt_input'\n                size='middle'\n              />\n\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              name={'payment'}\n              label={<span className='txt_label'>Phương thức thanh toán</span>}\n            >\n              <Select\n                disabled={!editIntroduce}\n                style={{ width: '100%' }}\n                size='middle'\n                placeholder={true ? 'Chọn phương thức thanh toán' : 'Không có thông tin'}\n                className='txt_input'\n              >\n                {listPayment.map((item, index) => (\n                  <Option key={index} value={item.key}>\n                    {item.value}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item\n              name={'introduct'}\n              label={<span className='txt_label'>Giới thiệu</span>}\n            >\n              <TextArea\n                disabled={!editIntroduce}\n                rows={4}\n                placeholder='Giới thiệu bác sĩ'\n              />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item\n              name={'note'}\n              label={<span className='txt_label'>Ghi chú</span>}\n            >\n              <TextArea\n                disabled={!editIntroduce}\n                rows={4}\n                placeholder='Ghi chú'\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24}>\n            <Form.Item\n              name={'description'}\n              label={<span className='txt_label'>Mô tả bác sĩ</span>}\n            >\n              <ReactQuill\n                readOnly={!editIntroduce}\n                theme=\"snow\"\n                placeholder=\"Mô tả\"\n                modules={modulesQill}\n                formats={formats}\n                // bounds={'#root'}\n                style={{ height: \"500px\" }}\n              />\n            </Form.Item>\n          </Col>\n\n          {editIntroduce && dataUser && (\n            <div style={{ textAlign: 'center', marginTop: '30px', width: '100%' }}>\n              <Col span={24} style={{ textAlign: 'center', marginTop: '20px !important' }}>\n                <Button className='btn_cancel' danger size='middle' onClick={() => setEditIntroduce(false)}>\n                  Hủy chỉnh sửa\n                </Button>\n                <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n                  Cập nhật\n                </Button>\n              </Col>\n            </div>\n          )}\n\n          {editIntroduce && !dataUser && (\n            <div style={{ textAlign: 'center', marginTop: '30px', width: '100%' }}>\n              <Col span={24} >\n                <Button className='btn_cancel' danger size='middle' onClick={() => setEditIntroduce(false)}>\n                  Hủy\n                </Button>\n                <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n                  Thêm\n                </Button>\n              </Col>\n            </div>\n          )}\n\n        </Row>\n      </Form>\n    </div>\n  </div>\n  )\n}\n\nexport default TabIntroduce;","import { Tabs } from \"antd\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport DoctorApis from \"../../../apis/Doctor\";\nimport TabInformation from \"./TabInformation\";\nimport TabIntroduce from \"./TabIntroduce\";\n\nconst InformationDoctor = ({ dataUser, handleReset }) => {\n  // const [user, setUser] = useState({});\n\n  //sau sẽ lấy user từ parent\n  //Lấy tạm từ doctor để làm\n  // useEffect(() => {\n  //   getDoctor();\n  // },[])\n  // const getDoctor = async() => {\n  //   try {\n  //     const dataRes = await DoctorApis.getDoctorById(dataUser.id);\n  //     if(dataRes.data) {\n  //       setUser(dataRes.data);\n  //     }\n  //   } catch (error) {\n  //     console.log('error: ', error);\n  //   }\n  // }\n\n  return (\n    <div>\n      <Tabs>\n        <Tabs.TabPane tab=\"Thông tin cá nhân\" key=\"information\">\n          <TabInformation dataUser={dataUser} handleReset={handleReset} />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"Giới thiệu\" key=\"introduce\" disabled={dataUser.role === 'MANAGER_CLINIC'}>\n          <TabIntroduce dataUser={dataUser} handleReset={handleReset} />\n        </Tabs.TabPane>\n      </Tabs>\n    </div>\n\n  )\n}\n\nexport default InformationDoctor;","import React, { useEffect, useState } from \"react\";\nimport UserApis from \"../../apis/User\";\nimport './index.scss';\nimport InformationAdmin from './components/InformationAdmin';\nimport InformationDoctor from \"./components/InformationDoctor\";\n\nconst PersonalInformation = () => {\n  const [user, setUser] = useState(null);\n  const [reset, setReset] = useState(0);\n  const [infoUser, setInfoUser] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    document.title = 'Thông tin cá nhân';\n    const userLocal = JSON.parse(localStorage.getItem('user'));\n    if (userLocal) {\n      setUser(userLocal);\n    } else setUser(null);\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      getInfoUser();\n    }\n  }, [user, reset]);\n\n  const getInfoUser = async () => {\n    try {\n      const dataUser = await UserApis.getUserById(user.id);\n      if (dataUser?.status === 200 && dataUser.data) {\n        setInfoUser(dataUser.data);\n      } else setInfoUser(null);\n    } catch (error) {\n      console.log('error: ', error);\n      setInfoUser(null);\n    }\n  }\n\n  return (\n    <div className=\"personal-information\">\n      <div className=\"personal-information-title\">\n        Thông tin tài khoản\n      </div>\n      <div className=\"personal-information-content\">\n        {user && user.role === 'ADMIN' ? (\n          <InformationAdmin dataUser={infoUser} handleReset={() => setReset(prev => ++prev)} />\n        ) : (user && (['DOCTOR', 'MANAGER_CLINIC', 'HEAD_OF_DOCTOR'].includes(user?.role)) ? (\n          <InformationDoctor dataUser={infoUser} handleReset={() => setReset(prev => ++prev)} />\n        ) : null)}\n      </div>\n    </div>\n  )\n}\n\nexport default PersonalInformation;","import { Result, Space, Typography } from 'antd';\nimport React from 'react';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst NotFoundPage = () => {\n  let history = useHistory();\n  useEffect(() => {\n    document.title = 'Not Found'\n  }, [])\n  return (\n  <Result\n    status='404'\n    title='404'\n    subTitle='Xin lỗi, trang bạn đã truy cập không tồn tại.'\n    extra={\n      <Space onClick={() => history.push('/')} style={{ cursor: 'pointer' }}>\n        <ArrowLeftOutlined style={{ color: '#3863EF' }} />\n        <Typography.Title level={5} style={{ margin: 0, color: '#3863EF' }}>\n          Trở lại\n        </Typography.Title>\n      </Space>\n    }\n  />\n)}\n\nexport default NotFoundPage;\n","import { Button, Col, Form, Input, Row, Spin } from \"antd\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AuthApis from \"../../../apis/Auth\";\nimport './index.scss';\n\nconst ChangePassword = () => {\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleSubmit = async (values) => {\n    setLoading(true);\n    try {\n      // changePassword\n      const dataChange = await AuthApis.changePassword(values);\n      if (dataChange?.status === 200 && dataChange?.data) {\n        toast.success('Đổi mật khẩu thành công!');\n        setLoading(false);\n        form.resetFields();\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n      if (error?.response?.data?.error === 'CURRENT_PASSWORD_INVALID') {\n        toast.error('Mật khẩu cũ không đúng!');\n        return;\n      } else if (error?.response?.data?.error === 'NEW_PASSWORD_AND_CONFIRM_PASSWORD_NOT_MATCH') {\n        toast.error('Mật khẩu mới không giống nhau!');\n        return;\n      }\n      toast.error('Đổi mật khẩu không thành công!');\n    }\n  }\n\n  return (\n    <div className=\"form_change\">\n      <Spin spinning={loading}>\n        <div style={{\n          fontSize: '20px',\n          textAlign: 'center'\n        }}>Đổi mật khẩu</div>\n        <Form\n          name='change_password'\n          onFinish={(values) => handleSubmit(values)}\n          autoComplete='off'\n          layout='vertical'\n          form={form}\n        >\n          <Row gutter={24}>\n            <Col span={24}>\n              <Form.Item\n                name={'currentPassword'}\n                label={<span className='txt_label'>Mật khẩu cũ</span>}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Mật khẩu cũ không được để trống',\n                  },\n                  {\n                    min: 6,\n                    message: 'Mật khẩu phải lớn hơn 6 kí tự'\n                  }\n                ]}\n              >\n                <Input.Password\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Mật khẩu cũ'} />\n              </Form.Item>\n            </Col>\n\n            <Col span={24}>\n              <Form.Item\n                name={'newPassword'}\n                label={<span className='txt_label'>Mật khẩu mới</span>}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Mật khẩu mới không được để trống',\n                  },\n                  {\n                    min: 6,\n                    message: 'Mật khẩu phải lớn hơn 6 kí tự'\n                  }\n                ]}\n              >\n                <Input.Password\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Mật khẩu mới'} />\n              </Form.Item>\n            </Col>\n\n            <Col span={24}>\n              <Form.Item\n                name={'confirmPassword'}\n                label={<span className='txt_label'>Xác nhận mật khẩu</span>}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Xác nhận mật khẩu không được để trống',\n                  },\n                  {\n                    min: 6,\n                    message: 'Mật khẩu phải lớn hơn 6 kí tự'\n                  }\n                ]}\n              >\n                <Input.Password\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Xác nhận mật khẩu'} />\n              </Form.Item>\n            </Col>\n            <Col span={24} style={{ textAlign: 'center' }}>\n              <Button className='btn_add' htmlType='submit' type='primary' size='middle' >\n                Xác nhận\n              </Button>\n            </Col>\n          </Row>\n\n        </Form>\n      </Spin>\n    </div>\n  )\n}\n\nexport default ChangePassword;","import { SearchOutlined } from \"@ant-design/icons\";\nimport { Button, DatePicker, Select, Space, Table, Tag } from \"antd\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport ClinicApis from \"../../../apis/Clinic\";\nimport ScheduleApis from \"../../../apis/Schedules\";\nimport UserApis from \"../../../apis/User\";\nimport './index.scss';\n\nconst { Option } = Select;\n\nconst WatchScheduleForAdmin = () => {\n  const [selectDate, setSelectDate] = useState(moment(new Date()).format('YYYY-MM-DDT08:00:00'));\n  const [loading, setLoading] = useState(false);\n  const [optionsClinic, setOptionsClinic] = useState([]);\n  const [optionsDoctor, setOptionsDoctor] = useState([]);\n  const [selectedClinic, setSelectedClinic] = useState(null);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [dataResponse, setDataResponse] = useState({});\n  const [pagination, setPagination] = useState({\n    page: 1,\n    pageSize: 10,\n  });\n  const [listSchedule, setListSchedule] = useState([]);\n\n  useEffect(() => {\n    getListClinic()\n  }, [])\n\n  const getListClinic = async () => {\n    try {\n      const dataRes = await ClinicApis.getClinics({\n        pages: 1,\n        take: 100,\n        active: true,\n      })\n      // console.log('dataRes: ', dataRes);\n      if (dataRes?.data?.data) {\n        const { data } = dataRes?.data;\n        const listOptionsClinic = data.map(item => {\n          return {\n            id: item.id,\n            name: item?.name || '',\n          }\n        })\n        setOptionsClinic(listOptionsClinic || []);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n    }\n  }\n\n  const handleChangSelectClinic = async (value) => {\n    try {\n      setSelectedClinic(value);\n      const dataDoctor = await UserApis.getListUser({\n        clinicId: value,\n      });\n      if (dataDoctor?.data?.data?.length > 0) {\n        const { data } = dataDoctor?.data;\n        const listDoctor = data?.map(item => {\n          return {\n            id: item.id,\n            name: `${item.firstName ? item.firstName : ''} ${item.middleName ? item.middleName : ''} ${item.lastName ? item.lastName : ''}`.trim(),\n          }\n        })\n\n        setOptionsDoctor(listDoctor || [])\n      } else if (dataDoctor?.data?.data?.length === 0) {\n        setOptionsDoctor([]);\n        setSelectedDoctor('');\n      }\n    } catch (error) {\n      // console.log('error: ', error);\n      setOptionsDoctor([]);\n      setSelectedDoctor('');\n    }\n  }\n\n  const handleChangSelectDoctor = (value) => {\n    setSelectedDoctor(value);\n  }\n\n  const onChangeDate = (date, stringDate) => {\n    setSelectDate(moment(date).format('YYYY-MM-DDTHH:mm:ss'));\n  };\n\n  const columns = [\n    {\n      title: 'Thời gian',\n      dataIndex: 'time',\n      key: 'time',\n      width: 100,\n    },\n    {\n      title: 'Ngày khám',\n      dataIndex: 'date',\n      key: 'date',\n      width: 100,\n    },\n    {\n      title: 'Số lượng bệnh nhân',\n      dataIndex: 'maxCount',\n      key: 'maxCount',\n      width: 50,\n    },\n    {\n      title: 'Đã đặt',\n      dataIndex: 'booked',\n      key: 'booked',\n      width: 50,\n    },\n    {\n      title: 'Trạng thái',\n      dataIndex: 'status',\n      key: 'status',\n      width: 50,\n      align: 'center',\n      render: (_, record) => {\n        let color = '';\n        if (record.status === 'ACTIVE') color = 'green';\n        else if (record.status === 'CANCLE') color = 'red';\n        else if (record.status === 'WAITING') color = 'orange';\n        else color = 'red';\n\n        return (\n          <>\n            <Tag color={color} key={record.status}>\n              {record.status}\n            </Tag>\n          </>\n        )\n      }\n    }\n  ]\n\n  const handleGetListSchedule = async () => {\n    if (!selectedDoctor) {\n      toast.warning('Bạn chưa chọn bác sĩ!');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const dataSchedule = await ScheduleApis.getListSchedule({\n        page: pagination.page,\n        take: pagination.pageSize,\n        doctorId: selectedDoctor,\n        date: selectDate,\n      })\n      // console.log('dataSchedule: ', dataSchedule);\n      if (dataSchedule.data.data) {\n        // setListSchedule(dataSchedule.data.data || []);\n        const { data } = dataSchedule.data;\n        const newData = data.map(item => {\n          return {\n            id: item.id,\n            time: `${moment(item.timeStart).format('HH:mm')} - ${moment(item.timeEnd).format('HH:mm')}`,\n            date: moment(new Date(parseInt(item.date))).format('DD/MM/YYYY'),\n            status: item.status,\n            maxCount: item?.maxCount || 0,\n            booked: item?.booked || 0,\n          }\n        })\n        setListSchedule(newData || []);\n        setDataResponse(dataSchedule.data || null)\n        setLoading(false);\n      } else {\n        setListSchedule([]);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n\n  }\n\n  return (\n    <div>\n      <h1>Danh sách lịch khám</h1>\n\n      <div className=\"input_filter\">\n        <Space>\n          <DatePicker\n            className='date_picker'\n            picker=\"date\"\n            defaultValue={moment(selectDate, 'YYYY-MM-DD')}\n            format={'DD/MM/YYYY'}\n            showNow={true}\n            showTime={false}\n            style={{\n              borderRadius: '0px',\n              cursor: 'pointer',\n              fontSize: '14px',\n            }}\n            showToday={false}\n            // disabledDate={(current) => moment() >= current}\n            onChange={onChangeDate}\n            size='large'\n          />\n\n          <Select\n            showSearch\n            // style={{ width: '' }}\n            size='large'\n            placeholder={'Chọn phòng khám'}\n            className='select'\n            // optionLabelProp='label'\n            // optionFilterProp={'label'}\n            value={selectedClinic}\n            filterOption={(input, option) =>\n              option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\n            }\n            onChange={handleChangSelectClinic}\n          >\n            {optionsClinic.length && optionsClinic.map((item) => (\n              <Option\n                key={item.id}\n                value={item.id || ''}\n                label={item.name}\n              >\n                {item.name}\n              </Option>\n\n            ))}\n          </Select>\n\n          <Select\n            showSearch\n            style={{ height: '100%' }}\n            size='large'\n            value={selectedDoctor}\n            placeholder='Chọn bác sĩ'\n            className='select'\n            onChange={handleChangSelectDoctor}\n            filterOption={(input, option) =>\n              option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\n            }\n          >\n            {optionsDoctor.length && optionsDoctor.map((item) => (\n              <Option key={item.id} value={item.id} label={item.name}>\n                {item.name}\n              </Option>\n            ))}\n          </Select>\n\n          <Button\n            size='large'\n            type='primary'\n            icon={<SearchOutlined />}\n            onClick={handleGetListSchedule}\n          >Tìm kiếm</Button>\n        </Space>\n      </div>\n\n      <div className=\"table_list_schdule\">\n        <Table\n          loading={loading}\n          rowKey={'id'}\n          dataSource={listSchedule}\n          columns={columns}\n          pagination={{\n            current: dataResponse?.meta?.page || 1, // so trang\n            total: dataResponse?.meta?.itemCount || 10, // tong tat ca \n            defaultPageSize: dataResponse?.meta?.take || 10,\n            showSizeChanger: true,\n            pageSizeOptions: ['10', '20', '50', '100'],\n            locale: { items_per_page: ' kết quả/trang' },\n            onChange: (page, pageSize) => {\n              setPagination({\n                ...pagination,\n                page,\n                pageSize,\n              });\n            },\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default WatchScheduleForAdmin;","import React, { useEffect } from 'react';\n\nimport { useSelector } from 'react-redux';\n\n// import Table from '../components/table/Table'\n\n// import Badge from '../components/badge/Badge'\n\n// import statusCards from '../assets/JsonData/status-card-data.json'\nimport StatusCard from '../../../components/status-card/StatusCard'\nimport { useState } from 'react';\nimport './index.scss';\nimport { Spin } from 'antd';\nimport CustomerApis from '../../../apis/Customer';\nimport ClinicApis from '../../../apis/Clinic';\nimport BookingApis from '../../../apis/Bookings';\nimport moment from 'moment';\n\nconst DashboardAdmin = () => {\n\n  const [countCustomer, setCountCustomer] = useState(0);\n  const [countClinic, setCountClinic] = useState(0);\n  const [countDoctor, setCountDoctor] = useState(0);\n  const [countAppointentDone, setCountAppointentDone] = useState(0);\n  const [countAppointentToday, setCountAppointentToday] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getDataCustomer();\n    getDataClinic();\n    getDataDoctor();\n    getDataBookingDone();\n    getDataBookingToday();\n  }, [])\n\n  const getDataCustomer = async () => {\n    setLoading(true);\n    try {\n      const dataRes = await CustomerApis.getCustomer({\n        page: 1,\n        take: 100,\n        role: 'USER',\n      });\n      if (dataRes?.data?.data.length) {\n        setCountCustomer(dataRes?.data?.meta?.itemCount || 0);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getDataClinic = async () => {\n    try {\n      setLoading(true);\n      const dataRes = await ClinicApis.getClinics({\n        page: 1,\n        take: 100,\n      })\n      if (dataRes?.data?.data) {\n        setCountClinic(dataRes?.data?.meta?.itemCount || 0);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getDataDoctor = async () => {\n    setLoading(true);\n    try {\n      const dataRes = await CustomerApis.getCustomer({\n        page: 1,\n        take: 100,\n        role: ['DOCTOR', 'HEAD_OF_DOCTOR'],\n      });\n      if (dataRes?.data?.data.length) {\n        setCountDoctor(dataRes?.data?.meta?.itemCount || 0);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getDataBookingDone = async () => {\n    try {\n      setLoading(true);\n      const dataBooking = await BookingApis.getBookings({\n        status: ['DONE'],\n      });\n\n      if (dataBooking.status === 200 && dataBooking?.data?.data.length) {\n        setCountAppointentDone(dataBooking?.data?.meta?.itemCount || 0);\n      }\n      setLoading(false);\n\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getDataBookingToday = async () => {\n    try {\n      setLoading(true);\n      const dataBooking = await BookingApis.getBookings({\n        date: moment(new Date).format('YYYY-MM-DDT00:00:00'),\n        status: ['CONFIRMED', 'DONE'],\n      });\n\n      console.log('dataBooking: ', dataBooking);\n      if (dataBooking.status === 200 && dataBooking?.data?.data.length) {\n        setCountAppointentToday(dataBooking?.data?.meta?.itemCount || 0);\n      }\n      setLoading(false);\n\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const themeReducer = useSelector(state => state.ThemeReducer.mode)\n  return (\n    <>\n      {loading ? (\n        <div className=\"spin\">\n          <Spin />\n        </div>\n      ) : (\n        <div>\n          <h2 className=\"page-header\">Dashboard</h2>\n          {/* <div className=\"row\"> */}\n          {/* <div className=\"col-6\"> */}\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-user-pin'}\n                count={countCustomer || 0}\n                title={'Số lượng khách hàng'}\n              />\n            </div>\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-clinic'}\n                count={countClinic || 0}\n                title={'Số lượng phòng khám'}\n              />\n            </div>\n\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-user'}\n                count={countDoctor || 0}\n                title={'Số lượng bác sĩ'}\n              />\n            </div>\n\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-notepad'}\n                count={countAppointentDone}\n                title={'Lịch hẹn đã hoàn thành'}\n              />\n            </div>\n\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-notepad'}\n                count={countAppointentToday}\n                title={'Lịch hẹn hôm nay'}\n              />\n            </div>\n          </div>\n          {/* </div> */}\n          {/* </div> */}\n        </div>\n      )}\n    </>\n\n  )\n}\n\nexport default DashboardAdmin","import React, { useEffect, useState } from 'react'\n\nimport { Route, Switch, useHistory } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport CustomersTest from '../pages/Customers-2';\nimport Customers from '../pages/Customers/index';\nimport Products from '../pages/Products'\nimport TestRouter from '../pages/TestRouter'\nimport RequireAuth from '../router/AuthRouter';\nimport Doctor from '../pages/Doctor';\nimport CareStaff from '../pages/CareStaff';\nimport Clinic from '../pages/Clinic';\nimport Specialty from '../pages/Specialty';\nimport Schedules from '../pages/Schedules';\nimport DetailCustomer from '../pages/Customers/components/Detail';\nimport DetailDoctor from '../pages/Doctor/components/DetailDoctor';\nimport DetailClinic from '../pages/Clinic/components/DetailClinic';\nimport AuthApis from '../apis/Auth';\nimport { toast } from 'react-toastify';\nimport Topnav from './topnav/TopNav';\nimport './layout/layout.scss';\nimport PersonalInformation from '../pages/PersonalInformation';\nimport NotFoundPage from '../pages/NotFound';\nimport ChangePassword from '../pages/Auth/ChangePassword';\nimport WatchScheduleForAdmin from '../pages/WatchSchedule/Admin';\nimport DashboardAdmin from '../pages/Dashboard/Admin';\n\nconst RoutesAdmin = () => {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n    let history = useHistory();\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem('accessToken');\n        if (accessToken)\n            checkToken();\n    }, []);\n\n    const checkToken = async () => {\n        try {\n            const dataCheckToken = await AuthApis.authMe();\n            if (dataCheckToken?.data) {\n                setUser(dataCheckToken.data);\n            }\n        } catch (error) {\n            console.log('error: ', error);\n            toast.error('Hết phiên đăng nhập!');\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('user');\n            history.push('/login');\n        }\n    }\n\n    return (\n\n        <div className=\"layout__content\">\n            <Topnav userData={user} />\n            {/* <TopNav /> */}\n            <div className=\"layout__content-main\">\n                <Switch>\n                    {/* <Route path='/admin' exact component={Dashboard} /> */}\n                    {/* <Route path='/admin/quan-ly-khach-hang' component={Customers} /> */}\n                    {/* <Route path='/admin/quan-ly-khach-hang'>\n                <RequireAuth>\n                    <Customers />\n                </RequireAuth>\n            </Route> */}\n                    <Route path='/admin' exact>\n                        <RequireAuth>\n                            <DashboardAdmin />\n                        </RequireAuth>\n                    </Route>\n                    <Route path='/admin/quan-ly-khach-hang'>\n                        <Switch>\n                            <Route exact path='/admin/quan-ly-khach-hang'>\n                                <RequireAuth>\n                                    <Customers />\n                                </RequireAuth>\n                            </Route>\n                            <Route exact path='/admin/quan-ly-khach-hang/chi-tiet/:customerId'>\n                                <RequireAuth>\n                                    <DetailCustomer />\n                                </RequireAuth>\n                            </Route>\n                            <Route path='*' render={() => <div>404</div>} />\n                        </Switch>\n                    </Route>\n                    <Route path='/admin/quan-ly-bac-si'>\n                        <Switch>\n                            <Route exact path='/admin/quan-ly-bac-si'>\n                                <RequireAuth>\n                                    <Doctor />\n                                </RequireAuth>\n                            </Route>\n                            <Route exact path='/admin/quan-ly-bac-si/chi-tiet/:doctorId'>\n                                <RequireAuth>\n                                    <DetailDoctor />\n                                </RequireAuth>\n                            </Route>\n                            <Route path='*' render={() => <div>404</div>} />\n                        </Switch>\n\n                    </Route>\n\n                    <Route path='/admin/nhan-vien-cham-soc'>\n                        <RequireAuth>\n                            <CareStaff />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/admin/quan-ly-phong-kham'>\n                        <Switch>\n                            <Route exact path='/admin/quan-ly-phong-kham'>\n                                <RequireAuth>\n                                    <Clinic />\n                                </RequireAuth>\n                            </Route>\n                            <Route exact path='/admin/quan-ly-phong-kham/chi-tiet/:clinicId'>\n                                <RequireAuth>\n                                    <DetailClinic />\n                                </RequireAuth>\n                            </Route>\n                            <Route path='*' render={() => <div>404</div>} />\n                        </Switch>\n                    </Route>\n\n                    <Route path='/admin/quan-ly-chuyen-khoa'>\n                        <RequireAuth>\n                            <Specialty />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/admin/quan-ly-lich-kham'>\n                        <RequireAuth>\n                            <WatchScheduleForAdmin />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/admin/thong-tin-ca-nhan'>\n                        <RequireAuth>\n                            <PersonalInformation />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/admin/doi-mat-khau'>\n                        <RequireAuth>\n                            <ChangePassword />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/admin/test' component={TestRouter} />\n                    <Route path='*' component={NotFoundPage} />\n\n                </Switch>\n\n            </div>\n        </div>\n\n        // <Switch>\n        //     {/* <Route path='/admin' exact component={Dashboard} /> */}\n        //     {/* <Route path='/admin/quan-ly-khach-hang' component={Customers} /> */}\n        //     {/* <Route path='/admin/quan-ly-khach-hang'>\n        //         <RequireAuth>\n        //             <Customers />\n        //         </RequireAuth>\n        //     </Route> */}\n        //     <Route path='/admin' exact>\n        //         <RequireAuth>\n        //             <Dashboard />\n        //         </RequireAuth>\n        //     </Route>\n        //     <Route path='/admin/quan-ly-khach-hang'>\n        //         <Switch>\n        //             <Route exact path='/admin/quan-ly-khach-hang'>\n        //                 <RequireAuth>\n        //                     <Customers />\n        //                 </RequireAuth>\n        //             </Route>\n        //             <Route exact path='/admin/quan-ly-khach-hang/chi-tiet/:customerId'>\n        //                 <RequireAuth>\n        //                     <DetailCustomer />\n        //                 </RequireAuth>\n        //             </Route>\n        //             <Route path='*' render={() => <div>404</div>} />\n        //         </Switch>\n        //     </Route>\n        //     <Route path='/admin/quan-ly-bac-si'>\n        //         <Switch>\n        //             <Route exact path='/admin/quan-ly-bac-si'>\n        //                 <RequireAuth>\n        //                     <Doctor />\n        //                 </RequireAuth>\n        //             </Route>\n        //             <Route exact path='/admin/quan-ly-bac-si/chi-tiet/:doctorId'>\n        //                 <RequireAuth>\n        //                     <DetailDoctor />\n        //                 </RequireAuth>\n        //             </Route>\n        //             <Route path='*' render={() => <div>404</div>} />\n        //         </Switch>\n\n        //     </Route>\n\n        //     <Route path='/admin/nhan-vien-cham-soc'>\n        //         <RequireAuth>\n        //             <CareStaff />\n        //         </RequireAuth>\n        //     </Route>\n\n        //     <Route path='/admin/quan-ly-phong-kham'>\n        //         <Switch>\n        //             <Route exact path='/admin/quan-ly-phong-kham'>\n        //                 <RequireAuth>\n        //                     <Clinic />\n        //                 </RequireAuth>\n        //             </Route>\n        //             <Route exact path='/admin/quan-ly-phong-kham/chi-tiet/:clinicId'>\n        //                 <RequireAuth>\n        //                     <DetailClinic />\n        //                 </RequireAuth>\n        //             </Route>\n        //             <Route path='*' render={() => <div>404</div>} />\n        //         </Switch>\n        //     </Route>\n\n        //     <Route path='/admin/quan-ly-chuyen-khoa'>\n        //         <RequireAuth>\n        //             <Specialty />\n        //         </RequireAuth>\n        //     </Route>\n\n        //     <Route path='/admin/quan-ly-lich-kham'>\n        //         <RequireAuth>\n        //             <Schedules />\n        //         </RequireAuth>\n        //     </Route>\n\n        //     <Route path='/admin/test' component={TestRouter} />\n        //     <Route path='*' render={() => <div>404</div>} />\n\n        // </Switch>\n    )\n}\n\nexport default RoutesAdmin;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Checkbox, Form, Input, Spin } from \"antd\";\nimport './index.scss';\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport AuthApis from \"../../../apis/Auth\";\n\nconst Login = () => {\n  const [loading, setLoading] = useState(false)\n  let history = useHistory();\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (accessToken) {\n      checkToken();\n    }\n  }, []);\n\n  const checkToken = async () => {\n    try {\n      const dataCheckToken = await AuthApis.authMe();\n      if (dataCheckToken?.data) {\n        if (dataCheckToken?.data?.role === 'ADMIN') {\n          history.push('/admin');\n        } else {\n          history.push('/he-thong');\n        }\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Hết phiên đăng nhập!');\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('user');\n    }\n  }\n\n  const onFinish = async (values) => {\n    setLoading(true);\n    try {\n      const loginRes = await AuthApis.login(values);\n      if (loginRes?.data?.user && loginRes?.data.token) {\n        const { token, user } = loginRes?.data;\n        localStorage.setItem('accessToken', token.accessToken);\n        localStorage.setItem('user', JSON.stringify(user));\n        toast.success('Đăng nhập thành công');\n        setLoading(false);\n        if (user?.role === 'ADMIN') {\n          history.push('/admin');\n        } else {\n          history.push('/he-thong');\n        }\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Đăng nhập không thành công!');\n      setLoading(false);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-box\">\n        <div className=\"illustration-wrapper\">\n          <img\n            // src=\"https://mixkit.imgix.net/art/preview/mixkit-left-handed-man-sitting-at-a-table-writing-in-a-notebook-27-original-large.png?q=80&auto=format%2Ccompress&h=700\" \n            src=\"http://techport.vn/uploads/2019/12-4/3.-bookingcare_brochure-VIE-1.jpg\"\n            alt=\"Login\"\n          />\n        </div>\n        <Spin spinning={loading}>\n          <Form\n            name=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <p className=\"form-title\">Welcome back!</p>\n            <p>Login to the Dashboard</p>\n            <Form.Item\n              name=\"email\"\n              rules={[\n                { max: 255, message: 'Email tối đa 255 ký tự!' },\n                {\n                  required: true,\n                  message: 'Vui lòng nhập email của bạn!'\n                },\n                {\n                  validator: (_, value) => {\n                    const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\n                    if ((regex.test(value) && value)) {\n                      return Promise.resolve();\n                    } else {\n                      return Promise.reject('Email không đúng định dạng!');\n                    }\n                  },\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Email\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { min: 6, message: 'Mật khẩu phải lớn hơn 6 kí tự!' },\n                {\n                  required: true,\n                  message: 'Vui lòng nhập mật khẩu của bạn!'\n                }\n              ]}\n            >\n              <Input.Password\n                placeholder=\"Mật khẩu\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <div\n                style={{\n                  cursor: 'pointer',\n                  color: '#349eff',\n                }}\n                onClick={() => history.push('/quen-mat-khau')}\n              >\n                Quên mật khẩu\n              </div>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Đăng nhập\n              </Button>\n            </Form.Item>\n          </Form>\n        </Spin>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","import { Button, Col, DatePicker, Divider, Form, Input, Modal, Row, Select, Spin, Table } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport BookingApis from \"../../../apis/Bookings\";\r\nimport baseURL from \"../../../utils/url\";\r\nimport './DetailPatient.scss';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst DetailPatient = ({\r\n  detailPatient,\r\n  showModal,\r\n  handleCancelModal,\r\n  disabledBtnSave\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataHistoryPatient, setDataHistoryPatient] = useState([]);\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    if (detailPatient) {\r\n      form.setFieldsValue({\r\n        name: detailPatient.name,\r\n        email: detailPatient.email,\r\n        reason: detailPatient.reason,\r\n        userNote: detailPatient.userNote,\r\n      });\r\n\r\n      getHistoryPatient();\r\n    }\r\n  }, [detailPatient]);\r\n\r\n  const getHistoryPatient = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const dataHistory = await BookingApis.getBookings({\r\n        patientId: detailPatient?.patientId,\r\n        status: ['DONE'],\r\n      });\r\n      if (dataHistory?.data?.data.length) {\r\n        const { data } = dataHistory?.data;\r\n        const listHistory = data.map(item => {\r\n          const nameDoctor = `${item?.doctor.firstName ? item?.doctor.firstName : ''} ${item?.doctor?.middleName ? item?.doctor?.middleName : ''} ${item?.doctor?.lastName ? item?.doctor?.lastName : ''}`.trim();\r\n          return {\r\n            id: item.id,\r\n            timeStart: item?.schedule.timeStart,\r\n            timeEnd: item?.schedule.timeEnd,\r\n            time: `${moment(item?.schedule?.timeStart).format('HH:mm')} - ${moment(item?.schedule?.timeEnd).format('HH:mm')} ${moment(item?.schedule?.timeEnd).format('DD/MM/YYYY')}`,\r\n            nameDoctor: nameDoctor,\r\n            date: moment(item.date).format('DD/MM/YYYY'),\r\n            reason: item?.reason || '',\r\n            userNote: item?.userNote || '',\r\n            prescription: item?.history?.prescription ? `${baseURL}${item?.history?.prescription}` : '',\r\n            doctorNote: item?.history?.doctorNote || '',\r\n          }\r\n        })\r\n        setDataHistoryPatient(listHistory);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Thời gian',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      width: 50,\r\n    },\r\n    {\r\n      title: 'Tên bác sĩ',\r\n      dataIndex: 'nameDoctor',\r\n      key: 'nameDoctor',\r\n      ellipsis: true,\r\n      width: 55\r\n    },\r\n    {\r\n      title: 'Lý do khám',\r\n      dataIndex: 'reason',\r\n      key: 'reason',\r\n      // ellipsis: true,\r\n      width: 55\r\n    },\r\n    {\r\n      title: 'Đơn thuốc',\r\n      dataIndex: 'prescription',\r\n      key: 'prescription',\r\n      ellipsis: true,\r\n      width: 55,\r\n      render: (value) => (\r\n        <>\r\n          {value ? (\r\n            <a download href={value}>\r\n              <div style={{\r\n                color: '#1890ff'\r\n              }}>Xem đơn thuốc</div>\r\n            </a>\r\n          ) : ''}\r\n        </>\r\n      )\r\n    },\r\n  ];\r\n\r\n\r\n  const handleSubmit = async (values) => {\r\n    try {\r\n      const { note, ...res } = values;\r\n      const dataRes = await BookingApis.updateBooking({ userNote: note }, detailPatient.idBooking);\r\n      console.log('dataRes: ', dataRes);\r\n      // thêm ghi chú \r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Thêm ghi chú không thành công!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className='detail_modal'\r\n      title={\r\n        <>\r\n          <div>Chi tiết</div>\r\n        </>\r\n      }\r\n      open={showModal}\r\n      onCancel={() => {\r\n        if (!loading) {\r\n          handleCancelModal();\r\n          form.resetFields()\r\n        }\r\n      }}\r\n      width={700}\r\n      height={500}\r\n      footer={false}\r\n    >\r\n      <Spin spinning={loading}>\r\n        <div style={{ height: '500px', overflowY: 'auto', overflowX: 'hidden' }}>\r\n          <Form\r\n            name='patient'\r\n            // onFinish={(values) => handleSubmit(values)}\r\n            autoComplete='off'\r\n            layout='vertical'\r\n            form={form}\r\n          >\r\n            <Row gutter={24}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name={'name'}\r\n                  label={<span className='txt_label'>Tên bệnh nhân</span>}\r\n                >\r\n                  <Input\r\n                    disabled\r\n                    size='middle'\r\n                    className='txt_input'\r\n                    placeholder={'Tên bệnh nhân'} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name={'email'}\r\n                  label={<span className='txt_label'>Email</span>}\r\n                >\r\n                  <Input\r\n                    disabled\r\n                    size='middle'\r\n                    className='txt_input'\r\n                    placeholder={'Email'} />\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={'reason'}\r\n                  label={<span className='txt_label'>Lý do khám</span>}\r\n                >\r\n                  <TextArea\r\n                    disabled\r\n                    rows={4}\r\n                    placeholder='Lý do'\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={'userNote'}\r\n                  label={<span className='txt_label'>Ghi chú</span>}\r\n                >\r\n                  <TextArea\r\n                    disabled\r\n                    rows={4}\r\n                    placeholder={detailPatient?.doctorNote ? 'Ghi chú' : 'Không có thông tin'}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\r\n                Hủy\r\n              </Button>\r\n\r\n              {/* <Button disabled={disabledBtnSave} className='btn_add' size='middle' htmlType='submit' type='primary'>\r\n                Lưu\r\n              </Button> */}\r\n\r\n            </Col>\r\n          </Form>\r\n          <div className=\"history\">\r\n            <Divider>Lịch sử khám</Divider>\r\n            <Table\r\n              loading={loading}\r\n              rowKey={'id'}\r\n              dataSource={dataHistoryPatient}\r\n              columns={columns}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Spin>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DetailPatient;","import requestClient from \"../RequestClient\";\n\nconst HistoryApis = {\n  createHistoryBooking(data) {\n    const urlParam = 'history';\n    return requestClient().post(urlParam, data);\n  }\n\n}\n\nexport default HistoryApis;","import { UploadOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Form, Input, message, Modal, Row, Spin, Upload } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport HistoryApis from \"../../../../apis/Historyy\";\nimport './index.scss';\n\nconst { TextArea } = Input;\n\nconst ExaminationDone = ({\n  showModal,\n  handleCancelModal,\n  detailPatient\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (detailPatient) {\n      form.setFieldsValue({\n        namePatient: detailPatient?.name || '',\n        email: detailPatient?.email || '',\n        // note: detailPatient?.note || '',\n      })\n    }\n  }, [detailPatient])\n\n\n\n  const handleUploadFile = ({ file, fileList }) => {\n    const typeFile = [\n      'application/pdf',\n      'application/msword',\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    ];\n\n    const checkFile = typeFile.includes(file.type);\n    if (!checkFile) {\n      message.error('Bạn chỉ có thể tải lên file doc, docx hoặc pdf!');\n      return;\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('File phải nhỏ hơn 2MB!');\n      return;\n    }\n    return checkFile;\n  };\n\n  const handleSubmit = async (values) => {\n    setLoading(true);\n    const { file, fileList } = values.file;\n    const typeFile = [\n      'application/pdf',\n      'application/msword',\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    ];\n\n    const checkFile = typeFile.includes(file.type);\n    if (!checkFile) {\n      message.error('Bạn chỉ có thể tải lên file doc, docx hoặc pdf!');\n      setLoading(false);\n      return;\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('File phải nhỏ hơn 2MB!');\n      setLoading(false);\n      return;\n    }\n    try {\n      let formData = new FormData();\n      formData.append('bookingId', detailPatient?.idBooking);\n      for (const item in values) {\n        if (item === 'file') {\n          formData.append('file', values[item].fileList[0]?.originFileObj);\n        } else if (!values[item]) break;\n        else formData.append(item, values[item]);\n      }\n      const dataCreate = await HistoryApis.createHistoryBooking(formData)\n      if (dataCreate?.data) {\n        handleCancelModal();\n        form.resetFields();\n        toast.success('Gửi đơn thuốc thành công!');\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Gửi đơn thuốc không thành công!')\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Modal\n      className='prescription_modal'\n      title={\n        <>\n          <div>Đơn thuốc</div>\n        </>\n      }\n      open={showModal}\n      onCancel={() => {\n        if (!loading) {\n          handleCancelModal();\n          form.resetFields()\n        }\n      }}\n      width={700}\n      footer={false}\n    >\n      <Spin spinning={loading}>\n        <Form\n          name='patient'\n          onFinish={(values) => handleSubmit(values)}\n          autoComplete='off'\n          layout='vertical'\n          form={form}\n        >\n          <Row gutter={24}>\n            <Col span={12}>\n              <Form.Item\n                name={'namePatient'}\n                label={<span className='txt_label'>Tên bệnh nhân</span>}\n              >\n                <Input\n                  disabled\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Tên bệnh nhân'} />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name={'email'}\n                label={<span className='txt_label'>Email</span>}\n              >\n                <Input\n                  disabled\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Email'} />\n              </Form.Item>\n            </Col>\n\n            <Col span={24}>\n              <Form.Item\n                name={'doctorNote'}\n                label={<span className='txt_label'>Ghi chú của bác sĩ</span>}\n              >\n                <TextArea\n                  rows={4}\n                />\n              </Form.Item>\n            </Col>\n\n            <Col span={24}>\n              <Form.Item\n                name={'file'}\n                label={<span className='txt_label'>File đơn thuốc</span>}\n                rules={[\n                  {\n                    required: true,\n                    message: 'File đơn thuốc không thể thiếu!'\n                  },\n                ]}\n              >\n                <Upload\n                  beforeUpload={() => false}\n                  multiple={false}\n                  maxCount={1}\n                // onChange={handleUploadFile}\n                >\n                  <Button icon={<UploadOutlined />}>Chọn File</Button>\n                </Upload>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Col span={24} style={{ textAlign: 'center' }}>\n            <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\n              Hủy\n            </Button>\n\n            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n              Lưu\n            </Button>\n\n          </Col>\n        </Form>\n      </Spin>\n    </Modal>\n  )\n}\n\nexport default ExaminationDone;","import React, { useState } from \"react\";\nimport { Button, DatePicker, Space, Table, Tag } from \"antd\";\nimport moment from \"moment\";\nimport './index.scss';\nimport { FormOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { useEffect } from \"react\";\nimport BookingApis from '../../apis/Bookings';\nimport DetailPatient from \"./compoments/DetailPatient\";\nimport ExaminationDone from \"./compoments/ExaminationDone\";\nimport baseURL from \"../../utils/url\";\n\nconst dateNow = new Date();\n\nconst AppointmentSchedule = () => {\n  const [selectDate, setSelectDate] = useState(moment(dateNow).format('YYYY-MM-DDT00:00:00'));\n\n  const [loading, setLoading] = useState(false);\n  const [dataResponse, setDataResponse] = useState({});\n  // const [pagination, setPagination] = useState({\n  //   page: 1,\n  //   pageSize: 100,\n  // });\n  const currentDate = moment(dateNow).format('YYYY-MM-DDT00:00:00');\n  const [dataPatient, setDataPatient] = useState([]);\n  const [doctor, setDoctor] = useState(null);\n  const [detailPatient, setDetailPatient] = useState(null); // {}\n  const [showModalDetail, setModalDetail] = useState(false);\n  const [modalExamination, setModalExamination] = useState(false);\n\n  useEffect(() => {\n    const userLocal = JSON.parse(localStorage.getItem('user'));\n    if (userLocal) {\n      setDoctor(userLocal);\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectDate && doctor && !modalExamination)\n      getBooking();\n  }, [selectDate, doctor, modalExamination])\n\n  const getBooking = async () => {\n    try {\n      setLoading(true);\n      const dataBooking = await BookingApis.getBookings({\n        date: selectDate || undefined,\n        doctorId: doctor?.id || undefined,\n        status: ['CONFIRMED', 'DONE'],\n      });\n\n      // console.log('dataBooking: ', dataBooking);\n      if (dataBooking.status === 200 && dataBooking?.data?.data) {\n        const { data } = dataBooking?.data;\n        const mapDataPatient = data.map(item => {\n          let name = '';\n          let email = '';\n          if (item.type === 'FOR_MYSELF') {\n            name = `${item?.patient.firstName ? item?.patient.firstName : ''} ${item?.patient?.middleName ? item?.patient?.middleName : ''} ${item?.patient?.lastName ? item?.patient?.lastName : ''}`.trim();\n            email = item?.parse?.email || '';\n          } else {\n            name = item?.bookingRelatives?.name || '';\n            email = item?.bookingRelatives?.email || '';\n          }\n          return {\n            idBooking: item.id,\n            timeStart: item?.schedule.timeStart,\n            timeEnd: item?.schedule.timeEnd,\n            time: `${moment(item?.schedule?.timeStart).format('HH:mm')} - ${moment(item?.schedule?.timeEnd).format('HH:mm')}`,\n            name: name,\n            email: email,\n            gender: item?.patient?.gender || '',\n            birthday: item?.patient?.birthday || null,\n            phoneNumber: item?.patient?.phoneNumber || '',\n            status: item?.status || '',\n            bookingDate: item.createdDate,\n            reason: item?.reason || '',\n            email: item?.patient.email || '',\n            address: item?.patient?.address || '',\n            userNote: item?.userNote || '',\n            patientId: item?.patient?.id,\n            //Thiếu ghi chú của bác sĩ và link đơn thuốc\n            // prescription: item?.history?.prescription ? `${baseURL}${item?.history?.prescription}` : '',\n            // doctorNote: item?.history?.doctorNote || '',\n          }\n        })\n        setDataPatient(mapDataPatient || []);\n      }\n      setLoading(false);\n\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const onChange = (date, stringDate) => {\n    // console.log('date: ', date);\n    // console.log('stringDate: ', stringDate);\n    setSelectDate(moment(date).format('YYYY-MM-DDTHH:mm:ss'));\n  };\n\n  const columns = [\n    {\n      title: 'Thời gian',\n      dataIndex: 'time',\n      key: 'time',\n      width: 50,\n    },\n    {\n      title: 'Tên bệnh nhân',\n      dataIndex: 'name',\n      key: 'name',\n      width: 70,\n      ellipsis: true,\n    },\n    {\n      title: 'Giới tính',\n      dataIndex: 'gender',\n      key: 'gender',\n      width: 40,\n      render: (value) => (\n        <div>{value === 'FEMALE' ? 'Nữ' : value === 'MALE' ? 'Nam' : 'Khác' || ''}</div>\n      )\n    },\n    {\n      title: 'Ngày sinh',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      width: 50,\n      render: (value) => (\n        <div>{value ? moment(value).format('DD/MM/YYYY') : ''}</div>\n      )\n    },\n    {\n      title: 'Số điện thoại',\n      dataIndex: 'phoneNumber',\n      key: 'phoneNumber',\n      width: 55\n    },\n    {\n      title: 'Hành động',\n      // dataIndex: 'phoneNumber',\n      key: 'action',\n      width: 100,\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button\n            className=\"btn_detail\"\n            icon={<FormOutlined />}\n            style={{\n              minWidth: '30px'\n            }}\n            onClick={() => {\n              setDetailPatient(record);\n              setModalDetail(true);\n            }}\n          >Chi tiết</Button>\n          {\n            record.status === 'CONFIRMED' ? (\n              <Button\n                // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n                // disabled={!(moment(dateNow).isSame(moment(selectDate)))} //sai\n                disabled={!(moment(moment(dateNow).format('YYYY-MM-DDT00:00:00')).isSame(moment(selectDate)))} //đúng, tất cả lịch trong ngày đều có thể gửi đc, ko cần dúngs khung giờ\n                className=\"btn_send\"\n                style={{\n                  minWidth: '50px'\n                }}\n                type=\"primary\"\n                icon={<MailOutlined />}\n                onClick={() => {\n                  setDetailPatient(record);\n                  setModalExamination(true);\n                }}\n              >Gửi đơn thuốc</Button>\n            ) : (\n              <Tag color='success' key={record.status}>\n                Đã khám xong\n              </Tag>\n            )\n          }\n        </Space>\n      )\n    }\n  ];\n\n  console.log('check: ', !(moment(moment(dateNow).format('YYYY-MM-DDT00:00:00')).isSame(moment(selectDate))));\n  console.log('dateNow: ', moment(dateNow));\n  console.log('selectDate: ', selectDate);\n  return (\n    <div>\n      <h1 className=\"title\">\n        Danh sách lịch hẹn\n      </h1>\n      <div className=\"header_appointment\">\n        <DatePicker\n          className='date_picker'\n          picker=\"date\"\n          defaultValue={moment(selectDate, 'YYYY-MM-DD')}\n          format={'DD/MM/YYYY'}\n          showNow={true}\n          showTime={false}\n          style={{\n            borderRadius: '0px',\n            cursor: 'pointer',\n            fontSize: '14px',\n          }}\n          showToday={false}\n          // disabledDate={(current) => moment() <= current}\n          onChange={onChange}\n        />\n      </div>\n\n      <Table\n        loading={loading}\n        rowKey={'id'}\n        dataSource={dataPatient}\n        columns={columns}\n      // pagination={{\n      //   current: dataResponse?.meta?.page || 1, // so trang\n      //   total: dataResponse?.meta?.itemCount || 10, // tong tat ca \n      //   defaultPageSize: dataResponse?.meta?.take || 10,\n      //   showSizeChanger: true,\n      //   pageSizeOptions: ['10', '20', '50', '100'],\n      //   locale: { items_per_page: ' kết quả/trang' },\n      //   onChange: (page, pageSize) => {\n      //     setPagination({\n      //       ...pagination,\n      //       page,\n      //       pageSize,\n      //     });\n      //   },\n      // }}\n      // scroll={{ x: 'max-content' }}\n      />\n\n      <DetailPatient\n        detailPatient={detailPatient}\n        showModal={showModalDetail}\n        handleCancelModal={() => setModalDetail(false)}\n      // disabledBtnSave={!moment(currentDate).isBefore(moment(selectDate))}\n      />\n\n      <ExaminationDone\n        showModal={modalExamination}\n        handleCancelModal={() => setModalExamination(false)}\n        detailPatient={detailPatient}\n      />\n\n    </div>\n  )\n}\n\nexport default AppointmentSchedule;","import { SearchOutlined } from \"@ant-design/icons\";\nimport { Button, DatePicker, Select, Space, Table, Tag } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport ScheduleApis from \"../../../apis/Schedules\";\nimport UserApis from \"../../../apis/User\";\n\nconst { Option } = Select;\n\nconst WatchScheduleForManagerClinic = () => {\n  const [selectDate, setSelectDate] = useState(moment(new Date()).format('YYYY-MM-DDT08:00:00'));\n  const [optionsDoctor, setOptionsDoctor] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    pageSize: 10,\n  });\n  const [listSchedule, setListSchedule] = useState([]);\n  const [dataResponse, setDataResponse] = useState({});\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      getListDoctor(user?.clinic?.id);\n    }\n  }, [])\n\n  const getListDoctor = async (clinicId) => {\n    try {\n      const dataDoctor = await UserApis.getListUser({\n        clinicId: clinicId,\n      });\n      if (dataDoctor?.data?.data?.length > 0) {\n        const { data } = dataDoctor?.data;\n        const listDoctor = data?.map(item => {\n          return {\n            id: item.id,\n            name: `${item.firstName ? item.firstName : ''} ${item.middleName ? item.middleName : ''} ${item.lastName ? item.lastName : ''}`.trim(),\n          }\n        })\n\n        setOptionsDoctor(listDoctor || [])\n      } else if (dataDoctor?.data?.data?.length === 0) {\n        setOptionsDoctor([]);\n        setSelectedDoctor('');\n      }\n    } catch (error) {\n      // console.log('error: ', error);\n      setOptionsDoctor([]);\n      setSelectedDoctor('');\n    }\n  }\n  const onChangeDate = (date, stringDate) => {\n    setSelectDate(moment(date).format('YYYY-MM-DDTHH:mm:ss'));\n  };\n\n  const handleChangSelectDoctor = (value) => {\n    setSelectedDoctor(value);\n  }\n\n  const columns = [\n    {\n      title: 'Thời gian',\n      dataIndex: 'time',\n      key: 'time',\n      width: 100,\n    },\n    {\n      title: 'Ngày khám',\n      dataIndex: 'date',\n      key: 'date',\n      width: 100,\n    },\n    {\n      title: 'Số lượng bệnh nhân',\n      dataIndex: 'maxCount',\n      key: 'maxCount',\n      width: 50,\n    },\n    {\n      title: 'Đã đặt',\n      dataIndex: 'booked',\n      key: 'booked',\n      width: 50,\n    },\n    {\n      title: 'Trạng thái',\n      dataIndex: 'status',\n      key: 'status',\n      width: 50,\n      align: 'center',\n      render: (_, record) => {\n        let color = '';\n        if (record.status === 'ACTIVE') color = 'green';\n        else if (record.status === 'CANCLE') color = 'red';\n        else if (record.status === 'WAITING') color = 'orange';\n        else color = 'red';\n\n        return (\n          <>\n            <Tag color={color} key={record.status}>\n              {record.status}\n            </Tag>\n          </>\n        )\n      }\n    }\n  ]\n\n  const handleGetListSchedule = async () => {\n    if (!selectedDoctor) {\n      toast.warning('Bạn chưa chọn bác sĩ!');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const dataSchedule = await ScheduleApis.getListSchedule({\n        page: pagination.page,\n        take: pagination.pageSize,\n        doctorId: selectedDoctor,\n        date: selectDate\n      })\n      console.log('dataSchedule: ', dataSchedule);\n      if (dataSchedule.data.data) {\n        // setListSchedule(dataSchedule.data.data || []);\n        const { data } = dataSchedule.data;\n        const newData = data.map(item => {\n          return {\n            id: item.id,\n            time: `${moment(item.timeStart).format('HH:mm')} - ${moment(item.timeEnd).format('HH:mm')}`,\n            date: moment(new Date(parseInt(item.date))).format('DD/MM/YYYY'),\n            count: 'chua tra ve',\n            status: item.status,\n            maxCount: item?.maxCount || 0,\n            booked: item?.booked || 0,\n          }\n        })\n        setListSchedule(newData || []);\n        setDataResponse(dataSchedule.data || null)\n        setLoading(false);\n      } else {\n        setListSchedule([]);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  return (\n    <div>\n      <h1>Danh sách lịch khám</h1>\n\n      <div className=\"input_filter\">\n        <Space>\n          <DatePicker\n            className='date_picker'\n            picker=\"date\"\n            defaultValue={moment(selectDate, 'YYYY-MM-DD')}\n            format={'DD/MM/YYYY'}\n            showNow={true}\n            showTime={false}\n            style={{\n              borderRadius: '0px',\n              cursor: 'pointer',\n              fontSize: '14px',\n            }}\n            showToday={false}\n            disabledDate={(current) => moment() >= current}\n            onChange={onChangeDate}\n            size='large'\n          />\n\n          <Select\n            showSearch\n            style={{ height: '100%' }}\n            size='large'\n            value={selectedDoctor}\n            placeholder='Chọn bác sĩ'\n            className='select'\n            onChange={handleChangSelectDoctor}\n            filterOption={(input, option) =>\n              option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\n              // return option?.children !== null && option?.children?.toLowerCase().includes(input.trim().toLowerCase());\n            }\n          >\n            {optionsDoctor.length && optionsDoctor.map((item) => (\n              <Option key={item.id} value={item.id} label={item.name}>\n                {item.name}\n              </Option>\n            ))}\n          </Select>\n\n          <Button\n            size='large'\n            type='primary'\n            icon={<SearchOutlined />}\n            onClick={handleGetListSchedule}\n          >Tìm kiếm</Button>\n        </Space>\n      </div>\n\n      <div className=\"table_list_schdule\">\n        <Table\n          loading={loading}\n          rowKey={'id'}\n          dataSource={listSchedule}\n          columns={columns}\n          pagination={{\n            current: dataResponse?.meta?.page || 1, // so trang\n            total: dataResponse?.meta?.itemCount || 10, // tong tat ca \n            defaultPageSize: dataResponse?.meta?.take || 10,\n            showSizeChanger: true,\n            pageSizeOptions: ['10', '20', '50', '100'],\n            locale: { items_per_page: ' kết quả/trang' },\n            onChange: (page, pageSize) => {\n              setPagination({\n                ...pagination,\n                page,\n                pageSize,\n              });\n            },\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default WatchScheduleForManagerClinic;","import { Button, Col, DatePicker, Form, Input, Modal, Spin, Row, Select } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport './CreateDoctor.scss';\nimport { toast } from 'react-toastify';\nimport DoctorApis from '../../../../apis/Doctor';\n\nconst { Option } = Select;\nconst listGender = [\n  {\n    key: 'MALE',\n    value: 'Nam'\n  },\n  {\n    key: 'FEMALE',\n    value: 'Nữ'\n  },\n  {\n    key: 'OTHER',\n    value: 'Khác'\n  }\n]\n\nconst listRole = [\n  {\n    key: 'HEAD_OF_DOCTOR',\n    value: 'Trưởng khoa'\n  },\n  {\n    key: 'DOCTOR',\n    value: 'Bác sĩ'\n  },\n  {\n    key: 'MANAGER_CLINIC',\n    value: 'Quản lý phòng khám'\n  }\n]\n\nconst CreateDoctor = ({\n  isShowModal,\n  handleCancelModal, // function cancel\n  clinicId,\n  optionsSpecialty\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleAddNewDoctor = async (value) => {\n    console.log('value: ', value);\n    try {\n      setLoading(true)\n      const dataRes = await DoctorApis.createDoctor({\n        ...value,\n        clinicId: clinicId\n      })\n      // \n      if (dataRes.status === 200) {\n        setLoading(false);\n        toast.success('Thêm bác thành công');\n        handleCancelModal();\n        form.setFieldsValue({\n          firstName: '',\n          middleName: '',\n          lastName: '',\n          email: '',\n          gender: undefined,\n          role: undefined,\n          clinicId: undefined,\n          specialtyId: undefined\n        })\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n      if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\n        toast.error('Bác sĩ đã tồn tại!');\n        return ;\n      }\n      toast.error('Thêm bác sĩ không thành công!');\n    }\n  }\n\n\n  return (\n    <Modal\n      className='create_modal'\n      title={\n        <>\n          <div>Thêm bác sĩ</div>\n        </>\n      }\n      open={isShowModal}\n      onCancel={() => {\n        !loading && handleCancelModal()\n      }}\n      width={700}\n      footer={false}\n    >\n      <Spin spinning={loading}>\n        <Form\n          name='user'\n          onFinish={(values) => handleAddNewDoctor(values)}\n          autoComplete='off'\n          layout='vertical'\n          form={form}\n        >\n          <Row gutter={24}>\n            <Col span={8}>\n              <Form.Item\n                name={'firstName'}\n                label={<span className='txt_label'>Họ</span>}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Họ không được để trống',\n                  }\n                ]}\n              >\n                <Input\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Họ'} />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name={'middleName'}\n                label={<span className='txt_label'>Tên đệm</span>}\n              >\n                <Input\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Tên đệm'} />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name={'lastName'}\n                label={<span className='txt_label'>Tên</span>}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Tên không được để trống',\n                  }\n                ]}\n              >\n                <Input\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Tên'} />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name={'email'}\n                label={<span className='txt_label'>Email</span>}\n                rules={[\n                  { max: 255, message: 'Email tối đa 255 ký tự!' },\n                  {\n                    required: true,\n                    message: 'Email không được để trống',\n                  },\n                  {\n                    validator: (_, value) => {\n                      const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\n                      if ((regex.test(value) && value)) {\n                        return Promise.resolve();\n                      } else {\n                        return Promise.reject('Email không đúng định dạng');\n                      }\n                    },\n                  },\n                ]}\n              >\n                <Input\n                  size='middle'\n                  className='txt_input'\n                  placeholder={'Email'} />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name={'gender'}\n                label={<span className='txt_label'>Giới tính</span>}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Giới tính không được để trống',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  size='middle'\n                  placeholder={true ? 'Chọn giới tính' : 'Không có thông tin'}\n                  className='txt_input'\n                >\n                  {listGender.map((item, index) => (\n                    <Option key={index} value={item.key}>\n                      {item.value}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name={'phoneNumber'}\n                label={<span className='txt_label'>Số điện thoại</span>}\n                rules={[\n                  {\n                    max: 20,\n                    message: 'Số điện thoại tối đa 20 ký tự',\n                  },\n                ]}\n              >\n                <Input\n                  className='txt_input'\n                  size='middle'\n                  placeholder={true ? 'Số điện thoại' : 'Không có thông tin'}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item name={'birthday'} label={<span className='txt__label'>Ngày sinh</span>}>\n                <DatePicker\n                  picker='date'\n                  showNow={false}\n                  // showTime\n                  placeholder={true ? 'Chọn ngày' : 'Không có thông tin'}\n                  size={'middle'}\n                  format={'DD/MM/YYYY'}\n                  style={{\n                    width: '100%',\n                    cursor: 'pointer',\n                    fontSize: '14px',\n                  }}\n                  className='txt_input'\n                  disabledDate={(current) => moment() <= current}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={24}>\n              <Form.Item\n                name={'role'}\n                label={<span className='txt_label'>Vai trò</span>}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vai trò không được để trống',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  size='middle'\n                  placeholder={true ? 'Chọn vai trò' : 'Không có thông tin'}\n                  className='txt_input'\n                >\n                  {listRole.map((item, index) => (\n                    <Option key={index} value={item.key}>\n                      {item.value}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n      \n            <Col span={24}>\n              <Form.Item\n                name={'specialtyId'}\n                label={<span className='txt_label'>Chuyên khoa</span>}\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: 'Giới tính không được để trống',\n              //   },\n              // ]}\n              >\n                <Select\n                  showSearch\n                  style={{ width: '100%' }}\n                  size='middle'\n                  placeholder={true ? 'Chọn chuyên khoa' : 'Không có thông tin'}\n                  className='txt_input'\n                  filterOption={(input, option) =>\n                    option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\n                  }\n                >\n                  {optionsSpecialty.length && optionsSpecialty.map((item) => (\n                    <Option key={item.id} value={item.id}>\n                      {item.name}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Col span={24} style={{ textAlign: 'center' }}>\n            <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\n              Hủy\n            </Button>\n            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n              Thêm bác sĩ\n            </Button>\n          </Col>\n        </Form>\n      </Spin>\n    </Modal >\n  )\n}\n\nexport default CreateDoctor;","import { LockOutlined, PlusCircleOutlined, SearchOutlined, UnlockOutlined } from \"@ant-design/icons\";\nimport { Alert, Button, Input, Modal, Space, Switch, Table } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport DoctorApis from \"../../../apis/Doctor\";\nimport SpecialtyApis from \"../../../apis/Specialty\";\nimport UserApis from \"../../../apis/User\";\nimport FilterObjDropDown from \"../../../components/Filter/FilterObjDropDown\";\nimport Stroke from \"../../../components/Icon/CareStaff/Stoke\";\nimport FilterIcon from \"../../../components/Icon/Doctor/FilterIcon\";\nimport CreateDoctor from \"./components/CreateDoctor\";\nimport './index.scss';\n\nconst listRole = [\n  {\n    id: 'HEAD_OF_DOCTOR',\n    name: 'Trưởng khoa'\n  },\n  {\n    id: 'DOCTOR',\n    name: 'Bác sĩ'\n  },\n  {\n    id: 'MANAGER_CLINIC',\n    name: 'Quản lý phòng khám'\n  }\n]\n\nconst role = {\n  HEAD_OF_DOCTOR: 'Trưởng khoa',\n  DOCTOR: 'Bác sĩ',\n  MANAGER_CLINIC: 'Quản lý phòng khám',\n}\n\nconst listStatus = [\n  {\n    id: 0,\n    name: 'Khoá'\n  },\n  {\n    id: 1,\n    name: 'Kích hoạt'\n  },\n]\n\nconst DoctorForManagerClinic = () => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [search, setSearch] = useState('');\n  const typingSearch = useRef(null);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    pageSize: 10,\n  });\n  const [isModalCreate, setModalCreate] = useState(false);\n  const [showFilter, setShowFilter] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [listSpecialty, setListSpecialty] = useState([]);\n  const [checkedList, setCheckedList] = useState({\n    role: [],\n    status: [],\n    specialty: [],\n  })\n  const [listDoctor, setListDoctor] = useState([]);\n  const [dataResponse, setDataResponse] = useState({});\n  const [showBtn, setShowBtn] = useState([]);\n  const [isShowModalDelete, setShowModalDelete] = useState(false);\n  const [userLocal, setUserLocal] = useState(null);\n\n\n  useEffect(() => {\n    document.title = 'Quản lý bác sĩ';\n    const userLocalStorage = JSON.parse(localStorage.getItem('user'));\n    if(userLocalStorage) {\n      setUserLocal(userLocalStorage);\n      getListSpecialty(userLocalStorage);\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!isModalCreate && !isShowModalDelete && userLocal)\n      getListDoctor();\n  }, [checkedList, pagination, isModalCreate, isShowModalDelete, search, userLocal])\n\n\n  useEffect(() => {\n    const checkShow = [];\n    selectedRowKeys.forEach((item) => {\n      const label = listDoctor?.find((elm) => elm.id === item);\n      if (label) checkShow.push(label);\n    });\n    const btnArray = [];\n    if (checkShow.some((item) => item.status === true)) {\n      btnArray.push(\n        <Button\n          className='btn_active'\n          icon={<LockOutlined style={{ transform: 'translateY(-1px)' }} />}\n          onClick={() => {\n            handleChangeStatus({\n              userIds: selectedRowKeys,\n              status: false,\n            })\n          }}\n        >\n          <span className='ml_8'>Khoá tất cả</span>\n        </Button>,\n      );\n    }\n    if (checkShow.some((item) => item.status === false)) {\n      btnArray.push(\n        <Button\n          className='btn_active'\n          icon={<UnlockOutlined style={{ transform: 'translateY(-1px)' }} />}\n          onClick={() => {\n            handleChangeStatus({\n              userIds: selectedRowKeys,\n              status: true,\n            })\n          }}\n        >\n          <span className='ml_8'>Mở tất cả</span>\n        </Button>,\n      );\n    }\n\n    setShowBtn([...btnArray]);\n  }, [selectedRowKeys]);\n  const getListDoctor = async () => {\n    try {\n      setLoading(true);\n      const dataRes = await DoctorApis.getListDoctor({\n        page: pagination.page,\n        take: pagination.pageSize,\n        status: checkedList.status || undefined,\n        role: checkedList.role.length ? checkedList.role : ['DOCTOR', 'MANAGER_CLINIC', 'HEAD_OF_DOCTOR'],\n        clinicId: userLocal.clinic.id,\n        specialtyIds: checkedList.specialty || undefined,\n        q: search || undefined,\n      })\n      if (dataRes?.data?.data) {\n        const { data } = dataRes?.data;\n        const listDoctor = data.map(item => {\n          const name = `${item.firstName ? item.firstName : ''} ${item.middleName ? item.middleName : ''} ${item.lastName ? item.lastName : ''}`.trim();\n          return {\n            id: item.id,\n            status: item.status,\n            name: name,\n            email: item.email || '',\n            gender: item.gender === 'FEMALE' ? 'Nữ' : item.gender === 'MALE' ? 'Nam' : 'Khác' || '',\n            birthday: item.birthday ? moment(item.birthday).format('DD/MM/YYYY') : '',\n            phoneNumber: item.phoneNumber || '',\n            role: item.role ? role[item.role] : '',\n            clinic: item.clinic ? item.clinic.name : '',\n            specialty: item.specialty ? item.specialty.name : '',\n          }\n        })\n        setListDoctor(listDoctor || []);\n        setDataResponse(dataRes?.data ? dataRes?.data : {});\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log('erroe: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getListSpecialty = async (dataUser) => {\n    try {\n      const dataSpecialty = await SpecialtyApis.getSpecialtyByClinic(dataUser.clinic.id);\n      if (dataSpecialty?.data?.data) {\n        const { data } = dataSpecialty?.data;\n        const listSpecialty = data?.map(item => {\n          return {\n            id: item.id,\n            name: item?.name,\n          }\n        })\n\n        setListSpecialty(listSpecialty || []);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setListSpecialty([]);\n    }\n  }\n\n  const handleSearch = (e) => {\n    if (typingSearch.current) {\n      clearTimeout(typingSearch.current);\n    }\n    typingSearch.current = setTimeout(() => {\n      setSearch(e.target.value);\n    }, 500)\n  }\n\n  const handleCheck = (key, value) => {\n    setCheckedList({\n      ...checkedList,\n      [key]: value,\n    });\n  };\n\n  const handleCheckAll = (key, value) => {\n    setCheckedList({\n      ...checkedList,\n      [key]: value,\n    });\n  };\n\n  const handleDeleteDoctor = async () => {\n    try {\n      if (selectedRowKeys.length > 0) {\n        const dataRes = await UserApis.deleteUser({\n          userIds: selectedRowKeys,\n        })\n        if (dataRes?.data === true && dataRes?.status === 200) {\n          toast.success('Xoá bác sĩ thành công');\n        }\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Xoá bác sĩ không thành công!');\n    }\n    setShowModalDelete(false);\n    setSelectedRowKeys([]);\n  };\n\n  const handleChangeStatus = async ({ userIds, status }) => {\n    try {\n      const dataRes = await UserApis.changeStatus({ userIds, status });\n      if (dataRes?.data === true && dataRes?.status === 200) {\n        toast.success('Thay đổi trạng thái thành công!');\n        getListDoctor();\n        setSelectedRowKeys([]);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Thay đổi trạng thái không thành công!');\n    }\n  }\n\n  const onSelectChange = (newSelectedRowKeys) => {\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n\n  const columns = [\n    {\n\n      title: 'Trạng thái',\n      dataIndex: 'status',\n      key: 'status',\n      width: 50,\n      align: 'center',\n      render: (_, record) => (\n        <Switch\n          checked={record?.status === true}\n          onChange={() => handleChangeStatus({\n            userIds: [record.id],\n            status: record.status === true ? false : true\n          })}\n        />\n      ),\n      fixed: true,\n    },\n    {\n      title: 'Họ tên',\n      dataIndex: 'name',\n      key: 'name',\n      ellipsis: true,\n      width: 100,\n      fixed: true,\n      render: (_, record) => (\n        <div\n          style={{\n            cursor: 'pointer',\n          }}\n        >\n          <Link to={location => `${location.pathname}/chi-tiet/${record.id}`}>{record.name}</Link>\n        </div>\n      )\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      ellipsis: true,\n      width: 100,\n    },\n    {\n      title: 'Giới tính',\n      dataIndex: 'gender',\n      key: 'gender',\n      ellipsis: true,\n      width: 100,\n    },\n    {\n      title: 'Ngày sinh',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      ellipsis: true,\n      width: 100,\n    },\n    {\n      title: 'Số điện thoại',\n      dataIndex: 'phoneNumber',\n      key: 'phoneNumber',\n      ellipsis: true,\n      width: 100,\n    },\n    {\n      title: 'Vai trò',\n      dataIndex: 'role',\n      key: 'role',\n      ellipsis: true,\n      width: 100,\n    },\n    {\n      title: 'Tên phòng khám',\n      dataIndex: 'clinic',\n      key: 'clinic',\n      ellipsis: true,\n      width: 100,\n    },\n    {\n      title: 'Chuyên khoa',\n      dataIndex: 'specialty',\n      key: 'specialty',\n      ellipsis: true,\n      width: 100,\n    }\n  ]\n\n  return (\n    <div>\n      <h1>Danh sách bác sĩ</h1>\n\n      <div className=\"header_doctor\">\n        <Space>\n          <Button\n            id={'btn__filter'}\n            icon={\n              <FilterIcon\n                style={{\n                  transform: 'translateY(2px)',\n                  fill: `${showFilter ? '#3863EF' : 'none'}`,\n                }}\n              />\n            }\n            onClick={() => setShowFilter(!showFilter)}\n          />\n          <Input\n            className='search_doctor'\n            size=\"large\"\n            placeholder=\"Tìm kiếm\"\n            suffix={<SearchOutlined />}\n            onChange={(e) => handleSearch(e)}\n          />\n        </Space>\n\n        <div className='list_button'>\n          <Button\n            className='button'\n            size=\"large\"\n            type=\"primary\"\n            icon={<PlusCircleOutlined />}\n            onClick={() => setModalCreate(true)}\n          >\n            Thêm mới\n          </Button>\n        </div>\n      </div>\n\n      {/* Bộ lọc */}\n      {showFilter && (\n        <Space\n          size={24}\n          style={{ marginTop: '10px', marginBottom: '20px', color: 'rgba(17, 17, 17, 0.45)' }}\n        >\n          <FilterObjDropDown\n            displayName={'Trạng thái'}\n            placeholder={'Trạng thái'}\n            placeholderSearch={false}\n            plainOptions={listStatus || []}\n            checkedList={checkedList.status}\n            keyFilter={'status'}\n            handleCheckAll={handleCheckAll}\n            handleCheck={handleCheck}\n          />\n          <FilterObjDropDown\n            displayName={'Vai trò'}\n            placeholder={'Vai trò'}\n            placeholderSearch={false}\n            plainOptions={listRole || []}\n            checkedList={checkedList.role}\n            keyFilter={'role'}\n            handleCheckAll={handleCheckAll}\n            handleCheck={handleCheck}\n          />\n\n          <FilterObjDropDown\n            displayName={'Chuyên khoa'}\n            placeholder={'Chuyên khoa'}\n            placeholderSearch={false}\n            plainOptions={listSpecialty || []}\n            checkedList={checkedList.specialty}\n            keyFilter={'specialty'}\n            handleCheckAll={handleCheckAll}\n            handleCheck={handleCheck}\n          />\n\n        </Space>\n      )}\n\n      {selectedRowKeys.length > 0 && (\n        <Alert\n          className='fontSizeAlert'\n          message={\n            <div>\n              <Space>\n                <span>Đã chọn: {selectedRowKeys.length}</span>\n\n                {showBtn}\n\n                <Button\n                  className='btn_active'\n                  icon={<Stroke className='transformY_2' />}\n                  onClick={() => {\n                    setShowModalDelete(true);\n                  }}\n                >\n                  <span className='ml_8'>Xóa</span>\n                </Button>\n              </Space>\n            </div>\n          }\n        />\n      )}\n\n      <Table\n        loading={loading}\n        rowKey={'id'}\n        dataSource={listDoctor}\n        columns={columns}\n        rowSelection={{\n          selectedRowKeys,\n          onChange: onSelectChange\n        }}\n        pagination={{\n          current: dataResponse?.meta?.page || 1, // so trang\n          total: dataResponse?.meta?.itemCount || 10, // tong tat ca \n          defaultPageSize: dataResponse?.meta?.take || 10,\n          showSizeChanger: true,\n          pageSizeOptions: ['10', '20', '50', '100'],\n          locale: { items_per_page: ' kết quả/trang' },\n          onChange: (page, pageSize) => {\n            setPagination({\n              ...pagination,\n              page,\n              pageSize,\n            });\n          },\n        }}\n        scroll={{ x: 'max-content' }}\n      />\n\n      <CreateDoctor \n        isShowModal={isModalCreate}\n        handleCancelModal={() => setModalCreate(false)}\n        clinicId={userLocal?.clinic?.id}\n        optionsSpecialty={listSpecialty}\n      />\n\n      <Modal\n        open={isShowModalDelete}\n        onOk={handleDeleteDoctor}\n        onCancel={() => setShowModalDelete(false)}\n        cancelText={'Hủy'}\n        okText={'Xóa'}\n        className='confirm_delete_label'\n        width={370}\n      >\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\n          Bạn có muốn xóa bác sĩ?\n        </h2>\n        {/* <Space direction='vertical'>\n          <Text>\n            Sau khi xóa nhãn, hệ thống sẽ tự động gỡ nhãn khỏi các lượt tương tác đã được gắn nhãn\n            trước đây.\n            <br /> Vui lòng cân nhắc trước khi xóa.\n          </Text>\n\n          <div style={{ background: '#fdefe4', padding: '10px', borderRadius: '3px' }}>\n            <Text style={{ fontWeight: 600, color: '#e59935' }}>\n              <WarningFilled /> Lưu ý:\n              <br />\n            </Text>\n            <Text>Các nhãn tạo từ Facebook được hệ thống tự động đồng bộ, không thể xóa.</Text>\n          </div>\n        </Space> */}\n      </Modal>\n    </div>\n  )\n}\n\nexport default DoctorForManagerClinic;","import { Spin, Tabs } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport ClinicApis from \"../../../apis/Clinic\";\nimport BackIcon from \"../../../components/Icon/Common/BackIcon\";\nimport TabClinicInformation from \"../../Clinic/components/DetailClinic/TabClinicInformation\";\nimport TabClinicIntroduce from \"../../Clinic/components/DetailClinic/TabClinicIntroduce\";\n\nconst ClinicForManagerClinic = () => {\n  const [clinicId, setClinicId] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [dataClinic, setDataClinic] = useState({});\n\n  useEffect(() => {\n    document.title = 'Thông tin phòng khám';\n    const userLocal = JSON.parse(localStorage.getItem('user'))\n    const getClinicId = userLocal?.clinic?.id;\n    if (getClinicId) {\n      setClinicId(getClinicId);\n      getClinic(getClinicId);\n    }\n  }, []);\n\n  const getClinic = async (dataClinicId) => {\n    setLoading(true);\n    try {\n      const dataResClinic = await ClinicApis.getClinicById(dataClinicId);\n      if (dataResClinic?.status === 200) {\n        setDataClinic(dataResClinic?.data || {});\n        setLoading(false)\n      }\n    } catch (error) {\n      console.log('error: ', error);\n    }\n  }\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"spin\">\n          <Spin />\n        </div>\n\n      ) : (\n        <>\n          <Tabs defaultActiveKey='table_doctor'>\n            <Tabs.TabPane tab=\"Thông tin phòng khám\" key=\"clinic_information\">\n              <TabClinicInformation dataClinic={dataClinic || {}} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Giới thiệu về phòng khám\" key=\"clinic_introduce\">\n              <TabClinicIntroduce\n                dataClinicIntroduce={dataClinic?.clinicInfor || {}}\n                clinicId={clinicId}\n              />\n            </Tabs.TabPane>\n          </Tabs>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ClinicForManagerClinic;","import { PlusOutlined } from '@ant-design/icons';\nimport { Button, Col, DatePicker, Form, Input, InputNumber, message, Row, Select, Space, Spin, Tabs, Upload } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport './index.scss';\nimport { toast } from 'react-toastify';\nimport UserApis from '../../../../../apis/User';\nimport baseURL from '../../../../../utils/url';\nimport SpecialtyApis from '../../../../../apis/Specialty';\nimport DoctorApis from '../../../../../apis/Doctor';\nimport BackIcon from '../../../../../components/Icon/Common/BackIcon';\nimport { listGender } from '../../../../../common/constants/gender';\nimport { listPayment, listPositon, listRole } from '../../../../../common/constants/doctor';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst modulesQill = {\n  toolbar: [\n    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n    [{ size: [] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{ 'list': 'ordered' }, { 'list': 'bullet' },\n    { 'indent': '-1' }, { 'indent': '+1' }],\n    ['link', 'image', 'video'],\n    ['clean']\n  ],\n  clipboard: {\n    matchVisual: false,\n  },\n  history: {\n    delay: 1000,\n    maxStack: 50,\n    userOnly: false\n  },\n  // imageResize: {\n  // displayStyles: {\n  //   backgroundColor: 'black',\n  //   border: 'none',\n  //   color: 'white'\n  // },\n  // modules: ['Resize', 'DisplaySize', 'Toolbar']\n  // },\n}\nconst formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video'\n]\n\nconst DetailDoctorForManagerClinic = () => {\n  const [dataDoctor, setDataDoctor] = useState({});\n  const [dataDoctorRes, setDataDoctorRes] = useState({});\n  const [form] = Form.useForm();\n  const [formIntroduce] = Form.useForm();\n  const [optionsClinic, setOptionsClinic] = useState([]);\n  const [optionsSpecialty, setOptionsSpecialty] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [editInformation, setEditInformation] = useState(false);\n  const [editIntroduce, setEditIntroduce] = useState(false);\n  const [fileListAvatar, setFileListAvatar] = useState([]);\n  const [doctorInforId, setDoctorInforId] = useState('');\n  const [dataDoctorInfo, setDataDoctorInfo] = useState({})\n\n  let { doctorId } = useParams();\n\n  useEffect(() => {\n    document.title = 'Thông tin bác sĩ';\n    const userLocalStorage = JSON.parse(localStorage.getItem('user'));\n    if (userLocalStorage) getListSpecialty(userLocalStorage)\n  }, [])\n\n  useEffect(() => {\n    if (doctorId) {\n      getInfoDoctor(doctorId);\n    }\n  }, [doctorId]);\n\n  const getInfoDoctor = async (doctorId) => {\n    setLoading(true);\n    try {\n      const dataRes = await UserApis.getUserById(doctorId);\n      if (dataRes.status === 200) {\n        const { data } = dataRes\n        setDataDoctor({\n          id: data.id,\n          firstName: data?.firstName || '',\n          middleName: data?.middleName || '',\n          lastName: data?.lastName || '',\n          email: data?.email || '',\n          gender: data?.gender || null,\n          phoneNumber: data?.phoneNumber || null,\n          birthday: data?.birthday || '',\n          address: data?.address || '',\n          role: data.role || '',\n          clinic: data.clinic ? data.clinic.id : '',\n          specialty: data.specialty ? data.specialty.name : '',\n          avatar: data.avatar || '',\n          religion: data?.religion || '',\n          nation: data?.nation || '',\n          identityCardNumber: data?.identityCardNumber || '',\n          // avatar: data?.avatar ? [{\n          //   uid: '-1',\n          //   name: 'image.jpg',\n          //   status: 'done',\n          //   url: `http://14.225.255.59:8000/${data.avatar}`\n          // }] : [],\n        });\n        setFileListAvatar(data?.avatar ? [{\n          uid: '-1',\n          name: 'image.jpg',\n          status: 'done',\n          url: `${baseURL}${data.avatar}`\n        }] : []);\n\n        form.setFieldsValue({\n          firstName: data?.firstName || '',\n          middleName: data?.middleName || '',\n          lastName: data?.lastName || '',\n          email: data?.email || '',\n          gender: data?.gender || null,\n          phoneNumber: data?.phoneNumber || null,\n          birthday: data?.birthday ? moment(data?.birthday) : null,\n          address: data?.address || '',\n          role: data.role || '',\n          clinicId: data?.clinic ? data.clinic?.id : null,\n          specialtyId: data?.specialty ? data.specialty?.id : null,\n          avatar: data?.avatar || null,\n          religion: data?.religion || '',\n          nation: data?.nation || '',\n          identityCardNumber: data?.identityCardNumber || '',\n        })\n        setDataDoctorRes(data);\n        if (data?.doctorInfor) {\n          const { doctorInfor } = data;\n          setDoctorInforId(data?.doctorInfor?.id || '');\n          // await getInfoDoctorExtra(data?.doctorInfor || {});\n          formIntroduce.setFieldsValue({\n            position: doctorInfor?.position || null,\n            price: doctorInfor?.price || 0,\n            payment: doctorInfor?.payment || null,\n            introduct: doctorInfor?.introduct || null,\n            note: doctorInfor?.note || null,\n            description: doctorInfor?.description || null,\n          })\n        }\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getListSpecialty = async (dataUser) => {\n    setLoading(true);\n    try {\n      const dataRes = await SpecialtyApis.getSpecialtyByClinic(dataUser.clinic.id);\n      if (dataRes?.data?.data) {\n        const { data } = dataRes?.data;\n        const listSpecialty = data?.map(item => {\n          return {\n            id: item.id,\n            name: item.name,\n          }\n        })\n        setOptionsSpecialty(listSpecialty || [])\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n      setOptionsSpecialty([]);\n    }\n  }\n\n  const handleBack = () => {\n    // const partName = location.pathname.split('/').slice(0, 3).join('/');\n    // console.log('partName: ', partName);\n    // history.push(partName);\n    window.history.back();\n  }\n\n  const onChangeAvatar = ({ fileList: newFileList }) => {\n    setFileListAvatar(newFileList);\n  };\n\n  const handleUpdateDoctor = async (value) => {\n    setLoading(true);\n    let newData = [];\n    if (value.avatar === dataDoctor.avatar || (!value.avatar) || (value.avatar && value?.avatar?.fileList?.length === 0)) {\n      const { avatar, ...resData } = value;\n      newData = resData\n    } else if (value?.avatar?.fileList?.length > 0) {\n      const fileSize = value?.avatar?.fileList[0]?.size;\n      const isLt2M = fileSize / 1024 / 1024 < 2;\n      // console.log('isLt2M: ', isLt2M);\n      if (!isLt2M) {\n        message.error('Chọn ảnh nhỏ hơn 2MB!');\n      }\n      let formData = new FormData();\n      const { avatar, ...resData } = value;\n      for (const item in value) {\n        if (item === 'avatar') {\n          formData.append('file', value[item].fileList[0]?.originFileObj);\n        }\n        if (!value[item]) break;\n\n        formData.append(item, value[item]);\n      }\n      // formData.append('file', avatar?.fileList[0]?.originFileObj);\n      newData = formData;\n    }\n\n    try {\n      const dataRes = await DoctorApis.updateDoctor(newData, doctorId);\n      if (dataRes.status === 200) {\n        setLoading(false);\n        setEditInformation(false);\n        toast.success('Cập nhật thông tin bác sĩ thành công');\n        setEditInformation(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n      if (error.response.data.error === 'USER_ALREADY_EXIST' && error.response.data.status === 409) {\n        toast.error('Bác sĩ đã tồn tại!');\n        return;\n      }\n      toast.error('Cập nhật thông tin bác sĩ không thành công!');\n    }\n  }\n\n  const handleUpdateDoctorIntroduce = async (values) => {\n    setLoading(true);\n    if (!doctorInforId && Object.keys(dataDoctorInfo).length === 0) {\n      try {\n        const dataSaveDoctorInfo = await DoctorApis.createDoctorInfor({\n          ...values,\n          doctorId: doctorId,\n        })\n        if (dataSaveDoctorInfo?.status === 200) {\n          toast.success('Thêm giới thiệu bác sĩ thành công');\n          setLoading(false);\n          setEditIntroduce(false);\n        }\n      } catch (error) {\n        console.log('error: ', error);\n        toast.error('Thêm giới thiệu bác sĩ không thành công!');\n        setLoading(false);\n      }\n\n    } else {\n      // cCập nhật thông tin giới thiệu\n      try {\n        const dataSaveDoctorInfo = await DoctorApis.updateDoctorInfoExtra(values, doctorInforId);\n        if (dataSaveDoctorInfo?.status === 200) {\n          toast.success('Thay đổi thông tin giới thiệu bác sĩ thành công');\n          setLoading(false);\n          setEditIntroduce(false);\n        }\n      } catch (error) {\n        console.log('error: ', error);\n        toast.error('Thay đổi thông tin giới thiệu bác sĩ không thành công!');\n        setLoading(false);\n      }\n    }\n  }\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"spin\">\n          <Spin />\n        </div>\n\n      ) : (\n        <>\n          <div className='header_detail_doctor'>\n            <Space>\n              <BackIcon\n                onClick={handleBack}\n                style={{\n                  cursor: 'pointer',\n                  height: '100%'\n                }}\n              />\n              <span className='name_doctor'>\n                {`${dataDoctor.firstName || ''} ${dataDoctor.middleName || ''} ${dataDoctor.lastName || ''}`.trim()}\n              </span>\n            </Space>\n          </div>\n          <Tabs defaultActiveKey=\"doctor_information\">\n            <Tabs.TabPane tab=\"Thông tin bác sĩ\" key=\"doctor_information\">\n              <div className=\"doctor_information\">\n                <div className=\"header_doctor_information\">\n                  <div style={{ fontSize: '17px' }}>Thông tin bác sĩ</div>\n                  <div className='button_edit'>\n                    {!editInformation && (\n                      <Button\n                        type='primary'\n                        onClick={() => setEditInformation(true)}\n                      >\n                        Chỉnh sửa thông tin bác sĩ\n                      </Button>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"form_doctor_information\">\n                  <Form\n                    name='doctor'\n                    onFinish={(values) => handleUpdateDoctor(values)}\n                    autoComplete='off'\n                    layout='vertical'\n                    form={form}\n                  >\n                    <Row gutter={24}>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'firstName'}\n                          label={<span className='txt_label'>Họ</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Họ không được để trống',\n                            }\n                          ]}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            size='middle'\n                            className='txt_input'\n                            placeholder={dataDoctor?.firstName ? 'Họ' : 'Không có thông tin'} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'middleName'}\n                          label={<span className='txt_label'>Tên đệm</span>}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            size='middle'\n                            className='txt_input'\n                            placeholder={dataDoctor?.middleName ? 'Tên đệm' : 'Không có thông tin'} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'lastName'}\n                          label={<span className='txt_label'>Tên</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Tên không được để trống',\n                            }\n                          ]}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            size='middle'\n                            className='txt_input'\n                            placeholder={dataDoctor?.lastName ? 'Tên' : 'Không có thông tin'} />\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={6}>\n                        <Form.Item\n                          name={'avatar'}\n                          label={<span className='txt_label'>Ảnh bác sĩ</span>}\n                        // rules={[\n                        //   {\n                        //     required: true,\n                        //     message: 'Tên chuyên khoa không được để trống',\n                        //   }\n                        // ]}\n                        >\n                          <Upload\n                            disabled={!editInformation}\n                            listType=\"picture-card\"\n                            fileList={fileListAvatar}\n                            beforeUpload={() => false}\n                            onChange={onChangeAvatar}\n                            maxCount={1}\n                          >\n                            <div>\n                              <PlusOutlined />\n                              <div style={{ marginTop: 8 }}>Upload</div>\n                            </div>\n                          </Upload>\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={6}>\n                        <Form.Item\n                          name={'email'}\n                          label={<span className='txt_label'>Email</span>}\n                          rules={[\n                            { max: 255, message: 'Email tối đa 255 ký tự!' },\n                            {\n                              required: true,\n                              message: 'Email không được để trống',\n                            },\n                            {\n                              validator: (_, value) => {\n                                const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\n                                if ((regex.test(value) && value)) {\n                                  return Promise.resolve();\n                                } else {\n                                  return Promise.reject('Email không đúng định dạng');\n                                }\n                              },\n                            },\n                          ]}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            size='middle'\n                            className='txt_input'\n                            placeholder={dataDoctor?.email ? 'Email' : 'Không có thông tin'} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'gender'}\n                          label={<span className='txt_label'>Giới tính</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Giới tính không được để trống',\n                            },\n                          ]}\n                        >\n                          <Select\n                            disabled={!editInformation}\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={dataDoctor?.gender ? 'Chọn giới tính' : 'Không có thông tin'}\n                            className='txt_input'\n                          >\n                            {listGender.map((item, index) => (\n                              <Option key={index} value={item.key}>\n                                {item.value}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item\n                          name={'phoneNumber'}\n                          label={<span className='txt_label'>Số điện thoại</span>}\n                          rules={[\n                            {\n                              max: 20,\n                              message: 'Số điện thoại tối đa 20 ký tự',\n                            },\n                          ]}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            className='txt_input'\n                            size='middle'\n                            placeholder={dataDoctor?.phoneNumber ? 'Số điện thoại' : 'Không có thông tin'}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <Form.Item name={'birthday'} label={<span className='txt__label'>Ngày sinh</span>}>\n                          <DatePicker\n                            disabled={!editInformation}\n                            picker='date'\n                            showNow={false}\n                            // showTime\n                            placeholder={dataDoctor?.birthday ? 'Chọn ngày' : 'Không có thông tin'}\n                            size={'middle'}\n                            format={'DD/MM/YYYY'}\n                            style={{\n                              width: '100%',\n                              cursor: 'pointer',\n                              fontSize: '14px',\n                            }}\n                            className='txt_input'\n                            disabledDate={(current) => moment() <= current}\n                          />\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={8}>\n                        <Form.Item\n                          name={'nation'}\n                          label={<span className='txt_label'>Quốc gia</span>}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            className='txt_input'\n                            size='middle'\n                            placeholder={dataDoctor?.nation ? 'Quốc gia' : 'Không có thông tin'}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={8}>\n                        <Form.Item\n                          name={'religion'}\n                          label={<span className='txt_label'>Tôn giáo</span>}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            className='txt_input'\n                            size='middle'\n                            placeholder={dataDoctor?.religion ? 'Tôn giáo' : 'Không có thông tin'}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={8}>\n                        <Form.Item\n                          name={'identityCardNumber'}\n                          label={<span className='txt_label'>CCCD/CTM</span>}\n                        >\n                          <Input\n                            disabled={!editInformation}\n                            className='txt_input'\n                            size='middle'\n                            placeholder={dataDoctor?.identityCardNumber ? 'CCCD/CMT' : 'Không có thông tin'}\n                          />\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={10}>\n                        <Form.Item\n                          name={'role'}\n                          label={<span className='txt_label'>Vai trò</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Vai trò không được để trống',\n                            },\n                          ]}\n                        >\n                          <Select\n                            disabled={!editInformation}\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={dataDoctor?.role ? 'Chọn vai trò' : 'Không có thông tin'}\n                            className='txt_input'\n                          >\n                            {listRole.map((item, index) => (\n                              <Option key={index} value={item.key}>\n                                {item.value}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={14}>\n                        <Form.Item\n                          name={'specialtyId'}\n                          label={<span className='txt_label'>Chuyên khoa</span>}\n                        // rules={[\n                        //   {\n                        //     required: true,\n                        //     message: 'Giới tính không được để trống',\n                        //   },\n                        // ]}\n                        >\n                          <Select\n                            disabled={!editInformation}\n                            showSearch\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={dataDoctor?.specialtyId ? 'Chọn chuyên khoa' : 'Không có thông tin'}\n                            className='txt_input'\n                            filterOption={(input, option) =>\n                              option?.label !== null && option?.label?.toLowerCase().includes(input.trim().toLowerCase())\n                            }\n                          >\n                            {optionsSpecialty.length && optionsSpecialty.map((item) => (\n                              <Option key={item.id} value={item.id}>\n                                {item.name}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                    {editInformation && (\n                      <Col span={24} style={{ textAlign: 'center' }}>\n                        <Button className='btn_cancel' danger size='middle' onClick={() => setEditInformation(false)}>\n                          Hủy chỉnh sửa\n                        </Button>\n                        <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n                          Cập nhật\n                        </Button>\n                      </Col>\n                    )}\n                  </Form>\n                </div>\n              </div>\n\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Giới thiệu về bác sĩ\" key=\"doctor_introduce\" disabled={dataDoctor && dataDoctor.role === 'MANAGER_CLINIC'}>\n              <div className=\"doctor_introduce\">\n                <div className=\"header_doctor_introduce\">\n                  <div style={{ fontSize: '17px' }}>Giới thiệu chi tiết bác sĩ</div>\n                  <div className='button_edit'>\n                    {!editIntroduce && (\n                      <Button\n                        type='primary'\n                        onClick={() => setEditIntroduce(true)}\n                      >\n                        {!doctorInforId ? 'Thêm giới thiệu bác sĩ' : 'Chỉnh sửa thông tin'}\n                      </Button>\n                    )}\n                  </div>\n                </div>\n                <div className=\"form_doctor_introduce\">\n                  <Form\n                    name='doctor_introduce'\n                    onFinish={(values) => handleUpdateDoctorIntroduce(values)}\n                    autoComplete='off'\n                    layout='vertical'\n                    form={formIntroduce}\n                  >\n                    <Row gutter={24}>\n                      <Col span={8}>\n                        <Form.Item\n                          name={'position'}\n                          label={<span className='txt_label'>Chức danh</span>}\n                        >\n                          <Select\n                            disabled={!editIntroduce}\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={true ? 'Chọn chức danh' : 'Không có thông tin'}\n                            className='txt_input'\n                          >\n                            {listPositon.map((item, index) => (\n                              <Option key={index} value={item.key}>\n                                {item.value}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col span={8}>\n                        <Form.Item\n                          name={'price'}\n                          label={<span className='txt_label'>Giá khám</span>}\n                        >\n                          <InputNumber\n                            defaultValue={0}\n                            style={{ width: '100%' }}\n                            formatter={(value) => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\").replace(/\\.(?=\\d{0,2}$)/g, \",\")}\n                            parser={(value) => value.replace(/\\$\\s?|(\\.*)/g, \"\").replace(/(\\,{1})/g, \".\")}\n                            placeholder={true ? 'Giá khám' : 'Không có thông tin'}\n                            disabled={!editIntroduce}\n                            className='txt_input'\n                            size='middle'\n                          />\n\n                        </Form.Item>\n                      </Col>\n                      <Col span={8}>\n                        <Form.Item\n                          name={'payment'}\n                          label={<span className='txt_label'>Phương thức thanh toán</span>}\n                        >\n                          <Select\n                            disabled={!editIntroduce}\n                            style={{ width: '100%' }}\n                            size='middle'\n                            placeholder={true ? 'Chọn phương thức thanh toán' : 'Không có thông tin'}\n                            className='txt_input'\n                          >\n                            {listPayment.map((item, index) => (\n                              <Option key={index} value={item.key}>\n                                {item.value}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col span={12}>\n                        <Form.Item\n                          name={'introduct'}\n                          label={<span className='txt_label'>Giới thiệu</span>}\n                        >\n                          <TextArea\n                            disabled={!editIntroduce}\n                            rows={4}\n                            placeholder='Giới thiệu bác sĩ'\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={12}>\n                        <Form.Item\n                          name={'note'}\n                          label={<span className='txt_label'>Ghi chú</span>}\n                        >\n                          <TextArea\n                            disabled={!editIntroduce}\n                            rows={4}\n                            placeholder='Ghi chú'\n                          />\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={24}>\n                        <Form.Item\n                          name={'description'}\n                          label={<span className='txt_label'>Mô tả bác sĩ</span>}\n                        >\n                          <ReactQuill\n                            readOnly={!editIntroduce}\n                            className={!editIntroduce ? 'react_quill_disable' : ''}\n                            theme=\"snow\"\n                            placeholder=\"Mô tả\"\n                            modules={modulesQill}\n                            formats={formats}\n                            // bounds={'#root'}\n                            style={{ height: \"500px\" }}\n                          />\n                        </Form.Item>\n                      </Col>\n\n                      {editIntroduce && doctorInforId && (\n                        <div style={{ textAlign: 'center', marginTop: '30px', width: '100%' }}>\n                          <Col span={24} style={{ textAlign: 'center', marginTop: '20px !important' }}>\n                            <Button className='btn_cancel' danger size='middle' onClick={() => setEditIntroduce(false)}>\n                              Hủy chỉnh sửa\n                            </Button>\n                            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n                              Cập nhật\n                            </Button>\n                          </Col>\n                        </div>\n                      )}\n\n                      {editIntroduce && !doctorInforId && (\n                        <div style={{ textAlign: 'center', marginTop: '30px', width: '100%' }}>\n                          <Col span={24} >\n                            <Button\n                              className='btn_cancel'\n                              danger size='middle'\n                              onClick={() => setEditIntroduce(false)}\n                            >\n                              Hủy\n                            </Button>\n                            <Button className='btn_add' size='middle' htmlType='submit' type='primary'>\n                              Thêm\n                            </Button>\n                          </Col>\n                        </div>\n                      )}\n\n                    </Row>\n                  </Form>\n                </div>\n              </div>\n            </Tabs.TabPane>\n          </Tabs>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default DetailDoctorForManagerClinic;","import { Button, Col, DatePicker, Divider, Form, Input, Modal, Row, Select, Spin, Table } from \"antd\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport BookingApis from \"../../../../../apis/Bookings\";\nimport baseURL from \"../../../../../utils/url\";\nimport './DetailPatient.scss';\n\nconst { TextArea } = Input;\n\nconst DetailPatient = ({\n  detailPatient,\n  showModal,\n  handleCancelModal,\n  disabledBtnSave,\n  type\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [loadingData, setLoadingData] = useState(false);\n  const [dataHistoryPatient, setDataHistoryPatient] = useState([]);\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (detailPatient) {\n      form.setFieldsValue({\n        name: detailPatient?.namePatient || '',\n        email: detailPatient?.email || '',\n        reason: detailPatient?.reason || '',\n        note: detailPatient?.doctorNote || null,\n      })\n\n      if (type === 'new_patient') {\n        getHistoryPatient();\n      }\n    }\n  }, [detailPatient]);\n\n  const getHistoryPatient = async () => {\n    try {\n      setLoadingData(true);\n      const dataHistory = await BookingApis.getBookings({\n        patientId: detailPatient?.patientId,\n        status: ['DONE'],\n      });\n      if (dataHistory?.data?.data.length) {\n        const { data } = dataHistory?.data;\n        const listHistory = data.map(item => {\n          const nameDoctor = `${item?.doctor.firstName ? item?.doctor.firstName : ''} ${item?.doctor?.middleName ? item?.doctor?.middleName : ''} ${item?.doctor?.lastName ? item?.doctor?.lastName : ''}`.trim();\n          return {\n            id: item.id,\n            timeStart: item?.schedule.timeStart,\n            timeEnd: item?.schedule.timeEnd,\n            time: `${moment(item?.schedule?.timeStart).format('HH:mm')} - ${moment(item?.schedule?.timeEnd).format('HH:mm')} ${moment(item?.schedule?.timeEnd).format('DD/MM/YYYY')}`,\n            nameDoctor: nameDoctor,\n            date: moment(item.date).format('DD/MM/YYYY'),\n            reason: item?.reason || '',\n            prescription: item?.history?.prescription ? `${baseURL}${item?.history?.prescription}` : '',\n          }\n        })\n        setDataHistoryPatient(listHistory);\n      }\n      setLoadingData(false);\n    } catch (error) {\n      console.log('error: ', error);\n      setLoadingData(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Thời gian',\n      dataIndex: 'time',\n      key: 'time',\n      width: 50,\n    },\n    {\n      title: 'Tên bác sĩ',\n      dataIndex: 'nameDoctor',\n      key: 'nameDoctor',\n      ellipsis: true,\n      width: 55\n    },\n    {\n      title: 'Lý do khám',\n      dataIndex: 'reason',\n      key: 'reason',\n      // ellipsis: true,\n      width: 55\n    },\n    {\n      title: 'Đơn thuốc',\n      dataIndex: 'prescription',\n      key: 'prescription',\n      ellipsis: true,\n      width: 55,\n      render: (value) => (\n        <>\n          {value ? (\n            <a download href={value}>\n              <div style={{\n                color: '#1890ff'\n              }}>Xem đơn thuốc</div>\n            </a>\n          ) : ''}\n        </>\n      )\n    },\n  ];\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      const { note, ...res } = values;\n      const dataRes = await BookingApis.updateBooking({ userNote: note }, detailPatient.idBooking);\n      if (dataRes?.data === true) {\n        toast.success('Thêm ghi chú thành công');\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Thêm ghi chú không thành công!');\n      setLoading(false);\n    }\n  }\n  return (\n    <Modal\n      className='detail_modal'\n      title={\n        <>\n          <div>Chi tiết</div>\n        </>\n      }\n      open={showModal}\n      onCancel={() => {\n        if (!loading) {\n          handleCancelModal();\n          // form.resetFields()\n        }\n      }}\n      width={700}\n      height={500}\n      footer={false}\n    >\n      <Spin spinning={loading}>\n        <div style={{ maxHeight: '500px', overflowY: 'auto', overflowX: 'hidden' }}>\n          <Form\n            name='patient'\n            onFinish={(values) => handleSubmit(values)}\n            autoComplete='off'\n            layout='vertical'\n            form={form}\n          >\n            <Row gutter={24}>\n              <Col span={12}>\n                <Form.Item\n                  name={'name'}\n                  label={<span className='txt_label'>Tên bệnh nhân</span>}\n                >\n                  <Input\n                    disabled\n                    size='middle'\n                    className='txt_input'\n                    placeholder={'Tên bệnh nhân'} />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name={'email'}\n                  label={<span className='txt_label'>Email</span>}\n                >\n                  <Input\n                    disabled\n                    size='middle'\n                    className='txt_input'\n                    placeholder={'Email'} />\n                </Form.Item>\n              </Col>\n\n              <Col span={24}>\n                <Form.Item\n                  name={'reason'}\n                  label={<span className='txt_label'>Lý do khám</span>}\n                >\n                  <TextArea\n                    disabled\n                    rows={4}\n                    placeholder='Lý do'\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={24}>\n                <Form.Item\n                  name={'note'}\n                  label={<span className='txt_label'>Ghi chú</span>}\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Ghi chú không được trống!',\n                    }\n                  ]}\n                >\n                  <TextArea\n                    disabled={!(type === 'new_patient')}\n                    rows={4}\n                    placeholder={detailPatient?.doctorNote ? 'Ghi chú' : 'Không có thông tin'}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Col span={24} style={{ textAlign: 'center' }}>\n              <Button className='btn_cancel' danger size='middle' onClick={() => handleCancelModal()}>\n                Hủy\n              </Button>\n              {/* Chưa luư đc  */}\n              {type === 'new_patient' && (\n                <Button disabled={disabledBtnSave} className='btn_add' size='middle' htmlType='submit' type='primary'>\n                  Lưu\n                </Button>\n              )}\n\n\n            </Col>\n          </Form>\n          {type === 'new_patient' && (\n            <div className=\"history\">\n              <Divider>Lịch sử khám</Divider>\n              <Table\n                loading={loadingData}\n                rowKey={'id'}\n                dataSource={dataHistoryPatient}\n                columns={columns}\n              />\n            </div>\n          )}\n        </div>\n      </Spin>\n    </Modal>\n  )\n}\n\nexport default DetailPatient;","import { FormOutlined } from \"@ant-design/icons\";\nimport { Button, Space, Table } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport DetailPatient from \"./DetailPatientBooking/DetailPatient\";\n\nconst TableCancel = ({\n  dataCancel\n}) => {\n  const [dataPatient, setDataPatient] = useState([]);\n  const [detailPatient, setDetailPatient] = useState(null); // {}\n  const [showModalDetail, setModalDetail] = useState(false);\n\n  useEffect(() => {\n    if (dataCancel) {\n      const listBooking = dataCancel?.dataCancel.map(item => {\n        let namePatient = '';\n        let phoneNumber = '';\n        let gender = '';\n        let birthday = null;\n        if (item.type === 'FOR_MYSELF') {\n          namePatient = `${item?.patient.firstName ? item?.patient.firstName : ''} ${item?.patient?.middleName ? item?.patient?.middleName : ''} ${item?.patient?.lastName ? item?.patient?.lastName : ''}`.trim();\n          phoneNumber = item?.patient?.phoneNumber || '';\n          gender = item?.patient?.gender || '';\n          birthday = item?.patient?.birthday || null;\n        } else {\n          namePatient = item?.bookingRelatives?.name || '';\n          phoneNumber = item?.bookingRelatives?.phone || '';\n          gender = item?.bookingRelatives?.gender;\n          birthday = item?.bookingRelatives?.birthday || null;\n        }\n        const nameDoctor = `${item?.doctor.firstName ? item?.doctor.firstName : ''} ${item?.doctor?.middleName ? item?.doctor?.middleName : ''} ${item?.doctor?.lastName ? item?.doctor?.lastName : ''}`.trim();\n        return {\n          idBooking: item.id,\n          timeStart: item?.schedule.timeStart,\n          timeEnd: item?.schedule.timeEnd,\n          time: `${moment(item?.schedule?.timeStart).format('HH:mm')} - ${moment(item?.schedule?.timeEnd).format('HH:mm')}`,\n          namePatient: namePatient,\n          nameDoctor: nameDoctor,\n          gender: gender,\n          birthday: birthday,\n          phoneNumber: phoneNumber,\n          status: item?.status || '',\n          bookingDate: item.createdDate,\n          reason: item?.reason || '',\n          email: item?.patient.email || '',\n          address: item?.patient?.address || '',\n          doctorNote: item?.patient.userNote || '',\n          patientId: item?.patient?.id,\n          date: moment(item.date).format('DD/MM/YYYY'),\n        }\n      })\n      setDataPatient(listBooking || []);\n    }\n  }, [dataCancel])\n\n  const columns = [\n    {\n      title: 'Thời gian',\n      dataIndex: 'time',\n      key: 'time',\n      width: 50,\n    },\n    {\n      title: 'Ngày khám',\n      dataIndex: 'date',\n      key: 'date',\n      width: 50,\n    },\n    {\n      title: 'Tên bệnh nhân',\n      dataIndex: 'namePatient',\n      key: 'name',\n      width: 70,\n      ellipsis: true,\n    },\n    {\n      title: 'Giới tính',\n      dataIndex: 'gender',\n      key: 'gender',\n      width: 40,\n      render: (value) => (\n        <div>{(value === 'FEMALE') ? 'Nữ' : (value === 'MALE') ? 'Nam' : 'Khác' || ''}</div>\n      )\n    },\n    {\n      title: 'Ngày sinh',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      width: 50,\n      render: (value) => (\n        <div>{value ? moment(value).format('DD/MM/YYYY') : ''}</div>\n      )\n    },\n    {\n      title: 'Số điện thoại',\n      dataIndex: 'phoneNumber',\n      key: 'phoneNumber',\n      width: 55\n    },\n    {\n      title: 'Tên bác sĩ',\n      dataIndex: 'nameDoctor',\n      key: 'nameDoctor',\n      ellipsis: true,\n      width: 55\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      width: 100,\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button\n            className=\"btn_detail\"\n            icon={<FormOutlined />}\n            style={{\n              minWidth: '30px'\n            }}\n            onClick={() => {\n              setDetailPatient(record);\n              setModalDetail(true);\n            }}\n          >Chi tiết</Button>\n          {/* <Button\n            // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n            className=\"btn\"\n            style={{\n              minWidth: '50px'\n            }}\n            type=\"primary\"\n            // icon={< />}\n          >Xác nhận</Button>\n          <Button\n            // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n            className=\"btn\"\n            style={{\n              minWidth: '50px'\n            }}\n            type=\"primary\"\n            danger\n            // icon={< />}\n          >Hủy</Button> */}\n        </Space>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Table\n        // loading={loading}\n        rowKey={'idBooking'}\n        dataSource={dataPatient}\n        columns={columns}\n      />\n\n      <DetailPatient\n        detailPatient={detailPatient}\n        showModal={showModalDetail}\n        handleCancelModal={() => setModalDetail(false)}\n        // disabledBtnSave={!moment(currentDate).isBefore(moment(selectDate))}\n        type='cancel'\n      />\n    </div>\n  )\n}\n\nexport default TableCancel;","import { FormOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Space, Table } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport BookingApis from \"../../../../apis/Bookings\";\nimport DetailPatient from \"./DetailPatientBooking/DetailPatient\";\n\nconst TableConfirmed = ({\n  dataConfirmed,\n  handleReset,\n}) => {\n  const [dataPatient, setDataPatient] = useState([]);\n  const [detailPatient, setDetailPatient] = useState(null); // {}\n  const [showModalDetail, setModalDetail] = useState(false);\n  const [showModalChangeStatus, setShowModalChangeStatus] = useState(false);\n  const [dataChange, setDataChange] = useState(null);\n\n  useEffect(() => {\n    if (dataConfirmed) {\n      const listBooking = dataConfirmed?.dataConfirmed.map(item => {\n        let namePatient = '';\n        let phoneNumber = '';\n        let gender = '';\n        let birthday = null;\n        if (item.type === 'FOR_MYSELF') {\n          namePatient = `${item?.patient.firstName ? item?.patient.firstName : ''} ${item?.patient?.middleName ? item?.patient?.middleName : ''} ${item?.patient?.lastName ? item?.patient?.lastName : ''}`.trim();\n          phoneNumber = item?.patient?.phoneNumber || '';\n          gender = item?.patient?.gender || '';\n          birthday = item?.patient?.birthday || null;\n        } else {\n          namePatient = item?.bookingRelatives?.name || '';\n          phoneNumber = item?.bookingRelatives?.phone || '';\n          gender = item?.bookingRelatives?.gender;\n          birthday = item?.bookingRelatives?.birthday || null;\n        }\n        const nameDoctor = `${item?.doctor.firstName ? item?.doctor.firstName : ''} ${item?.doctor?.middleName ? item?.doctor?.middleName : ''} ${item?.doctor?.lastName ? item?.doctor?.lastName : ''}`.trim();\n        return {\n          idBooking: item.id,\n          timeStart: item?.schedule.timeStart,\n          timeEnd: item?.schedule.timeEnd,\n          time: `${moment(item?.schedule?.timeStart).format('HH:mm')} - ${moment(item?.schedule?.timeEnd).format('HH:mm')}`,\n          namePatient: namePatient,\n          nameDoctor: nameDoctor,\n          gender: gender,\n          birthday: birthday,\n          phoneNumber: phoneNumber,\n          status: item?.status || '',\n          bookingDate: item.createdDate,\n          reason: item?.reason || '',\n          email: item?.patient.email || '',\n          address: item?.patient?.address || '',\n          doctorNote: item?.patient.userNote || '',\n          patientId: item?.patient?.id,\n          date: moment(item.date).format('DD/MM/YYYY'),\n        }\n      })\n      setDataPatient(listBooking || []);\n    }\n  }, [dataConfirmed])\n\n  const handleChangeStatus = async () => {\n    const { status, bookingId } = dataChange;\n    const listStatus = ['CANCEL', 'CONFIRMED'];\n    if (!dataChange || !listStatus.includes(status)) {\n      toast.error('Thay đổi trạng thái không thành công!');\n      return;\n    }\n    try {\n      const dataUpdate = await BookingApis.updateBooking({\n        status: status\n      }, bookingId);\n      if (dataUpdate.status === 200 && dataUpdate.data === true) {\n        toast.success('Thay đổi trạng thái thành công');\n      }\n      handleReset();\n      setDataChange(null);\n      setShowModalChangeStatus(false);\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Thay đổi trạng thái không thành công!');\n      setDataChange(null);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Thời gian',\n      dataIndex: 'time',\n      key: 'time',\n      width: 50,\n    },\n    {\n      title: 'Ngày khám',\n      dataIndex: 'date',\n      key: 'date',\n      width: 50,\n    },\n    {\n      title: 'Tên bệnh nhân',\n      dataIndex: 'namePatient',\n      key: 'name',\n      width: 70,\n      ellipsis: true,\n    },\n    {\n      title: 'Giới tính',\n      dataIndex: 'gender',\n      key: 'gender',\n      width: 40,\n      render: (value) => (\n        <div>{value === 'FEMALE' ? 'Nữ' : value === 'MALE' ? 'Nam' : 'Khác' || ''}</div>\n      )\n    },\n    {\n      title: 'Ngày sinh',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      width: 50,\n      render: (value) => (\n        <div>{value ? moment(value).format('DD/MM/YYYY') : ''}</div>\n      )\n    },\n    {\n      title: 'Số điện thoại',\n      dataIndex: 'phoneNumber',\n      key: 'phoneNumber',\n      width: 55\n    },\n    {\n      title: 'Tên bác sĩ',\n      dataIndex: 'nameDoctor',\n      key: 'nameDoctor',\n      ellipsis: true,\n      width: 55\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      width: 100,\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button\n            className=\"btn_detail\"\n            icon={<FormOutlined />}\n            style={{\n              minWidth: '30px'\n            }}\n            onClick={() => {\n              setDetailPatient(record);\n              setModalDetail(true);\n            }}\n          >Chi tiết</Button>\n          {/* <Button\n            // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n            className=\"btn\"\n            style={{\n              minWidth: '50px'\n            }}\n            type=\"primary\"\n            // icon={< />}\n          >Xác nhận</Button> */}\n          <Button\n            // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n            className=\"btn\"\n            style={{\n              minWidth: '50px'\n            }}\n            type=\"primary\"\n            danger\n            onClick={() => {\n              setShowModalChangeStatus(true);\n              setDataChange({ status: 'CANCEL', bookingId: record.idBooking })\n            }}\n          >Hủy</Button>\n        </Space>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Table\n        // loading={loading}\n        rowKey={'idBooking'}\n        dataSource={dataPatient}\n        columns={columns}\n      />\n\n      <DetailPatient\n        detailPatient={detailPatient}\n        showModal={showModalDetail}\n        handleCancelModal={() => setModalDetail(false)}\n        // disabledBtnSave={!moment(currentDate).isBefore(moment(selectDate))}\n        type='confirmed'\n      />\n\n      <Modal\n        open={showModalChangeStatus}\n        onOk={handleChangeStatus}\n        onCancel={() => {\n          setDataChange(null);\n          setShowModalChangeStatus(false);\n        }}\n        cancelText={'Hủy'}\n        okText={'Xác nhận'}\n        className='confirm_delete_label'\n        width={370}\n      >\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\n          Bạn có muốn hủy lịch hẹn không?\n        </h2>\n      </Modal>\n    </div>\n  )\n}\n\nexport default TableConfirmed;","import { FormOutlined } from \"@ant-design/icons\";\nimport { Button, Space, Table } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport DetailPatient from \"./DetailPatientBooking/DetailPatient\";\n\nconst TableDone = ({\n  dataDone\n}) => {\n  const [dataPatient, setDataPatient] = useState([]);\n  const [detailPatient, setDetailPatient] = useState(null); // {}\n  const [showModalDetail, setModalDetail] = useState(false);\n\n  useEffect(() => {\n    if (dataDone) {\n      const listBooking = dataDone?.dataDone.map(item => {\n        let namePatient = '';\n        let phoneNumber = '';\n        let gender = '';\n        let birthday = null;\n        if (item.type === 'FOR_MYSELF') {\n          namePatient = `${item?.patient.firstName ? item?.patient.firstName : ''} ${item?.patient?.middleName ? item?.patient?.middleName : ''} ${item?.patient?.lastName ? item?.patient?.lastName : ''}`.trim();\n          phoneNumber = item?.patient?.phoneNumber || '';\n          gender = item?.patient?.gender || '';\n          birthday = item?.patient?.birthday || null;\n        } else {\n          namePatient = item?.bookingRelatives?.name || '';\n          phoneNumber = item?.bookingRelatives?.phone || '';\n          gender = item?.bookingRelatives?.gender;\n          birthday = item?.bookingRelatives?.birthday || null;\n        }\n        const nameDoctor = `${item?.doctor.firstName ? item?.doctor.firstName : ''} ${item?.doctor?.middleName ? item?.doctor?.middleName : ''} ${item?.doctor?.lastName ? item?.doctor?.lastName : ''}`.trim();\n        return {\n          idBooking: item.id,\n          timeStart: item?.schedule.timeStart,\n          timeEnd: item?.schedule.timeEnd,\n          time: `${moment(item?.schedule?.timeStart).format('HH:mm')} - ${moment(item?.schedule?.timeEnd).format('HH:mm')}`,\n          namePatient: namePatient,\n          nameDoctor: nameDoctor,\n          gender: gender,\n          birthday: birthday,\n          phoneNumber: phoneNumber,\n          status: item?.status || '',\n          bookingDate: item.createdDate,\n          reason: item?.reason || '',\n          email: item?.patient.email || '',\n          address: item?.patient?.address || '',\n          doctorNote: item?.patient.userNote || '',\n          patientId: item?.patient?.id,\n          date: moment(item.date).format('DD/MM/YYYY'),\n        }\n      })\n      setDataPatient(listBooking || []);\n    }\n  }, [dataDone])\n\n  const columns = [\n    {\n      title: 'Thời gian',\n      dataIndex: 'time',\n      key: 'time',\n      width: 50,\n    },\n    {\n      title: 'Ngày khám',\n      dataIndex: 'date',\n      key: 'date',\n      width: 50,\n    },\n    {\n      title: 'Tên bệnh nhân',\n      dataIndex: 'namePatient',\n      key: 'name',\n      width: 70,\n      ellipsis: true,\n    },\n    {\n      title: 'Giới tính',\n      dataIndex: 'gender',\n      key: 'gender',\n      width: 40,\n      render: (value) => (\n        <div>{value === 'FEMALE' ? 'Nữ' : value === 'MALE' ? 'Nam' : 'Khác' || ''}</div>\n      )\n    },\n    {\n      title: 'Ngày sinh',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      width: 50,\n      render: (value) => (\n        <div>{value ? moment(value).format('DD/MM/YYYY') : ''}</div>\n      )\n    },\n    {\n      title: 'Số điện thoại',\n      dataIndex: 'phoneNumber',\n      key: 'phoneNumber',\n      width: 55\n    },\n    {\n      title: 'Tên bác sĩ',\n      dataIndex: 'nameDoctor',\n      key: 'nameDoctor',\n      ellipsis: true,\n      width: 55\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      width: 100,\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button\n            className=\"btn_detail\"\n            icon={<FormOutlined />}\n            style={{\n              minWidth: '30px'\n            }}\n            onClick={() => {\n              setDetailPatient(record);\n              setModalDetail(true);\n            }}\n          >Chi tiết</Button>\n          {/* <Button\n            // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n            className=\"btn\"\n            style={{\n              minWidth: '50px'\n            }}\n            type=\"primary\"\n            // icon={< />}\n          >Xác nhận</Button>\n          <Button\n            // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n            className=\"btn\"\n            style={{\n              minWidth: '50px'\n            }}\n            type=\"primary\"\n            danger\n            // icon={< />}\n          >Hủy</Button> */}\n        </Space>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Table\n        // loading={loading}\n        rowKey={'idBooking'}\n        dataSource={dataPatient}\n        columns={columns}\n      />\n\n      <DetailPatient\n        detailPatient={detailPatient}\n        showModal={showModalDetail}\n        handleCancelModal={() => setModalDetail(false)}\n        // disabledBtnSave={!moment(currentDate).isBefore(moment(selectDate))}\n        type='done'\n      />\n    </div>\n  )\n}\n\nexport default TableDone;","import { FormOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Space, Table } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport DetailPatient from \"./DetailPatientBooking/DetailPatient\";\nimport BookingApis from '../../../../apis/Bookings';\n\nconst TableNewPatient = ({\n  dataNewPatient,\n  handleReset,\n}) => {\n  const [dataPatient, setDataPatient] = useState([]);\n  const [detailPatient, setDetailPatient] = useState(null); // {}\n  const [showModalDetail, setModalDetail] = useState(false);\n  const [showModalChangeStatus, setShowModalChangeStatus] = useState(false);\n  const [dataChange, setDataChange] = useState(null);\n\n  useEffect(() => {\n    if (dataNewPatient) {\n      const listBooking = dataNewPatient?.dataWaiting.map(item => {\n        let namePatient = '';\n        let phoneNumber = '';\n        let gender = '';\n        let birthday = null;\n        if (item.type === 'FOR_MYSELF') {\n          namePatient = `${item?.patient.firstName ? item?.patient.firstName : ''} ${item?.patient?.middleName ? item?.patient?.middleName : ''} ${item?.patient?.lastName ? item?.patient?.lastName : ''}`.trim();\n          phoneNumber = item?.patient?.phoneNumber || '';\n          gender = item?.patient?.gender || '';\n          birthday = item?.patient?.birthday || null;\n        } else {\n          namePatient = item?.bookingRelatives?.name || '';\n          phoneNumber = item?.bookingRelatives?.phone || '';\n          gender = item?.bookingRelatives?.gender;\n          birthday = item?.bookingRelatives?.birthday || null;\n        }\n        const nameDoctor = `${item?.doctor.firstName ? item?.doctor.firstName : ''} ${item?.doctor?.middleName ? item?.doctor?.middleName : ''} ${item?.doctor?.lastName ? item?.doctor?.lastName : ''}`.trim();\n        return {\n          idBooking: item.id,\n          timeStart: item?.schedule.timeStart,\n          timeEnd: item?.schedule.timeEnd,\n          time: `${moment(item?.schedule?.timeStart).format('HH:mm')} - ${moment(item?.schedule?.timeEnd).format('HH:mm')}`,\n          namePatient: namePatient,\n          nameDoctor: nameDoctor,\n          gender: gender,\n          birthday: birthday,\n          phoneNumber: phoneNumber,\n          status: item?.status || '',\n          bookingDate: item.createdDate,\n          reason: item?.reason || '',\n          email: item?.patient.email || '',\n          address: item?.patient?.address || '',\n          doctorNote: item?.patient.userNote || '',\n          patientId: item?.patient?.id,\n          date: moment(item.date).format('DD/MM/YYYY'),\n        }\n      })\n      setDataPatient(listBooking || []);\n    }\n  }, [dataNewPatient])\n\n  const handleChangeStatus = async () => {\n    const { status, bookingId } = dataChange;\n    const listStatus = ['CANCEL', 'CONFIRMED'];\n    if (!dataChange || !listStatus.includes(status)) {\n      toast.error('Thay đổi trạng thái không thành công!');\n      return;\n    }\n    try {\n      const dataUpdate = await BookingApis.updateBooking({\n        status: status\n      }, bookingId);\n      if (dataUpdate.status === 200 && dataUpdate.data === true) {\n        toast.success('Thay đổi trạng thái thành công');\n      }\n      handleReset();\n      setDataChange(null);\n      setShowModalChangeStatus(false);\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Thay đổi trạng thái không thành công!');\n      setDataChange(null);\n    }\n  }\n\n  const handleChangeStatusConfirm = async (status, bookingId) => {\n    if (status !== 'CONFIRMED') {\n      toast.error('Thay đổi trạng thái không thành công!');\n      return;\n    }\n    try {\n      const dataUpdate = await BookingApis.updateBooking({\n        status: status\n      }, bookingId);\n      if (dataUpdate.status === 200 && dataUpdate.data === true) {\n        toast.success('Thay đổi trạng thái thành công');\n      }\n      handleReset();\n    } catch (error) {\n      console.log('error: ', error);\n      toast.error('Thay đổi trạng thái không thành công!');\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Thời gian',\n      dataIndex: 'time',\n      key: 'time',\n      width: 50,\n    },\n    {\n      title: 'Ngày khám',\n      dataIndex: 'date',\n      key: 'date',\n      width: 50,\n    },\n    {\n      title: 'Tên bệnh nhân',\n      dataIndex: 'namePatient',\n      key: 'name',\n      width: 70,\n      ellipsis: true,\n    },\n    {\n      title: 'Giới tính',\n      dataIndex: 'gender',\n      key: 'gender',\n      width: 40,\n      render: (value) => (\n        <div>{value === 'FEMALE' ? 'Nữ' : value === 'MALE' ? 'Nam' : 'Khác' || ''}</div>\n      )\n    },\n    {\n      title: 'Ngày sinh',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      width: 50,\n      render: (value) => (\n        <div>{value ? moment(value).format('DD/MM/YYYY') : ''}</div>\n      )\n    },\n    {\n      title: 'Số điện thoại',\n      dataIndex: 'phoneNumber',\n      key: 'phoneNumber',\n      width: 50\n    },\n    {\n      title: 'Tên bác sĩ',\n      dataIndex: 'nameDoctor',\n      key: 'nameDoctor',\n      ellipsis: true,\n      width: 55\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      width: 120,\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button\n            className=\"btn_detail\"\n            icon={<FormOutlined />}\n            style={{\n              minWidth: '30px'\n            }}\n            onClick={() => {\n              setDetailPatient(record);\n              setModalDetail(true);\n            }}\n          >Chi tiết</Button>\n          <Button\n            // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n            className=\"btn\"\n            style={{\n              minWidth: '50px'\n            }}\n            type=\"primary\"\n            // icon={< />}\n            onClick={() => handleChangeStatusConfirm('CONFIRMED', record.idBooking)}\n          >Xác nhận</Button>\n          <Button\n            // disabled={!moment('2014-03-24T01:15:00.000Z').isSame(moment('2014-03-24T01:14:00.000Z'))}\n            className=\"btn\"\n            style={{\n              minWidth: '50px'\n            }}\n            type=\"primary\"\n            danger\n            // icon={< />}\n            onClick={() => {\n              setShowModalChangeStatus(true);\n              setDataChange({ status: 'CANCEL', bookingId: record.idBooking })\n            }}\n          >Hủy</Button>\n        </Space>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Table\n        // loading={loading}\n        rowKey={'idBooking'}\n        dataSource={dataPatient}\n        columns={columns}\n      />\n\n      <DetailPatient\n        detailPatient={detailPatient}\n        showModal={showModalDetail}\n        handleCancelModal={() => setModalDetail(false)}\n        // disabledBtnSave={!moment(currentDate).isBefore(moment(selectDate))}\n        type='new_patient'\n      />\n\n      <Modal\n        open={showModalChangeStatus}\n        onOk={handleChangeStatus}\n        onCancel={() => {\n          setDataChange(null);\n          setShowModalChangeStatus(false);\n        }}\n        cancelText={'Hủy'}\n        okText={'Xác nhận'}\n        className='confirm_delete_label'\n        width={370}\n      >\n        <h2 style={{ color: '#595959', fontWeight: 700, textAlign: 'center' }}>\n          Bạn có muốn hủy lịch hẹn không?\n        </h2>\n      </Modal>\n    </div>\n  )\n}\n\nexport default TableNewPatient;","import { Spin, Tabs } from \"antd\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport BookingApis from \"../../../apis/Bookings\";\nimport TableCancel from \"./components/TableCancel\";\nimport TableConfirmed from \"./components/TableConfirmed\";\nimport TableDone from \"./components/TableDone\";\nimport TableNewPatient from \"./components/TableNewPatient\";\n\nconst NewPatient = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [dataNewPatient, setNewPatient] = useState(null);\n  const [dataConfirmed, setDataConfirmed] = useState(null);\n  const [dataCancel, setDataCancel] = useState(null);\n  const [dataDone, setDataDone] = useState(null);\n  const [reset, setReset] = useState(0);\n  const [tabPane, setTabPane] = useState('new_patient')\n\n  useEffect(() => {\n    document.title = 'Quản lý bệnh nhân';\n    const userLocal = JSON.parse(localStorage.getItem('user'));\n    if (userLocal) {\n      setUser(userLocal);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (user)\n      getListBooking();\n  }, [user, reset])\n\n  const getListBooking = async () => {\n    try {\n      setLoading(true);\n      const dataBooking = await BookingApis.getBookingByClinic({\n        clinicId: user?.clinic?.id || undefined,\n      });\n      // console.log('dataBooking: ', dataBooking);\n      if (dataBooking.data) {\n        setNewPatient(dataBooking?.data?.waiting || null);\n        setDataConfirmed(dataBooking?.data?.confirmed || null);\n        setDataCancel(dataBooking?.data?.cancel || null);\n        setDataDone(dataBooking?.data?.done || null);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const handleReset = () => {\n    setReset(prev => ++prev);\n  }\n\n  const handleChangeTab = (key) => {\n    setTabPane(key)\n  }\n\n  return (\n    <div>\n      <h1>Quản lý bệnh nhân đặt lịch</h1>\n\n      <div className=\"tab_list_patient\">\n\n        {loading ? (\n          <div className=\"spin\">\n            <Spin />\n          </div>) : (\n          <Tabs\n            defaultActiveKey={tabPane}\n            type=\"card\"\n            size='middle'\n            onChange={handleChangeTab}\n          >\n            <Tabs.TabPane tab={`Bệnh nhân mới (${dataNewPatient?.totalWaiting || 0})`} key=\"new_patient\">\n              <TableNewPatient\n                dataNewPatient={dataNewPatient}\n                handleReset={handleReset}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={`Đã xác nhận (${dataConfirmed?.totalConfirmed || 0})`} key=\"confirmed\">\n              <TableConfirmed\n                dataConfirmed={dataConfirmed}\n                handleReset={handleReset}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={`Đã hủy (${dataCancel?.totalCancel || 0})`} key=\"cancel\">\n              <TableCancel\n                dataCancel={dataCancel}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={`Đã khám xong (${dataDone?.totalDone || 0})`} key=\"done\">\n              <TableDone\n                dataDone={dataDone}\n              />\n            </Tabs.TabPane>\n          </Tabs>\n        )}\n\n\n      </div>\n    </div>\n  )\n}\n\nexport default NewPatient;","import React, { useEffect } from 'react';\n\nimport { useSelector } from 'react-redux';\n\n// import Table from '../components/table/Table'\n\n// import Badge from '../components/badge/Badge'\n\n// import statusCards from '../assets/JsonData/status-card-data.json'\nimport StatusCard from '../../../components/status-card/StatusCard'\nimport { useState } from 'react';\nimport { Spin } from 'antd';\nimport CustomerApis from '../../../apis/Customer';\nimport ClinicApis from '../../../apis/Clinic';\nimport BookingApis from '../../../apis/Bookings';\nimport moment from 'moment';\n\nconst DashboardManager = () => {\n\n  // const [countCustomer, setCountCustomer] = useState(0);\n  // const [countClinic, setCountClinic] = useState(0);\n  const [countDoctor, setCountDoctor] = useState(0);\n  const [countAppointentDone, setCountAppointentDone] = useState(0);\n  const [countAppointentNotConf, setCountAppointentNotConf] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [userLocal, setUserLocal] = useState(null);\n\n  useEffect(() => {\n    document.title = 'Dashboard';\n    const userLocalStorage = JSON.parse(localStorage.getItem('user'));\n    if (userLocalStorage) {\n      setUserLocal(userLocalStorage);\n\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userLocal) {\n      getDataDoctor();\n      getDataBooking();\n    }\n  }, [userLocal]);\n\n  const getDataDoctor = async () => {\n    setLoading(true);\n    try {\n      const dataRes = await CustomerApis.getCustomer({\n        page: 1,\n        take: 100,\n        clinicId: userLocal?.clinic?.id,\n        role: ['DOCTOR', 'HEAD_OF_DOCTOR'],\n      });\n      if (dataRes?.data?.data.length) {\n        setCountDoctor(dataRes?.data?.meta?.itemCount || 0);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getDataBooking = async () => {\n    try {\n      setLoading(true);\n      const dataBooking = await BookingApis.getBookingByClinic({\n        clinicId: userLocal?.clinic?.id || undefined,\n      });\n\n      if (dataBooking.data) {\n        setCountAppointentNotConf(dataBooking?.data?.waiting?.totalWaiting);\n        setCountAppointentDone(dataBooking?.data?.done?.totalDone);\n      }\n      setLoading(false);\n\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const themeReducer = useSelector(state => state.ThemeReducer.mode)\n  return (\n    <>\n      {loading ? (\n        <div className=\"spin\">\n          <Spin />\n        </div>\n      ) : (\n        <div>\n          <h2 className=\"page-header\">Dashboard</h2>\n          {/* <div className=\"row\"> */}\n          {/* <div className=\"col-6\"> */}\n          <div className=\"row\">\n            {/* <div className=\"col-3\">\n                        <StatusCard\n                            icon={'bx bx-user-pin'}\n                            count={countCustomer || 0}\n                            title={'Số lượng khách hàng'}\n                        />\n                    </div> */}\n            {/* <div className=\"col-3\">\n                      <StatusCard\n                        icon={'bx bx-clinic'}\n                        count={countClinic || 0}\n                        title={'Số lượng phòng khám'}\n                      />\n                    </div> */}\n\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-user'}\n                count={countDoctor || 0}\n                title={'Số lượng bác sĩ '}\n              />\n            </div>\n\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-notepad'}\n                count={countAppointentDone}\n                title={'Lịch hẹn đã hoàn thành'}\n              />\n            </div>\n\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-notepad'}\n                count={countAppointentNotConf}\n                title={'Lịch hẹn chưa xác nhận'}\n              />\n            </div>\n          </div>\n          {/* </div> */}\n          {/* </div> */}\n        </div>\n      )}\n    </>\n\n  )\n}\n\nexport default DashboardManager;","import React, { useEffect } from 'react';\n\nimport { useSelector } from 'react-redux';\n\n// import Table from '../components/table/Table'\n\n// import Badge from '../components/badge/Badge'\n\n// import statusCards from '../assets/JsonData/status-card-data.json'\nimport StatusCard from '../../../components/status-card/StatusCard'\nimport { useState } from 'react';\nimport { Spin } from 'antd';\nimport CustomerApis from '../../../apis/Customer';\nimport ClinicApis from '../../../apis/Clinic';\nimport BookingApis from '../../../apis/Bookings';\nimport moment from 'moment';\n\nconst DashboardDoctor = () => {\n\n  // const [countCustomer, setCountCustomer] = useState(0);\n  // const [countClinic, setCountClinic] = useState(0);\n  const [countDoctor, setCountDoctor] = useState(0);\n  const [countAppointentDone, setCountAppointentDone] = useState(0);\n  const [countAppointentToday, setCountAppointentToday] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [userLocal, setUserLocal] = useState(null);\n\n  useEffect(() => {\n    document.title = 'Dashboard';\n    const userLocalStorage = JSON.parse(localStorage.getItem('user'));\n    if (userLocalStorage) {\n      setUserLocal(userLocalStorage);\n\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userLocal) {\n      getDataBookingDone();\n      getDataBookingToday();\n    }\n  }, [userLocal]);\n\n  const getDataBookingDone = async () => {\n    try {\n      setLoading(true);\n      const dataBookingDone = await BookingApis.getBookings({\n        doctorId: userLocal?.id || undefined,\n        status: ['DONE'],\n      });\n      if (dataBookingDone.status === 200 && dataBookingDone?.data?.data.length) {\n        setCountAppointentDone(dataBookingDone?.data?.meta?.itemCount || 0);\n      }\n      setLoading(false);\n\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const getDataBookingToday = async () => {\n    try {\n      setLoading(true);\n      const dataBookingToday = await BookingApis.getBookings({\n        doctorId: userLocal?.id || undefined,\n        date: moment(new Date).format('YYYY-MM-DDT00:00:00'),\n        status: ['CONFIRMED', 'DONE'],\n      });\n      if (dataBookingToday.status === 200 && dataBookingToday?.data?.data.length) {\n        setCountAppointentToday(dataBookingToday?.data?.meta?.itemCount || 0);\n      }\n      setLoading(false);\n\n    } catch (error) {\n      console.log('error: ', error);\n      setLoading(false);\n    }\n  }\n\n  const themeReducer = useSelector(state => state.ThemeReducer.mode)\n  return (\n    <>\n      {loading ? (\n        <div className=\"spin\">\n          <Spin />\n        </div>\n      ) : (\n        <div>\n          <h2 className=\"page-header\">Dashboard</h2>\n          {/* <div className=\"row\"> */}\n          {/* <div className=\"col-6\"> */}\n          <div className=\"row\">\n            {/* <div className=\"col-3\">\n                        <StatusCard\n                            icon={'bx bx-user-pin'}\n                            count={countCustomer || 0}\n                            title={'Số lượng khách hàng'}\n                        />\n                    </div> */}\n            {/* <div className=\"col-3\">\n                      <StatusCard\n                        icon={'bx bx-clinic'}\n                        count={countClinic || 0}\n                        title={'Số lượng phòng khám'}\n                      />\n                    </div> */}\n\n            {/* <div className=\"col-3\">\n                        <StatusCard\n                            icon={'bx bx-user'}\n                            count={countDoctor || 0}\n                            title={'Số lượng bác sĩ'}\n                        />\n                        </div> */}\n\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-notepad'}\n                count={countAppointentToday || 0}\n                title={'Lịch hẹn hôm nay'}\n              />\n            </div>\n\n            <div className=\"col-4\">\n              <StatusCard\n                icon={'bx bx-notepad'}\n                count={countAppointentDone || 0}\n                title={'Lịch hẹn đã hoàn thành'}\n              />\n            </div>\n          </div>\n          {/* </div> */}\n          {/* </div> */}\n        </div>\n      )}\n    </>\n\n  )\n}\n\nexport default DashboardDoctor;","import React, { useEffect, useState } from 'react'\n\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport CustomersTest from '../pages/Customers-2';\nimport Customers from '../pages/Customers/index';\nimport Products from '../pages/Products'\nimport TestRouter from '../pages/TestRouter'\nimport RequireAuth from '../router/AuthRouter';\nimport Doctor from '../pages/Doctor';\nimport CareStaff from '../pages/CareStaff';\nimport Clinic from '../pages/Clinic';\nimport Specialty from '../pages/Specialty';\nimport Schedules from '../pages/Schedules';\nimport DetailCustomer from '../pages/Customers/components/Detail';\nimport DetailDoctor from '../pages/Doctor/components/DetailDoctor';\nimport DetailClinic from '../pages/Clinic/components/DetailClinic';\nimport AuthApis from '../apis/Auth';\nimport { toast } from 'react-toastify';\nimport Topnav from './topnav/TopNav';\nimport PersonalInformation from '../pages/PersonalInformation';\nimport AppointmentSchedule from '../pages/ AppointmentSchedule';\nimport WatchScheduleForManagerClinic from '../pages/WatchSchedule/ManageClinic';\nimport DoctorForManagerClinic from '../pages/ManagerClinic/Doctor';\nimport ClinicForManagerClinic from '../pages/ManagerClinic/Clinic';\nimport DetailDoctorForManagerClinic from '../pages/ManagerClinic/Doctor/components/DetailDoctor';\nimport NewPatient from '../pages/ManagerClinic/NewPatient/indedx';\nimport DashboardManager from '../pages/Dashboard/ManagerClinic';\nimport DashboardDoctor from '../pages/Dashboard/Doctor';\n\nconst RoutesDoctor = () => {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n    let history = useHistory();\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem('accessToken');\n        console.log('router admin: ', accessToken);\n        if (accessToken)\n            checkToken();\n    }, []);\n    // const user = JSON.parse(localStorage.getItem('user'));\n\n    const checkToken = async () => {\n        try {\n            console.log('getme', localStorage.getItem('accessToken'));\n            const dataCheckToken = await AuthApis.authMe();\n            if (dataCheckToken?.data) {\n                setUser(dataCheckToken.data);\n            }\n            console.log('asdasd: ', dataCheckToken);\n        } catch (error) {\n            console.log('error: ', error);\n            toast.error('Hết phiên đăng nhập!');\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('user');\n            history.push('/login');\n        }\n    }\n\n    console.log('user: ', user);\n    return (\n        <div className=\"layout__content\">\n            <Topnav userData={user} />\n            <div className=\"layout__content-main\">\n                <Switch>\n                    {/* <RequireAuth>\n                        <Route path='/he-thong' exact render={() => <div>bac si hoac manage clinic</div>} />\n                    </RequireAuth> */}\n\n                    <Route path='/he-thong' exact>\n                        <RequireAuth>\n                            {user && user.role === 'DOCTOR' ? (\n                                <DashboardDoctor />\n                            ) : (\n                                <DashboardManager />\n                            )}\n                        </RequireAuth>\n                    </Route>\n\n                    {/* <Route path='/he-thong/quan-ly-bac-si' >\n                        <RequireAuth>\n                            <DoctorForManagerClinic />\n                        </RequireAuth>\n                    </Route> */}\n\n                    <Route path='/he-thong/quan-ly-bac-si'>\n                        <Switch>\n                            <Route exact path='/he-thong/quan-ly-bac-si'>\n                                <RequireAuth>\n                                    <DoctorForManagerClinic />\n                                </RequireAuth>\n                            </Route>\n                            <Route exact path='/he-thong/quan-ly-bac-si/chi-tiet/:doctorId'>\n                                <RequireAuth>\n                                    <DetailDoctorForManagerClinic />\n                                </RequireAuth>\n                            </Route>\n                            <Route path='*' render={() => <div>404</div>} />\n                        </Switch>\n\n                    </Route>\n\n                    <Route path='/he-thong/quan-ly-phong-kham' >\n                        <RequireAuth>\n                            <ClinicForManagerClinic />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/he-thong/lich-hen' >\n                        <RequireAuth>\n                            <AppointmentSchedule />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/he-thong/benh-nhan-moi' >\n                        <RequireAuth>\n                            <NewPatient />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/he-thong/ke-hoach-kham-benh' >\n                        <RequireAuth>\n                            <Schedules />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/he-thong/quan-ly-ke-hoach-kham-benh'>\n                        <RequireAuth>\n                            <WatchScheduleForManagerClinic />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='/he-thong/thong-tin-ca-nhan'>\n                        <RequireAuth>\n                            <PersonalInformation />\n                        </RequireAuth>\n                    </Route>\n\n                    <Route path='*' render={() => <div>404</div>} />\n                </Switch>\n            </div>\n        </div>\n\n    )\n}\n\nexport default RoutesDoctor;","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Checkbox, Form, Input, Spin } from \"antd\";\r\nimport './index.scss';\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport AuthApis from \"../../../apis/Auth\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (accessToken) {\r\n      checkToken();\r\n    }\r\n  }, []);\r\n\r\n  const checkToken = async () => {\r\n    // console.log('ok');\r\n    try {\r\n      const dataCheckToken = await AuthApis.authMe();\r\n      console.log('/dataCheckToken: ', dataCheckToken);\r\n      if (dataCheckToken?.data) {\r\n        if (dataCheckToken?.data?.role === 'ADMIN') {\r\n          history.push('/admin');\r\n        } else {\r\n          history.push('/he-thong');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Hết phiên đăng nhập!');\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('user');\r\n    }\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    setLoading(true);\r\n    console.log('Success:', values);\r\n    try {\r\n      const resetPassRes = await AuthApis.resetPassViaEmail(values);\r\n      console.log('resetPassRes: ', resetPassRes);\r\n      if (resetPassRes?.status === 200 && resetPassRes?.data) {\r\n        toast.success('Mật khẩu mới đã được gửi về mail của bạn');\r\n        setLoading(false);\r\n        history.push('/login');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n      toast.error('Thay đổi mật khẩu không thành công!');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-box\">\r\n        <div className=\"illustration-wrapper\">\r\n          <img src=\"shttps://mixkit.imgix.net/art/preview/mixkit-left-handed-man-sitting-at-a-table-writing-in-a-notebook-27-original-large.png?q=80&auto=format%2Ccompress&h=700\" alt=\"Login\" />\r\n        </div>\r\n        <Spin spinning={loading}>\r\n          <Form\r\n            name=\"login-form\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <p className=\"form-title\">Quên mật khẩu</p>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                { max: 255, message: 'Email tối đa 255 ký tự!' },\r\n                {\r\n                  required: true,\r\n                  message: 'Vui lòng nhập email của bạn!'\r\n                },\r\n                {\r\n                  validator: (_, value) => {\r\n                    const regex = new RegExp(/^[a-z0-9](\\.?[a-z0-9]){2,}@gmail\\.com$/gi);\r\n                    if ((regex.test(value) && value)) {\r\n                      return Promise.resolve();\r\n                    } else {\r\n                      return Promise.reject('Email không đúng định dạng!');\r\n                    }\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <div\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  color: '#349eff',\r\n                }}\r\n                onClick={() => history.push('/login')}\r\n              >\r\n                Quay về trang đăng nhập\r\n              </div>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                Xác nhận\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Spin>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;","import React, { useEffect } from 'react'\n\nimport './layout.scss';\n\nimport Sidebar from '../sidebar/Sidebar'\nimport TopNav from '../topnav/TopNav'\n// import Routes from '../Routes'\n\nimport { BrowserRouter, Redirect, Route, Switch, useHistory } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction';\nimport TestRouter from '../../pages/TestRouter';\nimport RoutesAdmin from '../Routes';\nimport Login from '../../pages/Auth/Login';\nimport RoutesDoctor from '../RoutesDoctor';\nimport AuthApis from '../../apis/Auth';\nimport { toast } from 'react-toastify';\nimport ForgotPassword from '../../pages/Auth/ForgotPassword';\nimport NotFoundPage from '../../pages/NotFound';\n\nconst Layout = () => {\n    // const [user, setUser] = useState({})\n    let history = useHistory();\n    // let location = useLocation();\n    console.log('history: ', history);\n\n    const themeReducer = useSelector(state => state.ThemeReducer)\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light');\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light');\n\n        dispatch(ThemeAction.setMode(themeClass))\n        dispatch(ThemeAction.setColor(colorClass))\n    }, [dispatch])\n\n    // useEffect(() => {\n    //     checkToken();\n    // }, []);\n\n    /// check user ở đây\n    const checkToken = async () => {\n        try {\n            const dataCheckToken = await AuthApis.authMe();\n            console.log('dataCheckToken: ', dataCheckToken);\n        } catch (error) {\n            console.log('error: ', error);\n            toast.error('Hết phiên đăng nhập!');\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('user');\n            history.push('/login');\n        }\n    }\n\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const accessToken = localStorage.getItem('accessToken');\n    // console.log('use: ', user);\n\n    return (\n        <>\n            <BrowserRouter>\n                {/* <Route path='/test-router-3'>\n                    <TestRouter />\n                </Route> */}\n\n\n                <Switch>\n                    <Redirect exact from=\"/\" to='/login' />\n                    <Route path='/quen-mat-khau' component={ForgotPassword} />\n\n                    {/* <Route path='/' exact render={() => <div>home</div>} /> */}\n\n                    <Route path='/login' exact component={Login} />\n\n                    {/* {user && user.role && user.role === 'ADMIN' && ( */}\n                    {/* <Route path='/admin' render={(props) => (\n                        <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                            <Sidebar {...{ ...props, user }} />\n                            <div className=\"layout__content\">\n                                <TopNav userData={user} />\n                                <div className=\"layout__content-main\">\n                                    <Switch>\n                                        <RoutesAdmin />\n                                    </Switch>\n\n                                </div>\n                            </div>\n                        </div>\n                    )} /> */}\n\n                    <Route path='/admin' render={(props) => (\n                        <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                            <Sidebar {...{ ...props }} />\n                            <RoutesAdmin />\n                        </div>\n                    )} />\n\n\n                    {/* <Route path='/test-router' render={() => <div style={{marginBottom: '10px'}}>Test</div>}/> */}\n                    {/* {user && user.role && (user.role === 'DOCTOR' || user.role === 'MANAGER_CLINIC') && (\n                        <Route path='/he-thong' render={(props) => (\n                            <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                                <Sidebar {...{ ...props, user }} />\n                                <div className=\"layout__content\">\n                                    <TopNav userData={user} />\n                                    <div className=\"layout__content-main\">\n                                        <Switch>\n                                            <RoutesDoctor />\n                                        </Switch>\n                                    </div>\n                                </div>\n                            </div>\n                        )} />\n                    )} */}\n\n                    <Route path='/he-thong' render={(props) => (\n                        <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                            <Sidebar {...{ ...props }} />\n                            <RoutesDoctor />\n                        </div>\n                    )} />\n\n                    <Route path='*' component={NotFoundPage} />\n                </Switch>\n            </BrowserRouter>\n\n        </>\n    )\n}\n\nexport default Layout\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals'\n\nimport { createStore } from 'redux'\n\nimport { Provider } from 'react-redux'\n\nimport rootReducer from './redux/reducers'\n\nimport './assets/css/index.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\nimport './assets/css/grid.css';\nimport './assets/css/theme.css';\n\nimport Layout from './components/layout/Layout'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\n\nconst store = createStore(\n  rootReducer\n)\n\n// document.title = 'Tua CRM'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Layout />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}